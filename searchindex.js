Search.setIndex({"alltitles": {"(-1 0 0)": [[60, "id3"]], "(0 -1 0)": [[60, "id2"]], "(010)": [[60, "id1"]], "(011)": [[60, "id5"]], "(040) reflection test": [[57, "id1"], [58, "id1"], [61, "id1"]], "(0k0) scan near (040)": [[57, "k0-scan-near-040"], [58, "k0-scan-near-040"]], "(100)": [[60, "id4"]], "(400) reflection test": [[57, "reflection-test"], [58, "reflection-test"], [61, "reflection-test"]], "(h00) scan near (400)": [[57, "h00-scan-near-400"], [58, "h00-scan-near-400"], [61, "h00-scan-near-400"]], "(hk0) scan near (440)": [[57, "hk0-scan-near-440"], [58, "hk0-scan-near-440"], [61, "hk0-scan-near-440"]], "0.1.0": [[81, "id1"]], "4-circle with extra axes": [[56, "circle-with-extra-axes"]], "A Diffractometer object": [[47, "a-diffractometer-object"]], "API Reference": [[40, null]], "About": [[77, "about"]], "Add 2 reflections": [[63, "add-2-reflections"]], "Add 3 reflections": [[62, "add-3-reflections"]], "Add a sample": [[65, "add-a-sample"]], "Add a sample with a crystal structure": [[57, "add-a-sample-with-a-crystal-structure"], [58, "add-a-sample-with-a-crystal-structure"], [61, "add-a-sample-with-a-crystal-structure"]], "Add additional Signals and Devices": [[73, "add-additional-signals-and-devices"]], "Add additional positioner": [[73, "add-additional-positioner"]], "Additional Design Goals": [[56, "additional-design-goals"]], "Additional Solvers": [[44, "additional-solvers"]], "Apply axis cuts": [[45, "apply-axis-cuts"]], "Attributes": [[0, "attributes"], [1, "attributes"], [3, "attributes"], [8, "attributes"], [9, "attributes"], [10, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [16, "attributes"], [19, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [26, "attributes"], [27, "attributes"], [28, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [38, "attributes"], [39, "attributes"]], "Auto-assignment": [[71, "auto-assignment"]], "Available Solver Geometry Tables": [[67, "available-solver-geometry-tables"]], "Basic hklpy2 package information": [[56, "basic-hklpy2-package-information"]], "Calculate (002) with (220) as second diffracting plane": [[72, "calculate-002-with-220-as-second-diffracting-plane"]], "Calculate (002) with (222) as second diffracting plane": [[72, "calculate-002-with-222-as-second-diffracting-plane"]], "Calculate motor positions for hkl": [[65, "calculate-motor-positions-for-hkl"]], "Calculate various (hkl) given motor positions": [[60, "calculate-various-hkl-given-motor-positions"]], "Can we add other pseudo axes?": [[73, "can-we-add-other-pseudo-axes"]], "Change a constraint": [[45, "change-a-constraint"]], "Change samples": [[56, "change-samples"]], "Change the sample lattice": [[62, "change-the-sample-lattice"]], "Check forward(040)": [[58, "check-forward-040"], [61, "check-forward-040"]], "Check forward(400)": [[57, "check-forward-400"], [58, "check-forward-400"], [61, "check-forward-400"]], "Check inverse() at (040)": [[58, "check-inverse-at-040"], [61, "check-inverse-at-040"]], "Check inverse() at (400)": [[57, "check-inverse-at-400"], [58, "check-inverse-at-400"], [61, "check-inverse-at-400"]], "Check the forward calculation: (040)": [[57, "check-the-forward-calculation-040"]], "Check the inverse calculation: (040)": [[57, "check-the-inverse-calculation-040"]], "Check the orientation matrix": [[57, "check-the-orientation-matrix"], [58, "check-the-orientation-matrix"], [61, "check-the-orientation-matrix"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [5, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [17, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [28, "classes"], [38, "classes"], [39, "classes"]], "Compare hkl_soleil E4CV with SPEC fourc": [[66, null]], "Compute $\\psi$ at fixed $Q$ and $hkl_2$": [[59, "compute-psi-at-fixed-q-and-hkl-2"]], "Compute UB": [[63, "compute-ub"]], "Compute refined lattice": [[62, "compute-refined-lattice"]], "Compute the UB matrix from two reflections": [[60, "compute-the-ub-matrix-from-two-reflections"]], "Compute the UB orientation matrix": [[57, "compute-the-ub-orientation-matrix"], [58, "compute-the-ub-orientation-matrix"], [61, "compute-the-ub-orientation-matrix"]], "Concepts": [[41, null]], "Concise Summary": [[59, "concise-summary"]], "Conda - conda-forge": [[78, "conda-conda-forge"]], "Constrain one of the motors": [[61, "constrain-one-of-the-motors"]], "Constrain the motors to limited ranges": [[57, "constrain-the-motors-to-limited-ranges"], [58, "constrain-the-motors-to-limited-ranges"]], "Constraints": [[45, null]], "Core Operations": [[49, null]], "Create a diffractometer object": [[62, "create-a-diffractometer-object"], [63, "create-a-diffractometer-object"], [64, "create-a-diffractometer-object"]], "Create a simulated diffractometer for calculations": [[60, "create-a-simulated-diffractometer-for-calculations"]], "Create the diffractometer object.": [[76, "create-the-diffractometer-object"]], "Create the tardis object.": [[65, "create-the-tardis-object"]], "Crystal Lattice": [[48, null]], "Custom Diffractometer class": [[71, "custom-diffractometer-class"]], "Custom Diffractometer with additional axes": [[71, "custom-diffractometer-with-additional-axes"]], "Defaults": [[62, "defaults"], [63, "defaults"], [64, "defaults"]], "Define and orient a sample": [[59, "define-and-orient-a-sample"]], "Define this diffractometer": [[57, "define-this-diffractometer"], [58, "define-this-diffractometer"], [61, "define-this-diffractometer"]], "Demonstrate hklpy2\u2019s API": [[56, null]], "Design for hklpy2": [[44, null]], "Design ideas (from 2020 RFP)": [[44, "design-ideas-from-2020-rfp"]], "Desired API": [[44, "desired-api"]], "Development": [[78, "development"]], "Differences between hklpy v1 & hklpy2 v2": [[44, "differences-between-hklpy-v1-hklpy2-v2"]], "Diffracting upside-down now": [[60, "diffracting-upside-down-now"]], "Diffractometer": [[47, null]], "Diffractometer Axis Names": [[71, null]], "Diffractometer Configuration \u2013 Save and Restore": [[70, null]], "Diffractometer Creator": [[71, "diffractometer-creator"]], "Diffractometer Extra Motors": [[73, null]], "Diffractometer Extra Solver Parameters": [[72, null]], "Diffractometer creator": [[46, null]], "Diffractometer wavelength": [[58, "diffractometer-wavelength"], [61, "diffractometer-wavelength"]], "Diffractometers": [[67, null]], "E4CV, hkl, double_diffraction": [[72, "e4cv-hkl-double-diffraction"]], "Easy to create a simulated diffractometer": [[56, "easy-to-create-a-simulated-diffractometer"]], "Examples": [[51, "examples"], [55, null]], "Exceptions": [[23, "exceptions"], [24, "exceptions"]], "Experimental data for comparison": [[65, "experimental-data-for-comparison"]], "Export (save) the configuration": [[70, "export-save-the-configuration"]], "Feature Checklist for v2": [[43, null]], "Files": [[70, "files"]], "Freeze an axis": [[45, "freeze-an-axis"]], "Functions": [[1, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"]], "Geometries, by number of real axes": [[67, "geometries-by-number-of-real-axes"]], "Glossary": [[68, null]], "Guides": [[69, null]], "How to select a Solver": [[52, "how-to-select-a-solver"]], "How to write a Solver": [[52, "how-to-write-a-solver"]], "How to write a new Solver": [[74, null]], "Installation": [[78, null]], "License": [[79, null]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"]], "Move": [[65, "move"]], "Move to the $(111)$ orientation": [[59, "move-to-the-111-orientation"]], "NSLS-II tardis diffractometer": [[65, null]], "Notice": [[81, "notice"]], "Objective": [[76, "objective"]], "Orient the sample": [[65, "orient-the-sample"]], "Orientation Reflection": [[50, null]], "Orienting Reflections": [[56, "orienting-reflections"]], "Other": [[44, "other"]], "Overview": [[41, "overview"], [42, null], [59, "overview"]], "Package Contents": [[2, "package-contents"], [23, "package-contents"], [27, "package-contents"]], "Parts of DiffractometerBase": [[47, "parts-of-diffractometerbase"]], "Pip - PyPI": [[78, "pip-pypi"]], "Pip - Source": [[78, "pip-source"]], "Plot any motions": [[59, "plot-any-motions"]], "Plot the (hkl) trajectories in the scan": [[66, "plot-the-hkl-trajectories-in-the-scan"]], "Python entrypoints": [[44, "python-entrypoints"]], "Quick example": [[64, "quick-example"]], "Quickstart": [[80, null]], "Read the SPEC scan from the data file": [[66, "read-the-spec-scan-from-the-data-file"]], "Reflections": [[44, "reflections"]], "Releases": [[81, null]], "Report our setup": [[57, "report-our-setup"], [58, "report-our-setup"], [61, "report-our-setup"]], "Restore (load) Configuration": [[70, "restore-load-configuration"]], "Restore from previous run": [[70, "restore-from-previous-run"]], "Review of terminology coordinate systems": [[44, "review-of-terminology-coordinate-systems"]], "Run": [[70, "run"]], "SPEC commands in hklpy2": [[75, null]], "SPEC data file": [[66, "spec-data-file"]], "Sample": [[51, null]], "Save configuration with every run": [[70, "save-configuration-with-every-run"]], "Save the orientation to a file": [[65, "save-the-orientation-to-a-file"]], "Scan $\\psi$ at fixed $Q$ and $hkl_2$": [[59, "scan-psi-at-fixed-q-and-hkl-2"]], "Scan in reciprocal space using Bluesky": [[57, "scan-in-reciprocal-space-using-bluesky"], [58, "scan-in-reciprocal-space-using-bluesky"], [61, "scan-in-reciprocal-space-using-bluesky"]], "Set ${hkl}_2$ and $\\psi$": [[59, "set-hkl-2-and-psi"]], "Set UB to new matrix": [[64, "set-ub-to-new-matrix"]], "Set the wavelength of the source.": [[65, "set-the-wavelength-of-the-source"]], "Setup E6C Simulators": [[59, "setup-e6c-simulators"]], "Setup the E4CH diffractometer in hklpy2": [[57, "setup-the-e4ch-diffractometer-in-hklpy2"]], "Setup the E4CV diffractometer in hklpy": [[66, "setup-the-e4cv-diffractometer-in-hklpy"]], "Setup the E4CV diffractometer in hklpy2": [[58, "setup-the-e4cv-diffractometer-in-hklpy2"]], "Setup the UB orientation matrix using hklpy": [[57, "setup-the-ub-orientation-matrix-using-hklpy"], [58, "setup-the-ub-orientation-matrix-using-hklpy"], [61, "setup-the-ub-orientation-matrix-using-hklpy"], [66, "setup-the-ub-orientation-matrix-using-hklpy"]], "Setup the crystal lattice": [[60, "setup-the-crystal-lattice"]], "Show the computed U matrix": [[60, "show-the-computed-u-matrix"]], "Show the computed UB matrix": [[60, "show-the-computed-ub-matrix"]], "Show the configuration": [[57, "show-the-configuration"], [58, "show-the-configuration"]], "Show the current constraints": [[45, "show-the-current-constraints"]], "Simulated Fourc": [[56, "simulated-fourc"]], "Solver: hkl_soleil": [[52, "solver-hkl-soleil"]], "Solver: no_op": [[52, "solver-no-op"]], "Solver: th_tth": [[52, "solver-th-tth"]], "Solvers": [[52, null]], "Sources": [[44, "sources"]], "Specify the first reflection": [[57, "specify-the-first-reflection"], [58, "specify-the-first-reflection"], [61, "specify-the-first-reflection"]], "Specify the second reflection": [[57, "specify-the-second-reflection"], [58, "specify-the-second-reflection"], [61, "specify-the-second-reflection"]], "Standard 2-circle": [[73, "standard-2-circle"]], "Steps": [[59, "steps"]], "Steps to define a diffractometer object": [[47, "steps-to-define-a-diffractometer-object"]], "Submodules": [[2, "submodules"], [4, "submodules"], [11, "submodules"], [15, "submodules"], [23, "submodules"], [27, "submodules"]], "Support for Additions": [[44, "support-for-additions"]], "Test hklpy with the UB orientation matrix from SPEC": [[66, "test-hklpy-with-the-ub-orientation-matrix-from-spec"]], "Try it out": [[63, "try-it-out"], [64, "try-it-out"]], "Use E4CV\u2019s $Q$ calculation engine": [[76, null]], "Use a Diffractometer with the bluesky RunEngine": [[47, "use-a-diffractometer-with-the-bluesky-runengine"]], "User Friendliness": [[53, null]], "User Guide": [[82, null]], "User-defined axis names": [[71, "user-defined-axis-names"]], "Verify that $\\omega+\\varphi = \\pm 120$ is kept.": [[60, "verify-that-omega-varphi-pm-120-is-kept"]], "Wavelength": [[54, null]], "chi scan from (400) to (040)": [[57, "chi-scan-from-400-to-040"], [58, "chi-scan-from-400-to-040"]], "compute the motor positions for a reflection": [[51, "compute-the-motor-positions-for-a-reflection"]], "core": [[47, "core"]], "define a sample with a lattice": [[51, "define-a-sample-with-a-lattice"]], "define an orientation matrix": [[51, "define-an-orientation-matrix"]], "geometry": [[47, "geometry"]], "hkl_soleil E4CH": [[57, null]], "hkl_soleil E4CV": [[58, null]], "hkl_soleil E6C psi axis": [[59, null]], "hkl_soleil E6C test of calculations": [[60, null]], "hkl_soleil K4CV": [[61, null]], "hkl_soleil Refine lattice from 3 reflections": [[62, null]], "hkl_soleil UB matrix : Set directly": [[64, null]], "hkl_soleil UB matrix : calculate from 2 reflections.": [[63, null]], "hklpy release v2.0 project": [[44, "hklpy-release-v2-0-project"]], "hklpy v1": [[44, "hklpy-v1"]], "hklpy2": [[23, null], [77, null]], "hklpy2 v2": [[44, "hklpy2-v2"]], "hklpy2.backends": [[2, null]], "hklpy2.backends.base": [[0, null]], "hklpy2.backends.hkl_soleil": [[1, null]], "hklpy2.backends.no_op": [[3, null]], "hklpy2.backends.tests": [[4, null]], "hklpy2.backends.tests.test_base": [[5, null]], "hklpy2.backends.tests.test_hkl_soleil": [[6, null]], "hklpy2.backends.tests.test_th_tth_q": [[7, null]], "hklpy2.backends.th_tth_q": [[8, null]], "hklpy2.blocks": [[11, null]], "hklpy2.blocks.configure": [[9, null]], "hklpy2.blocks.constraints": [[10, null]], "hklpy2.blocks.lattice": [[12, null]], "hklpy2.blocks.reflection": [[13, null]], "hklpy2.blocks.sample": [[14, null]], "hklpy2.blocks.tests": [[15, null]], "hklpy2.blocks.tests.test_configure": [[16, null]], "hklpy2.blocks.tests.test_constraints": [[17, null]], "hklpy2.blocks.tests.test_lattice": [[18, null]], "hklpy2.blocks.tests.test_reflection": [[19, null]], "hklpy2.blocks.tests.test_sample": [[20, null]], "hklpy2.blocks.tests.test_solver": [[21, null]], "hklpy2.diffract": [[22, null]], "hklpy2.misc": [[24, null]], "hklpy2.ops": [[25, null]], "hklpy2.tests": [[27, null]], "hklpy2.tests.common": [[26, null]], "hklpy2.tests.models": [[28, null]], "hklpy2.tests.test_backends": [[29, null]], "hklpy2.tests.test_demo_notebook": [[30, null]], "hklpy2.tests.test_diffract": [[31, null]], "hklpy2.tests.test_e4cv": [[32, null]], "hklpy2.tests.test_misc": [[33, null]], "hklpy2.tests.test_ops": [[34, null]], "hklpy2.tests.test_tardis": [[35, null]], "hklpy2.tests.test_user": [[36, null]], "hklpy2.tests.test_wavelength_support": [[37, null]], "hklpy2.user": [[38, null]], "hklpy2.wavelength_support": [[39, null]], "lattice": [[47, "lattice"]], "mode": [[47, "mode"]], "name": [[47, "name"]], "orientation": [[47, "orientation"]], "orientation reflections": [[47, "orientation-reflections"]], "q engine": [[76, "q-engine"]], "sample": [[47, "sample"]], "scan $(h40)$ with $\\varphi=0$": [[58, "scan-h40-with-varphi-0"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019APS POLAR\u2019": [[67, "solver-hkl-soleil-geometry-aps-polar"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019E4CH\u2019": [[67, "solver-hkl-soleil-geometry-e4ch"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019E4CV\u2019": [[67, "solver-hkl-soleil-geometry-e4cv"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019E6C\u2019": [[67, "solver-hkl-soleil-geometry-e6c"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019ESRF ID01 PSIC\u2019": [[67, "solver-hkl-soleil-geometry-esrf-id01-psic"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019K4CV\u2019": [[67, "solver-hkl-soleil-geometry-k4cv"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019K6C\u2019": [[67, "solver-hkl-soleil-geometry-k6c"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019PETRA3 P09 EH2\u2019": [[67, "solver-hkl-soleil-geometry-petra3-p09-eh2"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019PETRA3 P23 4C\u2019": [[67, "solver-hkl-soleil-geometry-petra3-p23-4c"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019PETRA3 P23 6C\u2019": [[67, "solver-hkl-soleil-geometry-petra3-p23-6c"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL MARS\u2019": [[67, "solver-hkl-soleil-geometry-soleil-mars"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL NANOSCOPIUM ROBOT\u2019": [[67, "solver-hkl-soleil-geometry-soleil-nanoscopium-robot"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL SIRIUS KAPPA\u2019": [[67, "solver-hkl-soleil-geometry-soleil-sirius-kappa"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL SIRIUS TURRET\u2019": [[67, "solver-hkl-soleil-geometry-soleil-sirius-turret"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL SIXS MED1+2\u2019": [[67, "solver-hkl-soleil-geometry-soleil-sixs-med1-2"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL SIXS MED2+2\u2019": [[67, "solver-hkl-soleil-geometry-soleil-sixs-med2-2"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL SIXS MED2+3 v2\u2019": [[67, "solver-hkl-soleil-geometry-soleil-sixs-med2-3-v2"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019SOLEIL SIXS MED2+3\u2019": [[67, "solver-hkl-soleil-geometry-soleil-sixs-med2-3"]], "solver=\u2019hkl_soleil\u2019, geometry=\u2019ZAXIS\u2019": [[67, "solver-hkl-soleil-geometry-zaxis"]], "solver=\u2019th_tth\u2019, geometry=\u2019TH TTH Q\u2019": [[67, "solver-th-tth-geometry-th-tth-q"]], "wavelength (and energy)": [[47, "wavelength-and-energy"]]}, "docnames": ["autoapi/hklpy2/backends/base/index", "autoapi/hklpy2/backends/hkl_soleil/index", "autoapi/hklpy2/backends/index", "autoapi/hklpy2/backends/no_op/index", "autoapi/hklpy2/backends/tests/index", "autoapi/hklpy2/backends/tests/test_base/index", "autoapi/hklpy2/backends/tests/test_hkl_soleil/index", "autoapi/hklpy2/backends/tests/test_th_tth_q/index", "autoapi/hklpy2/backends/th_tth_q/index", "autoapi/hklpy2/blocks/configure/index", "autoapi/hklpy2/blocks/constraints/index", "autoapi/hklpy2/blocks/index", "autoapi/hklpy2/blocks/lattice/index", "autoapi/hklpy2/blocks/reflection/index", "autoapi/hklpy2/blocks/sample/index", "autoapi/hklpy2/blocks/tests/index", "autoapi/hklpy2/blocks/tests/test_configure/index", "autoapi/hklpy2/blocks/tests/test_constraints/index", "autoapi/hklpy2/blocks/tests/test_lattice/index", "autoapi/hklpy2/blocks/tests/test_reflection/index", "autoapi/hklpy2/blocks/tests/test_sample/index", "autoapi/hklpy2/blocks/tests/test_solver/index", "autoapi/hklpy2/diffract/index", "autoapi/hklpy2/index", "autoapi/hklpy2/misc/index", "autoapi/hklpy2/ops/index", "autoapi/hklpy2/tests/common/index", "autoapi/hklpy2/tests/index", "autoapi/hklpy2/tests/models/index", "autoapi/hklpy2/tests/test_backends/index", "autoapi/hklpy2/tests/test_demo_notebook/index", "autoapi/hklpy2/tests/test_diffract/index", "autoapi/hklpy2/tests/test_e4cv/index", "autoapi/hklpy2/tests/test_misc/index", "autoapi/hklpy2/tests/test_ops/index", "autoapi/hklpy2/tests/test_tardis/index", "autoapi/hklpy2/tests/test_user/index", "autoapi/hklpy2/tests/test_wavelength_support/index", "autoapi/hklpy2/user/index", "autoapi/hklpy2/wavelength_support/index", "autoapi/index", "concepts", "concepts/__overview", "concepts/_checklist_v2", "concepts/_design-discussion", "concepts/constraints", "concepts/creator", "concepts/diffract", "concepts/lattice", "concepts/ops", "concepts/reflection", "concepts/sample", "concepts/solvers", "concepts/user", "concepts/wavelength", "examples", "examples/_api_demo", "examples/hkl_soleil-e4ch", "examples/hkl_soleil-e4cv", "examples/hkl_soleil-e6c-psi", "examples/hkl_soleil-e6c-test_calculations", "examples/hkl_soleil-k4cv", "examples/hkl_soleil-lattice_refine", "examples/hkl_soleil-ub_calc", "examples/hkl_soleil-ub_set", "examples/nslsii-tardis", "examples/tst_e4cv_fourc", "geometry_tables", "glossary", "guides", "guides/configuration_save_restore", "guides/diffract", "guides/how_additional_parameters", "guides/how_extra_real_axis", "guides/howto_write_solver", "guides/spec_xref", "guides/var_engines", "index", "install", "license", "quickstart", "release_notes", "user_guide"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/hklpy2/backends/base/index.rst", "autoapi/hklpy2/backends/hkl_soleil/index.rst", "autoapi/hklpy2/backends/index.rst", "autoapi/hklpy2/backends/no_op/index.rst", "autoapi/hklpy2/backends/tests/index.rst", "autoapi/hklpy2/backends/tests/test_base/index.rst", "autoapi/hklpy2/backends/tests/test_hkl_soleil/index.rst", "autoapi/hklpy2/backends/tests/test_th_tth_q/index.rst", "autoapi/hklpy2/backends/th_tth_q/index.rst", "autoapi/hklpy2/blocks/configure/index.rst", "autoapi/hklpy2/blocks/constraints/index.rst", "autoapi/hklpy2/blocks/index.rst", "autoapi/hklpy2/blocks/lattice/index.rst", "autoapi/hklpy2/blocks/reflection/index.rst", "autoapi/hklpy2/blocks/sample/index.rst", "autoapi/hklpy2/blocks/tests/index.rst", "autoapi/hklpy2/blocks/tests/test_configure/index.rst", "autoapi/hklpy2/blocks/tests/test_constraints/index.rst", "autoapi/hklpy2/blocks/tests/test_lattice/index.rst", "autoapi/hklpy2/blocks/tests/test_reflection/index.rst", "autoapi/hklpy2/blocks/tests/test_sample/index.rst", "autoapi/hklpy2/blocks/tests/test_solver/index.rst", "autoapi/hklpy2/diffract/index.rst", "autoapi/hklpy2/index.rst", "autoapi/hklpy2/misc/index.rst", "autoapi/hklpy2/ops/index.rst", "autoapi/hklpy2/tests/common/index.rst", "autoapi/hklpy2/tests/index.rst", "autoapi/hklpy2/tests/models/index.rst", "autoapi/hklpy2/tests/test_backends/index.rst", "autoapi/hklpy2/tests/test_demo_notebook/index.rst", "autoapi/hklpy2/tests/test_diffract/index.rst", "autoapi/hklpy2/tests/test_e4cv/index.rst", "autoapi/hklpy2/tests/test_misc/index.rst", "autoapi/hklpy2/tests/test_ops/index.rst", "autoapi/hklpy2/tests/test_tardis/index.rst", "autoapi/hklpy2/tests/test_user/index.rst", "autoapi/hklpy2/tests/test_wavelength_support/index.rst", "autoapi/hklpy2/user/index.rst", "autoapi/hklpy2/wavelength_support/index.rst", "autoapi/index.rst", "concepts.rst", "concepts/__overview.rst", "concepts/_checklist_v2.md", "concepts/_design-discussion.md", "concepts/constraints.rst", "concepts/creator.rst", "concepts/diffract.rst", "concepts/lattice.rst", "concepts/ops.rst", "concepts/reflection.rst", "concepts/sample.rst", "concepts/solvers.rst", "concepts/user.rst", "concepts/wavelength.rst", "examples.rst", "examples/_api_demo.ipynb", "examples/hkl_soleil-e4ch.ipynb", "examples/hkl_soleil-e4cv.ipynb", "examples/hkl_soleil-e6c-psi.ipynb", "examples/hkl_soleil-e6c-test_calculations.ipynb", "examples/hkl_soleil-k4cv.ipynb", "examples/hkl_soleil-lattice_refine.ipynb", "examples/hkl_soleil-ub_calc.ipynb", "examples/hkl_soleil-ub_set.ipynb", "examples/nslsii-tardis.ipynb", "examples/tst_e4cv_fourc.ipynb", "geometry_tables.rst", "glossary.rst", "guides.rst", "guides/configuration_save_restore.ipynb", "guides/diffract.rst", "guides/how_additional_parameters.ipynb", "guides/how_extra_real_axis.ipynb", "guides/howto_write_solver.rst", "guides/spec_xref.rst", "guides/var_engines.ipynb", "index.rst", "install.rst", "license.rst", "quickstart.rst", "release_notes.rst", "user_guide.rst"], "indexentries": {"__all__ (in module hklpy2.diffract)": [[22, "hklpy2.diffract.__all__", false]], "__all__ (in module hklpy2.user)": [[38, "hklpy2.user.__all__", false]], "__eq__() (hklpy2.blocks.lattice.lattice method)": [[12, "hklpy2.blocks.lattice.Lattice.__eq__", false]], "__eq__() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection.__eq__", false]], "__package_name__ (in module hklpy2)": [[23, "hklpy2.__package_name__", false]], "__repr__() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.__repr__", false]], "__repr__() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.__repr__", false]], "__repr__() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.__repr__", false]], "__repr__() (hklpy2.blocks.constraints.constraintbase method)": [[10, "hklpy2.blocks.constraints.ConstraintBase.__repr__", false]], "__repr__() (hklpy2.blocks.constraints.limitsconstraint method)": [[10, "hklpy2.blocks.constraints.LimitsConstraint.__repr__", false]], "__repr__() (hklpy2.blocks.constraints.realaxisconstraints method)": [[10, "hklpy2.blocks.constraints.RealAxisConstraints.__repr__", false]], "__repr__() (hklpy2.blocks.lattice.lattice method)": [[12, "hklpy2.blocks.lattice.Lattice.__repr__", false]], "__repr__() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection.__repr__", false]], "__repr__() (hklpy2.blocks.sample.sample method)": [[14, "hklpy2.blocks.sample.Sample.__repr__", false]], "__repr__() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.__repr__", false]], "__settings_orgname__ (in module hklpy2)": [[23, "hklpy2.__settings_orgName__", false]], "__version__ (in module hklpy2)": [[23, "hklpy2.__version__", false]], "_asdict() (hklpy2.blocks.configure.configuration method)": [[9, "hklpy2.blocks.configure.Configuration._asdict", false]], "_asdict() (hklpy2.blocks.constraints.constraintbase method)": [[10, "hklpy2.blocks.constraints.ConstraintBase._asdict", false]], "_asdict() (hklpy2.blocks.constraints.realaxisconstraints method)": [[10, "hklpy2.blocks.constraints.RealAxisConstraints._asdict", false]], "_asdict() (hklpy2.blocks.lattice.lattice method)": [[12, "hklpy2.blocks.lattice.Lattice._asdict", false]], "_asdict() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection._asdict", false]], "_asdict() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict._asdict", false]], "_asdict() (hklpy2.blocks.sample.sample method)": [[14, "hklpy2.blocks.sample.Sample._asdict", false]], "_asdict() (hklpy2.configuration method)": [[23, "hklpy2.Configuration._asdict", false]], "_asdict() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations._asdict", false]], "_asdict() (hklpy2.wavelength_support.wavelengthbase method)": [[39, "hklpy2.wavelength_support.WavelengthBase._asdict", false]], "_axes_names_d2s() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations._axes_names_d2s", false]], "_axes_names_s2d() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations._axes_names_s2d", false]], "_backend (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase._backend", false]], "_backend (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase._backend", false]], "_choice (in module hklpy2.user)": [[38, "hklpy2.user._choice", false]], "_detector (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._detector", false]], "_engine (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._engine", false]], "_engine_list (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._engine_list", false]], "_factory (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._factory", false]], "_fields (hklpy2.blocks.constraints.constraintbase attribute)": [[10, "hklpy2.blocks.constraints.ConstraintBase._fields", false]], "_fields (hklpy2.blocks.constraints.limitsconstraint attribute)": [[10, "hklpy2.blocks.constraints.LimitsConstraint._fields", false]], "_forward_solution (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase._forward_solution", false]], "_forward_solution (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase._forward_solution", false]], "_fromdict() (hklpy2.blocks.configure.configuration method)": [[9, "hklpy2.blocks.configure.Configuration._fromdict", false]], "_fromdict() (hklpy2.blocks.constraints.constraintbase method)": [[10, "hklpy2.blocks.constraints.ConstraintBase._fromdict", false]], "_fromdict() (hklpy2.blocks.constraints.realaxisconstraints method)": [[10, "hklpy2.blocks.constraints.RealAxisConstraints._fromdict", false]], "_fromdict() (hklpy2.blocks.lattice.lattice method)": [[12, "hklpy2.blocks.lattice.Lattice._fromdict", false]], "_fromdict() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection._fromdict", false]], "_fromdict() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict._fromdict", false]], "_fromdict() (hklpy2.blocks.sample.sample method)": [[14, "hklpy2.blocks.sample.Sample._fromdict", false]], "_fromdict() (hklpy2.configuration method)": [[23, "hklpy2.Configuration._fromdict", false]], "_fromdict() (hklpy2.constantmonochromaticwavelength method)": [[23, "hklpy2.ConstantMonochromaticWavelength._fromdict", false]], "_fromdict() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations._fromdict", false]], "_fromdict() (hklpy2.wavelength_support.constantmonochromaticwavelength method)": [[39, "hklpy2.wavelength_support.ConstantMonochromaticWavelength._fromdict", false]], "_fromdict() (hklpy2.wavelength_support.wavelengthbase method)": [[39, "hklpy2.wavelength_support.WavelengthBase._fromdict", false]], "_fromdict_core() (hklpy2.wavelength_support.wavelengthbase method)": [[39, "hklpy2.wavelength_support.WavelengthBase._fromdict_core", false]], "_geometry (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._geometry", false]], "_gname_locked (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._gname_locked", false]], "_metadata (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase._metadata", false]], "_metadata (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase._metadata", false]], "_metadata (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase._metadata", false]], "_order (hklpy2.blocks.reflection.reflectionsdict attribute)": [[13, "hklpy2.blocks.reflection.ReflectionsDict._order", false]], "_reflections (hklpy2.backends.th_tth_q.thtthsolver attribute)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver._reflections", false]], "_sample (hklpy2.backends.base.solverbase attribute)": [[0, "hklpy2.backends.base.SolverBase._sample", false]], "_sample (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._sample", false]], "_sample (hklpy2.backends.solverbase attribute)": [[2, "hklpy2.backends.SolverBase._sample", false]], "_sample (hklpy2.solverbase attribute)": [[23, "hklpy2.SolverBase._sample", false]], "_sample_name (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations._sample_name", false]], "_samples (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations._samples", false]], "_selecteddiffractometer (class in hklpy2.user)": [[38, "hklpy2.user._SelectedDiffractometer", false]], "_selection (hklpy2.user._selecteddiffractometer attribute)": [[38, "hklpy2.user._SelectedDiffractometer._selection", false]], "_solver (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations._solver", false]], "_source (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase._source", false]], "_source (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase._source", false]], "_summary_dict (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase._summary_dict", false]], "_summary_dict (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver._summary_dict", false]], "_summary_dict (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase._summary_dict", false]], "_summary_dict (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase._summary_dict", false]], "_valid() (hklpy2.blocks.configure.configuration method)": [[9, "hklpy2.blocks.configure.Configuration._valid", false]], "_valid() (hklpy2.configuration method)": [[23, "hklpy2.Configuration._valid", false]], "_validate_pseudos() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection._validate_pseudos", false]], "_validate_pseudos() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations._validate_pseudos", false]], "_validate_reals() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection._validate_reals", false]], "_validate_reflection() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict._validate_reflection", false]], "_validate_wavelength() (hklpy2.blocks.reflection.reflection method)": [[13, "hklpy2.blocks.reflection.Reflection._validate_wavelength", false]], "_wavelength (hklpy2.backends.th_tth_q.thtthsolver attribute)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver._wavelength", false]], "_wavelength (hklpy2.constantmonochromaticwavelength attribute)": [[23, "hklpy2.ConstantMonochromaticWavelength._wavelength", false]], "_wavelength (hklpy2.wavelength_support.constantmonochromaticwavelength attribute)": [[39, "hklpy2.wavelength_support.ConstantMonochromaticWavelength._wavelength", false]], "_wavelength_units (hklpy2.wavelength_support.wavelengthbase attribute)": [[39, "hklpy2.wavelength_support.WavelengthBase._wavelength_units", false]], "a (hklpy2.blocks.lattice.lattice attribute)": [[12, "hklpy2.blocks.lattice.Lattice.a", false]], "a_kev (in module hklpy2)": [[23, "hklpy2.A_KEV", false]], "a_kev (in module hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.A_KEV", false]], "add() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.add", false]], "add_oriented_vibranium_to_e4cv() (in module hklpy2.tests.models)": [[28, "hklpy2.tests.models.add_oriented_vibranium_to_e4cv", false]], "add_reflection (in module hklpy2.user)": [[38, "hklpy2.user.add_reflection", false]], "add_reflection() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.add_reflection", false]], "add_reflection() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.add_reflection", false]], "add_reflection() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.add_reflection", false]], "add_sample() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.add_sample", false]], "add_sample() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.add_sample", false]], "add_sample() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.add_sample", false]], "add_sample() (in module hklpy2.user)": [[38, "hklpy2.user.add_sample", false]], "addreflection() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.addReflection", false]], "addreflection() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.addReflection", false]], "addreflection() (hklpy2.backends.no_op.noopsolver method)": [[3, "hklpy2.backends.no_op.NoOpSolver.addReflection", false]], "addreflection() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.addReflection", false]], "addreflection() (hklpy2.backends.tests.test_base.trivialsolver method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.addReflection", false]], "addreflection() (hklpy2.backends.th_tth_q.thtthsolver method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.addReflection", false]], "addreflection() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.addReflection", false]], "alpha (hklpy2.blocks.lattice.lattice attribute)": [[12, "hklpy2.blocks.lattice.Lattice.alpha", false]], "another (hklpy2.tests.models.twoc attribute)": [[28, "hklpy2.tests.models.TwoC.another", false]], "anyaxestype (in module hklpy2.misc)": [[24, "hklpy2.misc.AnyAxesType", false]], "assert_context_result() (in module hklpy2.tests.common)": [[26, "hklpy2.tests.common.assert_context_result", false]], "assign_axes() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.assign_axes", false]], "augmentedfourc (class in hklpy2.tests.models)": [[28, "hklpy2.tests.models.AugmentedFourc", false]], "auto-assign axes": [[71, "index-0", true]], "auto_assign_axes() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.auto_assign_axes", false]], "auto_assign_axes() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.auto_assign_axes", false]], "auto_assign_axes() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.auto_assign_axes", false]], "axes_c (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.axes_c", false]], "axes_r (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.axes_r", false]], "axes_read (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.AXES_READ", false]], "axes_to_dict() (in module hklpy2.misc)": [[24, "hklpy2.misc.axes_to_dict", false]], "axes_w (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.axes_w", false]], "axes_written (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.AXES_WRITTEN", false]], "axes_xref (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations.axes_xref", false]], "axes_xref_reversed (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.axes_xref_reversed", false]], "axesarray (in module hklpy2.misc)": [[24, "hklpy2.misc.AxesArray", false]], "axesdict (in module hklpy2.misc)": [[24, "hklpy2.misc.AxesDict", false]], "axeslist (in module hklpy2.misc)": [[24, "hklpy2.misc.AxesList", false]], "axestuple (in module hklpy2.misc)": [[24, "hklpy2.misc.AxesTuple", false]], "axis": [[68, "index-2", true]], "axis names": [[71, "index-0", true]], "b (hklpy2.blocks.lattice.lattice attribute)": [[12, "hklpy2.blocks.lattice.Lattice.b", false]], "backend": [[68, "index-3", true]], "beta (hklpy2.blocks.lattice.lattice attribute)": [[12, "hklpy2.blocks.lattice.Lattice.beta", false]], "by number of reals": [[67, "index-1", false]], "c (hklpy2.blocks.lattice.lattice attribute)": [[12, "hklpy2.blocks.lattice.Lattice.c", false]], "cahkl() (in module hklpy2.user)": [[38, "hklpy2.user.cahkl", false]], "cahkl_table() (in module hklpy2.user)": [[38, "hklpy2.user.cahkl_table", false]], "calc_ub() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.calc_UB", false]], "calc_ub() (in module hklpy2.user)": [[38, "hklpy2.user.calc_UB", false]], "calculate_ub() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.calculate_UB", false]], "calculate_ub() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.calculate_UB", false]], "calculate_ub() (hklpy2.backends.no_op.noopsolver method)": [[3, "hklpy2.backends.no_op.NoOpSolver.calculate_UB", false]], "calculate_ub() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.calculate_UB", false]], "calculate_ub() (hklpy2.backends.tests.test_base.trivialsolver method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.calculate_UB", false]], "calculate_ub() (hklpy2.backends.th_tth_q.thtthsolver method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.calculate_UB", false]], "calculate_ub() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.calculate_UB", false]], "cat() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.cat", false]], "check_value_in_list() (in module hklpy2)": [[23, "hklpy2.check_value_in_list", false]], "check_value_in_list() (in module hklpy2.misc)": [[24, "hklpy2.misc.check_value_in_list", false]], "commands": [[75, "index-0", false]], "compare_float_dicts() (in module hklpy2.misc)": [[24, "hklpy2.misc.compare_float_dicts", false]], "configuration": [[68, "index-4", true]], "configuration (class in hklpy2)": [[23, "hklpy2.Configuration", false]], "configuration (class in hklpy2.blocks.configure)": [[9, "hklpy2.blocks.configure.Configuration", false]], "configuration (hklpy2.diffract.diffractometerbase property)": [[22, "hklpy2.diffract.DiffractometerBase.configuration", false]], "configuration (hklpy2.diffractometerbase property)": [[23, "hklpy2.DiffractometerBase.configuration", false]], "configuration (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations.configuration", false]], "configurationerror": [[24, "hklpy2.misc.ConfigurationError", false]], "configurationrunwrapper (class in hklpy2)": [[23, "hklpy2.ConfigurationRunWrapper", false]], "configurationrunwrapper (class in hklpy2.misc)": [[24, "hklpy2.misc.ConfigurationRunWrapper", false]], "constantmonochromaticwavelength (class in hklpy2)": [[23, "hklpy2.ConstantMonochromaticWavelength", false]], "constantmonochromaticwavelength (class in hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.ConstantMonochromaticWavelength", false]], "constraint": [[68, "index-5", true]], "constraintbase (class in hklpy2.blocks.constraints)": [[10, "hklpy2.blocks.constraints.ConstraintBase", false]], "constraints (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations.constraints", false]], "constraintserror": [[24, "hklpy2.misc.ConstraintsError", false]], "core": [[49, "index-0", true], [68, "index-6", true]], "core (hklpy2.blocks.sample.sample attribute)": [[14, "hklpy2.blocks.sample.Sample.core", false]], "core (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase.core", false]], "core (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase.core", false]], "creator() (in module hklpy2)": [[23, "hklpy2.creator", false]], "creator() (in module hklpy2.diffract)": [[22, "hklpy2.diffract.creator", false]], "crystal": [[68, "index-7", true]], "crystal_system (hklpy2.blocks.lattice.lattice property)": [[12, "hklpy2.blocks.lattice.Lattice.crystal_system", false]], "crystalsystem (in module hklpy2.blocks.lattice)": [[12, "hklpy2.blocks.lattice.CrystalSystem", false]], "cut points": [[45, "index-0", false]], "default_energy_units (in module hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.DEFAULT_ENERGY_UNITS", false]], "default_photon_energy_kev (in module hklpy2.diffract)": [[22, "hklpy2.diffract.DEFAULT_PHOTON_ENERGY_KEV", false]], "default_start_key (in module hklpy2.misc)": [[24, "hklpy2.misc.DEFAULT_START_KEY", false]], "default_wavelength (in module hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.DEFAULT_WAVELENGTH", false]], "default_wavelength_units (in module hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.DEFAULT_WAVELENGTH_UNITS", false]], "definition": [[68, "index-0", true], [68, "index-1", false], [68, "index-10", true], [68, "index-11", true], [68, "index-12", true], [68, "index-13", true], [68, "index-14", true], [68, "index-15", true], [68, "index-16", true], [68, "index-17", true], [68, "index-18", true], [68, "index-19", true], [68, "index-2", true], [68, "index-20", true], [68, "index-21", true], [68, "index-22", true], [68, "index-23", true], [68, "index-24", true], [68, "index-25", true], [68, "index-26", true], [68, "index-3", true], [68, "index-4", true], [68, "index-5", true], [68, "index-6", true], [68, "index-7", true], [68, "index-8", true], [68, "index-9", true]], "design": [[47, "index-0", true], [52, "index-0", true]], "detector": [[68, "index-8", true]], "device_names (hklpy2.configurationrunwrapper property)": [[23, "hklpy2.ConfigurationRunWrapper.device_names", false]], "device_names (hklpy2.misc.configurationrunwrapper property)": [[24, "hklpy2.misc.ConfigurationRunWrapper.device_names", false]], "devices (hklpy2.configurationrunwrapper attribute)": [[23, "hklpy2.ConfigurationRunWrapper.devices", false]], "devices (hklpy2.misc.configurationrunwrapper attribute)": [[24, "hklpy2.misc.ConfigurationRunWrapper.devices", false]], "dict_device_factory() (in module hklpy2.misc)": [[24, "hklpy2.misc.dict_device_factory", false]], "diffractometer": [[47, "index-0", true], [68, "index-9", true]], "diffractometer (hklpy2.blocks.configure.configuration attribute)": [[9, "hklpy2.blocks.configure.Configuration.diffractometer", false]], "diffractometer (hklpy2.configuration attribute)": [[23, "hklpy2.Configuration.diffractometer", false]], "diffractometer (hklpy2.ops.operations attribute)": [[25, "hklpy2.ops.Operations.diffractometer", false]], "diffractometer (hklpy2.user._selecteddiffractometer property)": [[38, "hklpy2.user._SelectedDiffractometer.diffractometer", false]], "diffractometer_class_factory() (in module hklpy2)": [[23, "hklpy2.diffractometer_class_factory", false]], "diffractometer_class_factory() (in module hklpy2.diffract)": [[22, "hklpy2.diffract.diffractometer_class_factory", false]], "diffractometerbase (class in hklpy2)": [[23, "hklpy2.DiffractometerBase", false]], "diffractometerbase (class in hklpy2.diffract)": [[22, "hklpy2.diffract.DiffractometerBase", false]], "diffractometererror": [[24, "hklpy2.misc.DiffractometerError", false]], "digits (hklpy2.blocks.lattice.lattice property)": [[12, "hklpy2.blocks.lattice.Lattice.digits", false]], "digits (hklpy2.blocks.reflection.reflection attribute)": [[13, "hklpy2.blocks.reflection.Reflection.digits", false]], "digits (hklpy2.blocks.sample.sample property)": [[14, "hklpy2.blocks.sample.Sample.digits", false]], "e4cv (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.e4cv", false]], "e4cv_config() (in module hklpy2.tests.models)": [[28, "hklpy2.tests.models.e4cv_config", false]], "e4cv_config_file (in module hklpy2.tests.models)": [[28, "hklpy2.tests.models.E4CV_CONFIG_FILE", false]], "e4cv_r400_config_yaml (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.e4cv_r400_config_yaml", false]], "enable (hklpy2.configurationrunwrapper property)": [[23, "hklpy2.ConfigurationRunWrapper.enable", false]], "enable (hklpy2.misc.configurationrunwrapper property)": [[24, "hklpy2.misc.ConfigurationRunWrapper.enable", false]], "energy (hklpy2.monochromaticxraywavelength property)": [[23, "hklpy2.MonochromaticXrayWavelength.energy", false]], "energy (hklpy2.wavelength_support.monochromaticxraywavelength property)": [[39, "hklpy2.wavelength_support.MonochromaticXrayWavelength.energy", false]], "energy_units (hklpy2.monochromaticxraywavelength property)": [[23, "hklpy2.MonochromaticXrayWavelength.energy_units", false]], "energy_units (hklpy2.wavelength_support.monochromaticxraywavelength property)": [[39, "hklpy2.wavelength_support.MonochromaticXrayWavelength.energy_units", false]], "engine": [[68, "index-10", true]], "engine (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.engine", false]], "engine_name (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.engine_name", false]], "engines (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.engines", false]], "export() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.export", false]], "export() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.export", false]], "extra": [[68, "index-11", true]], "extra_axis_names (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.extra_axis_names", false]], "extra_axis_names (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.extra_axis_names", false]], "extra_axis_names (hklpy2.backends.no_op.noopsolver property)": [[3, "hklpy2.backends.no_op.NoOpSolver.extra_axis_names", false]], "extra_axis_names (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.extra_axis_names", false]], "extra_axis_names (hklpy2.backends.tests.test_base.trivialsolver property)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.extra_axis_names", false]], "extra_axis_names (hklpy2.backends.th_tth_q.thtthsolver property)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.extra_axis_names", false]], "extra_axis_names (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.extra_axis_names", false]], "extras (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.extras", false]], "extras (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.extras", false]], "extras (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.extras", false]], "extras (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.extras", false]], "flatten_lists() (in module hklpy2.misc)": [[24, "hklpy2.misc.flatten_lists", false]], "forward() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.forward", false]], "forward() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.forward", false]], "forward() (hklpy2.backends.no_op.noopsolver method)": [[3, "hklpy2.backends.no_op.NoOpSolver.forward", false]], "forward() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.forward", false]], "forward() (hklpy2.backends.tests.test_base.trivialsolver method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.forward", false]], "forward() (hklpy2.backends.th_tth_q.thtthsolver method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.forward", false]], "forward() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.forward", false]], "forward() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.forward", false]], "forward() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.forward", false]], "forward() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.forward", false]], "forward_solutions_table() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.forward_solutions_table", false]], "fourc (in module hklpy2.tests.models)": [[28, "hklpy2.tests.models.Fourc", false]], "fourc (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.fourc", false]], "fourc() (in module hklpy2.tests.test_demo_notebook)": [[30, "hklpy2.tests.test_demo_notebook.fourc", false]], "fourc() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.fourc", false]], "full_position() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.full_position", false]], "full_position() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.full_position", false]], "gamma (hklpy2.blocks.lattice.lattice attribute)": [[12, "hklpy2.blocks.lattice.Lattice.gamma", false]], "geometries": [[67, "index-0", false], [67, "index-1", false], [67, "index-10", false], [67, "index-11", false], [67, "index-12", false], [67, "index-13", false], [67, "index-14", false], [67, "index-15", false], [67, "index-16", false], [67, "index-17", false], [67, "index-18", false], [67, "index-19", false], [67, "index-2", false], [67, "index-20", false], [67, "index-21", false], [67, "index-22", false], [67, "index-3", false], [67, "index-4", false], [67, "index-5", false], [67, "index-6", false], [67, "index-7", false], [67, "index-8", false], [67, "index-9", false]], "geometries() (hklpy2.backends.base.solverbase class method)": [[0, "hklpy2.backends.base.SolverBase.geometries", false]], "geometries() (hklpy2.backends.hkl_soleil.hklsolver class method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.geometries", false]], "geometries() (hklpy2.backends.no_op.noopsolver class method)": [[3, "hklpy2.backends.no_op.NoOpSolver.geometries", false]], "geometries() (hklpy2.backends.solverbase class method)": [[2, "hklpy2.backends.SolverBase.geometries", false]], "geometries() (hklpy2.backends.tests.test_base.trivialsolver class method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.geometries", false]], "geometries() (hklpy2.backends.th_tth_q.thtthsolver class method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.geometries", false]], "geometries() (hklpy2.solverbase class method)": [[23, "hklpy2.SolverBase.geometries", false]], "geometry": [[68, "index-12", true]], "geometry (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.geometry", false]], "geometry (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.geometry", false]], "geometry (hklpy2.backends.no_op.noopsolver property)": [[3, "hklpy2.backends.no_op.NoOpSolver.geometry", false]], "geometry (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.geometry", false]], "geometry (hklpy2.backends.tests.test_base.trivialsolver property)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.geometry", false]], "geometry (hklpy2.backends.th_tth_q.thtthsolver property)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.geometry", false]], "geometry (hklpy2.blocks.reflection.reflection attribute)": [[13, "hklpy2.blocks.reflection.Reflection.geometry", false]], "geometry (hklpy2.blocks.reflection.reflectionsdict attribute)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.geometry", false]], "geometry (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase.geometry", false]], "geometry (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase.geometry", false]], "geometry (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.geometry", false]], "geometry (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.geometry", false]], "get_diffractometer() (in module hklpy2.user)": [[38, "hklpy2.user.get_diffractometer", false]], "get_run_orientation() (in module hklpy2.misc)": [[24, "hklpy2.misc.get_run_orientation", false]], "get_solver() (in module hklpy2)": [[23, "hklpy2.get_solver", false]], "get_solver() (in module hklpy2.misc)": [[24, "hklpy2.misc.get_solver", false]], "glossary": [[68, "index-1", false]], "goniometer": [[68, "index-13", true]], "h2 (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.h2", false]], "h_or_n (in module hklpy2.diffract)": [[22, "hklpy2.diffract.H_OR_N", false]], "hkl_euler_matrix() (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.hkl_euler_matrix", false]], "hkl_soleil; aps polar": [[67, "index-3", false]], "hkl_soleil; e4ch": [[67, "index-4", false]], "hkl_soleil; e4cv": [[67, "index-5", false]], "hkl_soleil; e6c": [[67, "index-6", false]], "hkl_soleil; esrf id01 psic": [[67, "index-7", false]], "hkl_soleil; k4cv": [[67, "index-8", false]], "hkl_soleil; k6c": [[67, "index-9", false]], "hkl_soleil; petra3 p09 eh2": [[67, "index-10", false]], "hkl_soleil; petra3 p23 4c": [[67, "index-11", false]], "hkl_soleil; petra3 p23 6c": [[67, "index-12", false]], "hkl_soleil; soleil mars": [[67, "index-13", false]], "hkl_soleil; soleil nanoscopium robot": [[67, "index-14", false]], "hkl_soleil; soleil sirius kappa": [[67, "index-15", false]], "hkl_soleil; soleil sirius turret": [[67, "index-16", false]], "hkl_soleil; soleil sixs med1+2": [[67, "index-17", false]], "hkl_soleil; soleil sixs med2+2": [[67, "index-18", false]], "hkl_soleil; soleil sixs med2+3": [[67, "index-19", false]], "hkl_soleil; soleil sixs med2+3 v2": [[67, "index-20", false]], "hkl_soleil; zaxis": [[67, "index-21", false]], "hklpy": [[77, "index-0", true]], "hklpy2": [[23, "module-hklpy2", false]], "hklpy2.backends": [[2, "module-hklpy2.backends", false]], "hklpy2.backends.base": [[0, "module-hklpy2.backends.base", false]], "hklpy2.backends.hkl_soleil": [[1, "module-hklpy2.backends.hkl_soleil", false]], "hklpy2.backends.no_op": [[3, "module-hklpy2.backends.no_op", false]], "hklpy2.backends.tests": [[4, "module-hklpy2.backends.tests", false]], "hklpy2.backends.tests.test_base": [[5, "module-hklpy2.backends.tests.test_base", false]], "hklpy2.backends.tests.test_hkl_soleil": [[6, "module-hklpy2.backends.tests.test_hkl_soleil", false]], "hklpy2.backends.tests.test_th_tth_q": [[7, "module-hklpy2.backends.tests.test_th_tth_q", false]], "hklpy2.backends.th_tth_q": [[8, "module-hklpy2.backends.th_tth_q", false]], "hklpy2.blocks": [[11, "module-hklpy2.blocks", false]], "hklpy2.blocks.configure": [[9, "module-hklpy2.blocks.configure", false]], "hklpy2.blocks.constraints": [[10, "module-hklpy2.blocks.constraints", false]], "hklpy2.blocks.lattice": [[12, "module-hklpy2.blocks.lattice", false]], "hklpy2.blocks.reflection": [[13, "module-hklpy2.blocks.reflection", false]], "hklpy2.blocks.sample": [[14, "module-hklpy2.blocks.sample", false]], "hklpy2.blocks.tests": [[15, "module-hklpy2.blocks.tests", false]], "hklpy2.blocks.tests.test_configure": [[16, "module-hklpy2.blocks.tests.test_configure", false]], "hklpy2.blocks.tests.test_constraints": [[17, "module-hklpy2.blocks.tests.test_constraints", false]], "hklpy2.blocks.tests.test_lattice": [[18, "module-hklpy2.blocks.tests.test_lattice", false]], "hklpy2.blocks.tests.test_reflection": [[19, "module-hklpy2.blocks.tests.test_reflection", false]], "hklpy2.blocks.tests.test_sample": [[20, "module-hklpy2.blocks.tests.test_sample", false]], "hklpy2.blocks.tests.test_solver": [[21, "module-hklpy2.blocks.tests.test_solver", false]], "hklpy2.diffract": [[22, "module-hklpy2.diffract", false]], "hklpy2.misc": [[24, "module-hklpy2.misc", false]], "hklpy2.ops": [[25, "module-hklpy2.ops", false]], "hklpy2.tests": [[27, "module-hklpy2.tests", false]], "hklpy2.tests.common": [[26, "module-hklpy2.tests.common", false]], "hklpy2.tests.models": [[28, "module-hklpy2.tests.models", false]], "hklpy2.tests.test_backends": [[29, "module-hklpy2.tests.test_backends", false]], "hklpy2.tests.test_demo_notebook": [[30, "module-hklpy2.tests.test_demo_notebook", false]], "hklpy2.tests.test_diffract": [[31, "module-hklpy2.tests.test_diffract", false]], "hklpy2.tests.test_e4cv": [[32, "module-hklpy2.tests.test_e4cv", false]], "hklpy2.tests.test_misc": [[33, "module-hklpy2.tests.test_misc", false]], "hklpy2.tests.test_ops": [[34, "module-hklpy2.tests.test_ops", false]], "hklpy2.tests.test_tardis": [[35, "module-hklpy2.tests.test_tardis", false]], "hklpy2.tests.test_user": [[36, "module-hklpy2.tests.test_user", false]], "hklpy2.tests.test_wavelength_support": [[37, "module-hklpy2.tests.test_wavelength_support", false]], "hklpy2.user": [[38, "module-hklpy2.user", false]], "hklpy2.wavelength_support": [[39, "module-hklpy2.wavelength_support", false]], "hklpy2_dir (in module hklpy2.tests.common)": [[26, "hklpy2.tests.common.HKLPY2_DIR", false]], "hklpy2error": [[24, "hklpy2.misc.Hklpy2Error", false]], "hklsolver (class in hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.HklSolver", false]], "hn (in module hklpy2.tests.models)": [[28, "hklpy2.tests.models.HN", false]], "horizontal (hklpy2.tests.models.twoc attribute)": [[28, "hklpy2.tests.models.TwoC.horizontal", false]], "identity_matrix_3x3 (in module hklpy2.misc)": [[24, "hklpy2.misc.IDENTITY_MATRIX_3X3", false]], "install": [[78, "index-0", true]], "inverse() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.inverse", false]], "inverse() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.inverse", false]], "inverse() (hklpy2.backends.no_op.noopsolver method)": [[3, "hklpy2.backends.no_op.NoOpSolver.inverse", false]], "inverse() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.inverse", false]], "inverse() (hklpy2.backends.tests.test_base.trivialsolver method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.inverse", false]], "inverse() (hklpy2.backends.th_tth_q.thtthsolver method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.inverse", false]], "inverse() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.inverse", false]], "inverse() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.inverse", false]], "inverse() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.inverse", false]], "inverse() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.inverse", false]], "istype() (in module hklpy2.misc)": [[24, "hklpy2.misc.istype", false]], "k2 (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.k2", false]], "known_bases (hklpy2.configurationrunwrapper attribute)": [[23, "hklpy2.ConfigurationRunWrapper.known_bases", false]], "known_bases (hklpy2.misc.configurationrunwrapper attribute)": [[24, "hklpy2.misc.ConfigurationRunWrapper.known_bases", false]], "l2 (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.l2", false]], "label (hklpy2.blocks.constraints.constraintbase attribute)": [[10, "hklpy2.blocks.constraints.ConstraintBase.label", false]], "label (hklpy2.blocks.constraints.limitsconstraint attribute)": [[10, "hklpy2.blocks.constraints.LimitsConstraint.label", false]], "lattice": [[48, "index-0", false], [68, "index-14", true]], "lattice (class in hklpy2.blocks.lattice)": [[12, "hklpy2.blocks.lattice.Lattice", false]], "lattice (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.lattice", false]], "lattice (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.lattice", false]], "lattice (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.lattice", false]], "lattice (hklpy2.blocks.sample.sample property)": [[14, "hklpy2.blocks.sample.Sample.lattice", false]], "lattice (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.lattice", false]], "latticeerror": [[24, "hklpy2.misc.LatticeError", false]], "libhkl_detector_type (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.LIBHKL_DETECTOR_TYPE", false]], "libhkl_units (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.LIBHKL_UNITS", false]], "libhkl_user_units (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.LIBHKL_USER_UNITS", false]], "limits (hklpy2.blocks.constraints.limitsconstraint property)": [[10, "hklpy2.blocks.constraints.LimitsConstraint.limits", false]], "limitsconstraint (class in hklpy2.blocks.constraints)": [[10, "hklpy2.blocks.constraints.LimitsConstraint", false]], "list_orientation_runs() (in module hklpy2.misc)": [[24, "hklpy2.misc.list_orientation_runs", false]], "list_samples() (in module hklpy2.user)": [[38, "hklpy2.user.list_samples", false]], "load_yaml() (in module hklpy2.misc)": [[24, "hklpy2.misc.load_yaml", false]], "load_yaml_file() (in module hklpy2.misc)": [[24, "hklpy2.misc.load_yaml_file", false]], "local_pseudo_axes (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.local_pseudo_axes", false]], "local_real_axes (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.local_real_axes", false]], "logger (in module hklpy2.backends.base)": [[0, "hklpy2.backends.base.logger", false]], "logger (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.logger", false]], "logger (in module hklpy2.backends.no_op)": [[3, "hklpy2.backends.no_op.logger", false]], "logger (in module hklpy2.backends.th_tth_q)": [[8, "hklpy2.backends.th_tth_q.logger", false]], "logger (in module hklpy2.blocks.configure)": [[9, "hklpy2.blocks.configure.logger", false]], "logger (in module hklpy2.blocks.lattice)": [[12, "hklpy2.blocks.lattice.logger", false]], "logger (in module hklpy2.blocks.reflection)": [[13, "hklpy2.blocks.reflection.logger", false]], "logger (in module hklpy2.blocks.sample)": [[14, "hklpy2.blocks.sample.logger", false]], "logger (in module hklpy2.diffract)": [[22, "hklpy2.diffract.logger", false]], "logger (in module hklpy2.misc)": [[24, "hklpy2.misc.logger", false]], "logger (in module hklpy2.user)": [[38, "hklpy2.user.logger", false]], "logger (in module hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.logger", false]], "mode": [[68, "index-15", true]], "mode (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.mode", false]], "mode (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.mode", false]], "mode (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.mode", false]], "mode (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.mode", false]], "modes (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.modes", false]], "modes (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.modes", false]], "modes (hklpy2.backends.no_op.noopsolver property)": [[3, "hklpy2.backends.no_op.NoOpSolver.modes", false]], "modes (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.modes", false]], "modes (hklpy2.backends.tests.test_base.trivialsolver property)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.modes", false]], "modes (hklpy2.backends.th_tth_q.thtthsolver property)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.modes", false]], "modes (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.modes", false]], "module": [[0, "module-hklpy2.backends.base", false], [1, "module-hklpy2.backends.hkl_soleil", false], [2, "module-hklpy2.backends", false], [3, "module-hklpy2.backends.no_op", false], [4, "module-hklpy2.backends.tests", false], [5, "module-hklpy2.backends.tests.test_base", false], [6, "module-hklpy2.backends.tests.test_hkl_soleil", false], [7, "module-hklpy2.backends.tests.test_th_tth_q", false], [8, "module-hklpy2.backends.th_tth_q", false], [9, "module-hklpy2.blocks.configure", false], [10, "module-hklpy2.blocks.constraints", false], [11, "module-hklpy2.blocks", false], [12, "module-hklpy2.blocks.lattice", false], [13, "module-hklpy2.blocks.reflection", false], [14, "module-hklpy2.blocks.sample", false], [15, "module-hklpy2.blocks.tests", false], [16, "module-hklpy2.blocks.tests.test_configure", false], [17, "module-hklpy2.blocks.tests.test_constraints", false], [18, "module-hklpy2.blocks.tests.test_lattice", false], [19, "module-hklpy2.blocks.tests.test_reflection", false], [20, "module-hklpy2.blocks.tests.test_sample", false], [21, "module-hklpy2.blocks.tests.test_solver", false], [22, "module-hklpy2.diffract", false], [23, "module-hklpy2", false], [24, "module-hklpy2.misc", false], [25, "module-hklpy2.ops", false], [26, "module-hklpy2.tests.common", false], [27, "module-hklpy2.tests", false], [28, "module-hklpy2.tests.models", false], [29, "module-hklpy2.tests.test_backends", false], [30, "module-hklpy2.tests.test_demo_notebook", false], [31, "module-hklpy2.tests.test_diffract", false], [32, "module-hklpy2.tests.test_e4cv", false], [33, "module-hklpy2.tests.test_misc", false], [34, "module-hklpy2.tests.test_ops", false], [35, "module-hklpy2.tests.test_tardis", false], [36, "module-hklpy2.tests.test_user", false], [37, "module-hklpy2.tests.test_wavelength_support", false], [38, "module-hklpy2.user", false], [39, "module-hklpy2.wavelength_support", false]], "monochromatic": [[68, "index-16", true]], "monochromaticxraywavelength (class in hklpy2)": [[23, "hklpy2.MonochromaticXrayWavelength", false]], "monochromaticxraywavelength (class in hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.MonochromaticXrayWavelength", false]], "move_dict() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.move_dict", false]], "move_dict() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.move_dict", false]], "move_forward_with_extras() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.move_forward_with_extras", false]], "move_forward_with_extras() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.move_forward_with_extras", false]], "move_reals() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.move_reals", false]], "move_reals() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.move_reals", false]], "mu (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.mu", false]], "multiaxis99 (class in hklpy2.tests.models)": [[28, "hklpy2.tests.models.MultiAxis99", false]], "name (hklpy2.backends.base.solverbase attribute)": [[0, "hklpy2.backends.base.SolverBase.name", false]], "name (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.name", false]], "name (hklpy2.backends.no_op.noopsolver attribute)": [[3, "hklpy2.backends.no_op.NoOpSolver.name", false]], "name (hklpy2.backends.solverbase attribute)": [[2, "hklpy2.backends.SolverBase.name", false]], "name (hklpy2.backends.th_tth_q.thtthsolver attribute)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.name", false]], "name (hklpy2.blocks.reflection.reflection property)": [[13, "hklpy2.blocks.reflection.Reflection.name", false]], "name (hklpy2.blocks.sample.sample property)": [[14, "hklpy2.blocks.sample.Sample.name", false]], "name (hklpy2.solverbase attribute)": [[23, "hklpy2.SolverBase.name", false]], "no_op_solver_type_str (in module hklpy2.tests)": [[27, "hklpy2.tests.NO_OP_SOLVER_TYPE_STR", false]], "noopsolver (class in hklpy2.backends.no_op)": [[3, "hklpy2.backends.no_op.NoOpSolver", false]], "noopth2th (class in hklpy2.tests.models)": [[28, "hklpy2.tests.models.NoOpTh2Th", false]], "nu (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.nu", false]], "numeric (in module hklpy2.blocks.constraints)": [[10, "hklpy2.blocks.constraints.NUMERIC", false]], "omicron (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.omicron", false]], "operations (class in hklpy2.ops)": [[25, "hklpy2.ops.Operations", false]], "operationserror": [[24, "hklpy2.misc.OperationsError", false]], "or": [[68, "index-17", true]], "or_swap() (in module hklpy2.user)": [[38, "hklpy2.user.or_swap", false]], "order (hklpy2.blocks.reflection.reflectionsdict property)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.order", false]], "orientation": [[68, "index-18", true]], "orientation matrix": [[50, "index-1", false]], "p1 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p1", false]], "p2 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p2", false]], "p3 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p3", false]], "p4 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p4", false]], "p5 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p5", false]], "p6 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p6", false]], "p7 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p7", false]], "p8 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p8", false]], "p9 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.p9", false]], "pa() (in module hklpy2.user)": [[38, "hklpy2.user.pa", false]], "pick_first_item() (in module hklpy2.diffract)": [[22, "hklpy2.diffract.pick_first_item", false]], "plainconstraint (class in hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.PlainConstraint", false]], "prune() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.prune", false]], "pseudo": [[68, "index-19", true]], "pseudo_axis_names (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.backends.no_op.noopsolver property)": [[3, "hklpy2.backends.no_op.NoOpSolver.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.backends.tests.test_base.trivialsolver property)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.backends.th_tth_q.thtthsolver property)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.blocks.reflection.reflection attribute)": [[13, "hklpy2.blocks.reflection.Reflection.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.diffract.diffractometerbase property)": [[22, "hklpy2.diffract.DiffractometerBase.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.diffractometerbase property)": [[23, "hklpy2.DiffractometerBase.pseudo_axis_names", false]], "pseudo_axis_names (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.pseudo_axis_names", false]], "pseudos (hklpy2.blocks.reflection.reflection property)": [[13, "hklpy2.blocks.reflection.Reflection.pseudos", false]], "psi (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.psi", false]], "q (hklpy2.tests.models.augmentedfourc attribute)": [[28, "hklpy2.tests.models.AugmentedFourc.q", false]], "q (hklpy2.tests.models.noopth2th attribute)": [[28, "hklpy2.tests.models.NoOpTh2Th.q", false]], "q (hklpy2.tests.models.twoc attribute)": [[28, "hklpy2.tests.models.TwoC.q", false]], "quick reference table": [[75, "index-1", true]], "r010_parms (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r010_parms", false]], "r1 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r1", false]], "r100_parms (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r100_parms", false]], "r2 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r2", false]], "r3 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r3", false]], "r4 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r4", false]], "r5 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r5", false]], "r6 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r6", false]], "r7 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r7", false]], "r8 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r8", false]], "r9 (hklpy2.tests.models.multiaxis99 attribute)": [[28, "hklpy2.tests.models.MultiAxis99.r9", false]], "r_1 (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r_1", false]], "r_2 (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r_2", false]], "r_3 (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r_3", false]], "r_4 (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r_4", false]], "r_5 (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.r_5", false]], "re() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.RE", false]], "real": [[68, "index-20", true]], "real-space": [[50, "index-3", false]], "real_axis_names (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.real_axis_names", false]], "real_axis_names (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.real_axis_names", false]], "real_axis_names (hklpy2.backends.no_op.noopsolver property)": [[3, "hklpy2.backends.no_op.NoOpSolver.real_axis_names", false]], "real_axis_names (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.real_axis_names", false]], "real_axis_names (hklpy2.backends.tests.test_base.trivialsolver property)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.real_axis_names", false]], "real_axis_names (hklpy2.backends.th_tth_q.thtthsolver property)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.real_axis_names", false]], "real_axis_names (hklpy2.blocks.reflection.reflection attribute)": [[13, "hklpy2.blocks.reflection.Reflection.real_axis_names", false]], "real_axis_names (hklpy2.diffract.diffractometerbase property)": [[22, "hklpy2.diffract.DiffractometerBase.real_axis_names", false]], "real_axis_names (hklpy2.diffractometerbase property)": [[23, "hklpy2.DiffractometerBase.real_axis_names", false]], "real_axis_names (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.real_axis_names", false]], "realaxisconstraints (class in hklpy2.blocks.constraints)": [[10, "hklpy2.blocks.constraints.RealAxisConstraints", false]], "reals (hklpy2.blocks.reflection.reflection property)": [[13, "hklpy2.blocks.reflection.Reflection.reals", false]], "reciprocal-space": [[50, "index-2", false]], "refine_lattice() (hklpy2.blocks.sample.sample method)": [[14, "hklpy2.blocks.sample.Sample.refine_lattice", false]], "refine_lattice() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.refine_lattice", false]], "refinelattice() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.refineLattice", false]], "refinelattice() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.refineLattice", false]], "refinelattice() (hklpy2.backends.no_op.noopsolver method)": [[3, "hklpy2.backends.no_op.NoOpSolver.refineLattice", false]], "refinelattice() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.refineLattice", false]], "refinelattice() (hklpy2.backends.tests.test_base.trivialsolver method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.refineLattice", false]], "refinelattice() (hklpy2.backends.th_tth_q.thtthsolver method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.refineLattice", false]], "refinelattice() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.refineLattice", false]], "reflection": [[8, "index-0", false], [50, "index-0", false], [68, "index-21", true]], "reflection (class in hklpy2.blocks.reflection)": [[13, "hklpy2.blocks.reflection.Reflection", false]], "reflectionerror": [[24, "hklpy2.misc.ReflectionError", false]], "reflections (hklpy2.blocks.sample.sample property)": [[14, "hklpy2.blocks.sample.Sample.reflections", false]], "reflectionsdict (class in hklpy2.blocks.reflection)": [[13, "hklpy2.blocks.reflection.ReflectionsDict", false]], "remove_reflection() (hklpy2.blocks.sample.sample method)": [[14, "hklpy2.blocks.sample.Sample.remove_reflection", false]], "remove_reflection() (in module hklpy2.user)": [[38, "hklpy2.user.remove_reflection", false]], "remove_sample() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.remove_sample", false]], "remove_sample() (in module hklpy2.user)": [[38, "hklpy2.user.remove_sample", false]], "removeallreflections() (hklpy2.backends.base.solverbase method)": [[0, "hklpy2.backends.base.SolverBase.removeAllReflections", false]], "removeallreflections() (hklpy2.backends.hkl_soleil.hklsolver method)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.removeAllReflections", false]], "removeallreflections() (hklpy2.backends.no_op.noopsolver method)": [[3, "hklpy2.backends.no_op.NoOpSolver.removeAllReflections", false]], "removeallreflections() (hklpy2.backends.solverbase method)": [[2, "hklpy2.backends.SolverBase.removeAllReflections", false]], "removeallreflections() (hklpy2.backends.tests.test_base.trivialsolver method)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver.removeAllReflections", false]], "removeallreflections() (hklpy2.backends.th_tth_q.thtthsolver method)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.removeAllReflections", false]], "removeallreflections() (hklpy2.solverbase method)": [[23, "hklpy2.SolverBase.removeAllReflections", false]], "reset_constraints() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.reset_constraints", false]], "reset_samples() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.reset_samples", false]], "restore() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.restore", false]], "restore() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.restore", false]], "roundoff() (in module hklpy2.misc)": [[24, "hklpy2.misc.roundoff", false]], "roundoff_digits (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.ROUNDOFF_DIGITS", false]], "roundoff_list() (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.roundoff_list", false]], "sample": [[68, "index-22", true]], "sample (class in hklpy2.blocks.sample)": [[14, "hklpy2.blocks.sample.Sample", false]], "sample (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.sample", false]], "sample (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.sample", false]], "sample (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.sample", false]], "sample (hklpy2.diffract.diffractometerbase property)": [[22, "hklpy2.diffract.DiffractometerBase.sample", false]], "sample (hklpy2.diffractometerbase property)": [[23, "hklpy2.DiffractometerBase.sample", false]], "sample (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.sample", false]], "sample (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.sample", false]], "sampleerror": [[24, "hklpy2.misc.SampleError", false]], "samples (hklpy2.diffract.diffractometerbase property)": [[22, "hklpy2.diffract.DiffractometerBase.samples", false]], "samples (hklpy2.diffractometerbase property)": [[23, "hklpy2.DiffractometerBase.samples", false]], "samples (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.samples", false]], "scan_extra() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.scan_extra", false]], "scan_extra() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.scan_extra", false]], "set_diffractometer() (in module hklpy2.user)": [[38, "hklpy2.user.set_diffractometer", false]], "set_energy() (in module hklpy2.user)": [[38, "hklpy2.user.set_energy", false]], "set_lattice() (in module hklpy2.user)": [[38, "hklpy2.user.set_lattice", false]], "set_orientation_reflections() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.set_orientation_reflections", false]], "set_solver() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.set_solver", false]], "setor (hklpy2.blocks.reflection.reflectionsdict attribute)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.setor", false]], "setor() (in module hklpy2.user)": [[38, "hklpy2.user.setor", false]], "si_lattice_parameter (in module hklpy2)": [[23, "hklpy2.SI_LATTICE_PARAMETER", false]], "si_lattice_parameter (in module hklpy2.blocks.lattice)": [[12, "hklpy2.blocks.lattice.SI_LATTICE_PARAMETER", false]], "si_lattice_parameter_uncertainty (in module hklpy2.blocks.lattice)": [[12, "hklpy2.blocks.lattice.SI_LATTICE_PARAMETER_UNCERTAINTY", false]], "signal (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.signal", false]], "sim2c (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.sim2c", false]], "sim4c (in module hklpy2.tests.test_e4cv)": [[32, "hklpy2.tests.test_e4cv.sim4c", false]], "sim4c (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.sim4c", false]], "sim6c (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.sim6c", false]], "skip_exact_value_test (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.SKIP_EXACT_VALUE_TEST", false]], "solver": [[0, "index-0", false], [2, "index-0", true], [2, "index-1", false], [23, "index-0", false], [52, "index-0", true], [68, "index-23", true]], "solver (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase.solver", false]], "solver (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase.solver", false]], "solver (hklpy2.ops.operations property)": [[25, "hklpy2.ops.Operations.solver", false]], "solver_entrypoint_group (in module hklpy2)": [[23, "hklpy2.SOLVER_ENTRYPOINT_GROUP", false]], "solver_entrypoint_group (in module hklpy2.misc)": [[24, "hklpy2.misc.SOLVER_ENTRYPOINT_GROUP", false]], "solver_factory() (in module hklpy2)": [[23, "hklpy2.solver_factory", false]], "solver_factory() (in module hklpy2.misc)": [[24, "hklpy2.misc.solver_factory", false]], "solver_name (hklpy2.diffract.diffractometerbase property)": [[22, "hklpy2.diffract.DiffractometerBase.solver_name", false]], "solver_name (hklpy2.diffractometerbase property)": [[23, "hklpy2.DiffractometerBase.solver_name", false]], "solver_summary() (in module hklpy2.user)": [[38, "hklpy2.user.solver_summary", false]], "solverbase (class in hklpy2)": [[23, "hklpy2.SolverBase", false]], "solverbase (class in hklpy2.backends)": [[2, "hklpy2.backends.SolverBase", false]], "solverbase (class in hklpy2.backends.base)": [[0, "hklpy2.backends.base.SolverBase", false]], "solvererror": [[23, "hklpy2.SolverError", false], [24, "hklpy2.misc.SolverError", false]], "solvernoforwardsolutions": [[24, "hklpy2.misc.SolverNoForwardSolutions", false]], "solvers() (in module hklpy2)": [[23, "hklpy2.solvers", false]], "solvers() (in module hklpy2.misc)": [[24, "hklpy2.misc.solvers", false]], "source_type (hklpy2.constantmonochromaticwavelength attribute)": [[23, "hklpy2.ConstantMonochromaticWavelength.source_type", false]], "source_type (hklpy2.monochromaticxraywavelength attribute)": [[23, "hklpy2.MonochromaticXrayWavelength.source_type", false]], "source_type (hklpy2.wavelength_support.constantmonochromaticwavelength attribute)": [[39, "hklpy2.wavelength_support.ConstantMonochromaticWavelength.source_type", false]], "source_type (hklpy2.wavelength_support.monochromaticxraywavelength attribute)": [[39, "hklpy2.wavelength_support.MonochromaticXrayWavelength.source_type", false]], "source_type (hklpy2.wavelength_support.wavelengthbase attribute)": [[39, "hklpy2.wavelength_support.WavelengthBase.source_type", false]], "spec": [[75, "index-0", false]], "spectrum_type (hklpy2.constantmonochromaticwavelength attribute)": [[23, "hklpy2.ConstantMonochromaticWavelength.spectrum_type", false]], "spectrum_type (hklpy2.monochromaticxraywavelength attribute)": [[23, "hklpy2.MonochromaticXrayWavelength.spectrum_type", false]], "spectrum_type (hklpy2.wavelength_support.constantmonochromaticwavelength attribute)": [[39, "hklpy2.wavelength_support.ConstantMonochromaticWavelength.spectrum_type", false]], "spectrum_type (hklpy2.wavelength_support.monochromaticxraywavelength attribute)": [[39, "hklpy2.wavelength_support.MonochromaticXrayWavelength.spectrum_type", false]], "spectrum_type (hklpy2.wavelength_support.wavelengthbase attribute)": [[39, "hklpy2.wavelength_support.WavelengthBase.spectrum_type", false]], "standardize_pseudos() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.standardize_pseudos", false]], "standardize_reals() (hklpy2.ops.operations method)": [[25, "hklpy2.ops.Operations.standardize_reals", false]], "start_key (hklpy2.configurationrunwrapper attribute)": [[23, "hklpy2.ConfigurationRunWrapper.start_key", false]], "start_key (hklpy2.misc.configurationrunwrapper attribute)": [[24, "hklpy2.misc.ConfigurationRunWrapper.start_key", false]], "summary (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.summary", false]], "summary (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.summary", false]], "summary (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.summary", false]], "summary (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.summary", false]], "swap() (hklpy2.blocks.reflection.reflectionsdict method)": [[13, "hklpy2.blocks.reflection.ReflectionsDict.swap", false]], "system_parameter_names() (hklpy2.blocks.lattice.lattice method)": [[12, "hklpy2.blocks.lattice.Lattice.system_parameter_names", false]], "tables": [[67, "index-2", false]], "tardis() (in module hklpy2.tests.test_tardis)": [[35, "hklpy2.tests.test_tardis.tardis", false]], "tardis_config_yaml (in module hklpy2.tests.test_tardis)": [[35, "hklpy2.tests.test_tardis.TARDIS_CONFIG_YAML", false]], "tardis_solver_mode (in module hklpy2.tests.test_tardis)": [[35, "hklpy2.tests.test_tardis.TARDIS_SOLVER_MODE", false]], "test_add_reflections_simple() (in module hklpy2.tests.test_demo_notebook)": [[30, "hklpy2.tests.test_demo_notebook.test_add_reflections_simple", false]], "test_add_sample() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_add_sample", false]], "test_add_sample_exists() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_add_sample_exists", false]], "test_affine() (in module hklpy2.backends.tests.test_hkl_soleil)": [[6, "hklpy2.backends.tests.test_hkl_soleil.test_affine", false]], "test_as_in_demo_notebook() (in module hklpy2.tests.test_demo_notebook)": [[30, "hklpy2.tests.test_demo_notebook.test_as_in_demo_notebook", false]], "test_asdict() (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.test_asdict", false]], "test_asdict() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_asdict", false]], "test_assign_axes_error() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_assign_axes_error", false]], "test_axes_to_dict() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_axes_to_dict", false]], "test_axes_type_annotations() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_axes_type_annotations", false]], "test_axes_xref_empty() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_axes_xref_empty", false]], "test_axis_inversion() (in module hklpy2.tests.test_tardis)": [[35, "hklpy2.tests.test_tardis.test_axis_inversion", false]], "test_basic() (in module hklpy2.tests.test_tardis)": [[35, "hklpy2.tests.test_tardis.test_basic", false]], "test_cahkl() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_cahkl", false]], "test_cahkl_table() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_cahkl_table", false]], "test_calc_ub() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_calc_UB", false]], "test_choice_function() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_choice_function", false]], "test_compare_float_dicts() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_compare_float_dicts", false]], "test_configuration() (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.test_Configuration", false]], "test_configuration_export() (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.test_Configuration_export", false]], "test_configurationrunwrapper() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_ConfigurationRunWrapper", false]], "test_constantmonochromaticwavelength() (in module hklpy2.tests.test_wavelength_support)": [[37, "hklpy2.tests.test_wavelength_support.test_ConstantMonochromaticWavelength", false]], "test_constraintsbase() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_ConstraintsBase", false]], "test_creator_reals() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_creator_reals", false]], "test_crystal_classes() (in module hklpy2.blocks.tests.test_lattice)": [[18, "hklpy2.blocks.tests.test_lattice.test_crystal_classes", false]], "test_dict_device_factory() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_dict_device_factory", false]], "test_diffractometer_class() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_diffractometer_class", false]], "test_diffractometer_wh() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_diffractometer_wh", false]], "test_diffractometerbase() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_DiffractometerBase", false]], "test_duplicate_reflection() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_duplicate_reflection", false]], "test_e4cv_constant_phi() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_e4cv_constant_phi", false]], "test_engine() (in module hklpy2.backends.tests.test_hkl_soleil)": [[6, "hklpy2.backends.tests.test_hkl_soleil.test_engine", false]], "test_equal() (in module hklpy2.blocks.tests.test_lattice)": [[18, "hklpy2.blocks.tests.test_lattice.test_equal", false]], "test_flatten_lists() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_flatten_lists", false]], "test_fromdict() (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.test_fromdict", false]], "test_fromdict() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_fromdict", false]], "test_fromdict() (in module hklpy2.blocks.tests.test_lattice)": [[18, "hklpy2.blocks.tests.test_lattice.test_fromdict", false]], "test_fromdict() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_fromdict", false]], "test_fromdict() (in module hklpy2.blocks.tests.test_sample)": [[20, "hklpy2.blocks.tests.test_sample.test_fromdict", false]], "test_fromdict_keyerror() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_fromdict_KeyError", false]], "test_full_position() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_full_position", false]], "test_geometries() (in module hklpy2.backends.tests.test_hkl_soleil)": [[6, "hklpy2.backends.tests.test_hkl_soleil.test_geometries", false]], "test_get_solver() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_get_solver", false]], "test_hklsolver() (in module hklpy2.blocks.tests.test_solver)": [[21, "hklpy2.blocks.tests.test_solver.test_HklSolver", false]], "test_incompatiblereflectionsdict() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_IncompatibleReflectionsDict", false]], "test_inverse() (in module hklpy2.tests.test_e4cv)": [[32, "hklpy2.tests.test_e4cv.test_inverse", false]], "test_limits() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_limits", false]], "test_limits_property() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_limits_property", false]], "test_limitsconstraint() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_LimitsConstraint", false]], "test_list_orientation_runs() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_list_orientation_runs", false]], "test_list_samples() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_list_samples", false]], "test_load_yaml_file() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_load_yaml_file", false]], "test_local_pseudo_axes() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_local_pseudo_axes", false]], "test_miller_args() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_miller_args", false]], "test_monochromaticxraywavelength_change_units() (in module hklpy2.tests.test_wavelength_support)": [[37, "hklpy2.tests.test_wavelength_support.test_MonochromaticXrayWavelength_change_units", false]], "test_monochromaticxraywavelength_set_w() (in module hklpy2.tests.test_wavelength_support)": [[37, "hklpy2.tests.test_wavelength_support.test_MonochromaticXrayWavelength_set_w", false]], "test_move_forward_with_extras() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_move_forward_with_extras", false]], "test_move_reals() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_move_reals", false]], "test_null_core() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_null_core", false]], "test_or_swap() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_or_swap", false]], "test_orientation() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_orientation", false]], "test_pa() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_pa", false]], "test_pseudos_move() (in module hklpy2.tests.test_e4cv)": [[32, "hklpy2.tests.test_e4cv.test_pseudos_move", false]], "test_raises() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_raises", false]], "test_realaxisconstraints() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_RealAxisConstraints", false]], "test_realaxisconstraintskeys() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_RealAxisConstraintsKeys", false]], "test_refine() (in module hklpy2.blocks.tests.test_sample)": [[20, "hklpy2.blocks.tests.test_sample.test_refine", false]], "test_reflection() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_Reflection", false]], "test_reflections_fail() (in module hklpy2.blocks.tests.test_sample)": [[20, "hklpy2.blocks.tests.test_sample.test_reflections_fail", false]], "test_reflectionsdict() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_ReflectionsDict", false]], "test_remove_reflection() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_remove_reflection", false]], "test_remove_sample() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_remove_sample", false]], "test_remove_sample() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_remove_sample", false]], "test_repeat_sample() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_repeat_sample", false]], "test_repeated_reflections() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_repeated_reflections", false]], "test_repr() (in module hklpy2.blocks.tests.test_constraints)": [[17, "hklpy2.blocks.tests.test_constraints.test_repr", false]], "test_repr() (in module hklpy2.blocks.tests.test_lattice)": [[18, "hklpy2.blocks.tests.test_lattice.test_repr", false]], "test_repr() (in module hklpy2.blocks.tests.test_sample)": [[20, "hklpy2.blocks.tests.test_sample.test_repr", false]], "test_restore() (in module hklpy2.blocks.tests.test_configure)": [[16, "hklpy2.blocks.tests.test_configure.test_restore", false]], "test_restore_and_move() (in module hklpy2.tests.test_tardis)": [[35, "hklpy2.tests.test_tardis.test_restore_and_move", false]], "test_roundoff() (in module hklpy2.tests.test_misc)": [[33, "hklpy2.tests.test_misc.test_roundoff", false]], "test_sample_constructor() (in module hklpy2.blocks.tests.test_sample)": [[20, "hklpy2.blocks.tests.test_sample.test_sample_constructor", false]], "test_sample_constructor_no_core() (in module hklpy2.blocks.tests.test_sample)": [[20, "hklpy2.blocks.tests.test_sample.test_sample_constructor_no_core", false]], "test_scan() (in module hklpy2.tests.test_e4cv)": [[32, "hklpy2.tests.test_e4cv.test_scan", false]], "test_scan_extra() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_scan_extra", false]], "test_set_diffractometer() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_set_diffractometer", false]], "test_set_energy() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_set_energy", false]], "test_set_lattice() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_set_lattice", false]], "test_set_ub() (in module hklpy2.tests.test_diffract)": [[31, "hklpy2.tests.test_diffract.test_set_UB", false]], "test_setor() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_setor", false]], "test_solver() (in module hklpy2.backends.tests.test_th_tth_q)": [[7, "hklpy2.backends.tests.test_th_tth_q.test_solver", false]], "test_solverbase_extras() (in module hklpy2.backends.tests.test_base)": [[5, "hklpy2.backends.tests.test_base.test_SolverBase_extras", false]], "test_solvers() (in module hklpy2.blocks.tests.test_solver)": [[21, "hklpy2.blocks.tests.test_solver.test_solvers", false]], "test_solvers() (in module hklpy2.tests.test_backends)": [[29, "hklpy2.tests.test_backends.test_solvers", false]], "test_standardize_pseudos() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_standardize_pseudos", false]], "test_standardize_reals() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_standardize_reals", false]], "test_summary() (in module hklpy2.backends.tests.test_hkl_soleil)": [[6, "hklpy2.backends.tests.test_hkl_soleil.test_summary", false]], "test_summary_dict() (in module hklpy2.backends.tests.test_hkl_soleil)": [[6, "hklpy2.backends.tests.test_hkl_soleil.test_summary_dict", false]], "test_swap() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_swap", false]], "test_transforms() (in module hklpy2.backends.tests.test_th_tth_q)": [[7, "hklpy2.backends.tests.test_th_tth_q.test_transforms", false]], "test_unknown_reflection() (in module hklpy2.tests.test_ops)": [[34, "hklpy2.tests.test_ops.test_unknown_reflection", false]], "test_version() (in module hklpy2.backends.tests.test_hkl_soleil)": [[6, "hklpy2.backends.tests.test_hkl_soleil.test_version", false]], "test_wh() (in module hklpy2.tests.test_user)": [[36, "hklpy2.tests.test_user.test_wh", false]], "test_wrong_real_names() (in module hklpy2.blocks.tests.test_reflection)": [[19, "hklpy2.blocks.tests.test_reflection.test_wrong_real_names", false]], "tests_dir (in module hklpy2.tests.common)": [[26, "hklpy2.tests.common.TESTS_DIR", false]], "th (hklpy2.tests.models.noopth2th attribute)": [[28, "hklpy2.tests.models.NoOpTh2Th.th", false]], "th_q_geometry (in module hklpy2.backends.th_tth_q)": [[8, "hklpy2.backends.th_tth_q.TH_Q_GEOMETRY", false]], "th_tth; th tth q": [[67, "index-22", false]], "th_tth_q_geometry (in module hklpy2.backends.th_tth_q)": [[8, "hklpy2.backends.th_tth_q.TH_TTH_Q_GEOMETRY", false]], "theta (hklpy2.tests.models.twoc attribute)": [[28, "hklpy2.tests.models.TwoC.theta", false]], "thtthsolver (class in hklpy2.backends.th_tth_q)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver", false]], "to_hkl() (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.to_hkl", false]], "to_numpy() (in module hklpy2.backends.hkl_soleil)": [[1, "hklpy2.backends.hkl_soleil.to_numpy", false]], "trivialsolver (class in hklpy2.backends.tests.test_base)": [[5, "hklpy2.backends.tests.test_base.TrivialSolver", false]], "tth (hklpy2.tests.models.noopth2th attribute)": [[28, "hklpy2.tests.models.NoOpTh2Th.tth", false]], "ttheta (hklpy2.tests.models.twoc attribute)": [[28, "hklpy2.tests.models.TwoC.ttheta", false]], "twoc (class in hklpy2.tests.models)": [[28, "hklpy2.tests.models.TwoC", false]], "u": [[68, "index-24", true]], "u (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.U", false]], "u (hklpy2.blocks.sample.sample property)": [[14, "hklpy2.blocks.sample.Sample.U", false]], "ub": [[68, "index-24", true]], "ub (hklpy2.backends.base.solverbase property)": [[0, "hklpy2.backends.base.SolverBase.UB", false]], "ub (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.UB", false]], "ub (hklpy2.backends.solverbase property)": [[2, "hklpy2.backends.SolverBase.UB", false]], "ub (hklpy2.blocks.sample.sample property)": [[14, "hklpy2.blocks.sample.Sample.UB", false]], "ub (hklpy2.solverbase property)": [[23, "hklpy2.SolverBase.UB", false]], "undefined_label (in module hklpy2.blocks.constraints)": [[10, "hklpy2.blocks.constraints.UNDEFINED_LABEL", false]], "unique_name() (in module hklpy2.misc)": [[24, "hklpy2.misc.unique_name", false]], "unit cell": [[68, "index-25", true]], "unused_reflection (in module hklpy2.blocks.reflection)": [[13, "hklpy2.blocks.reflection.UNUSED_REFLECTION", false]], "valid() (hklpy2.blocks.constraints.constraintbase method)": [[10, "hklpy2.blocks.constraints.ConstraintBase.valid", false]], "valid() (hklpy2.blocks.constraints.limitsconstraint method)": [[10, "hklpy2.blocks.constraints.LimitsConstraint.valid", false]], "valid() (hklpy2.blocks.constraints.realaxisconstraints method)": [[10, "hklpy2.blocks.constraints.RealAxisConstraints.valid", false]], "valid() (hklpy2.blocks.tests.test_constraints.plainconstraint method)": [[17, "hklpy2.blocks.tests.test_constraints.PlainConstraint.valid", false]], "validate() (hklpy2.configurationrunwrapper method)": [[23, "hklpy2.ConfigurationRunWrapper.validate", false]], "validate() (hklpy2.misc.configurationrunwrapper method)": [[24, "hklpy2.misc.ConfigurationRunWrapper.validate", false]], "version (hklpy2.backends.base.solverbase attribute)": [[0, "hklpy2.backends.base.SolverBase.version", false]], "version (hklpy2.backends.hkl_soleil.hklsolver attribute)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.version", false]], "version (hklpy2.backends.no_op.noopsolver attribute)": [[3, "hklpy2.backends.no_op.NoOpSolver.version", false]], "version (hklpy2.backends.solverbase attribute)": [[2, "hklpy2.backends.SolverBase.version", false]], "version (hklpy2.backends.th_tth_q.thtthsolver attribute)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.version", false]], "version (hklpy2.solverbase attribute)": [[23, "hklpy2.SolverBase.version", false]], "vertical (hklpy2.tests.models.twoc attribute)": [[28, "hklpy2.tests.models.TwoC.vertical", false]], "vibranium": [[47, "index-1", true]], "wavelength": [[8, "index-1", false], [68, "index-26", true]], "wavelength (hklpy2.backends.hkl_soleil.hklsolver property)": [[1, "hklpy2.backends.hkl_soleil.HklSolver.wavelength", false]], "wavelength (hklpy2.backends.th_tth_q.thtthsolver property)": [[8, "hklpy2.backends.th_tth_q.ThTthSolver.wavelength", false]], "wavelength (hklpy2.blocks.reflection.reflection property)": [[13, "hklpy2.blocks.reflection.Reflection.wavelength", false]], "wavelength (hklpy2.constantmonochromaticwavelength property)": [[23, "hklpy2.ConstantMonochromaticWavelength.wavelength", false]], "wavelength (hklpy2.diffract.diffractometerbase attribute)": [[22, "hklpy2.diffract.DiffractometerBase.wavelength", false]], "wavelength (hklpy2.diffractometerbase attribute)": [[23, "hklpy2.DiffractometerBase.wavelength", false]], "wavelength (hklpy2.monochromaticxraywavelength property)": [[23, "hklpy2.MonochromaticXrayWavelength.wavelength", false]], "wavelength (hklpy2.wavelength_support.constantmonochromaticwavelength property)": [[39, "hklpy2.wavelength_support.ConstantMonochromaticWavelength.wavelength", false]], "wavelength (hklpy2.wavelength_support.monochromaticxraywavelength property)": [[39, "hklpy2.wavelength_support.MonochromaticXrayWavelength.wavelength", false]], "wavelength (hklpy2.wavelength_support.wavelengthbase property)": [[39, "hklpy2.wavelength_support.WavelengthBase.wavelength", false]], "wavelength_units (hklpy2.wavelength_support.wavelengthbase property)": [[39, "hklpy2.wavelength_support.WavelengthBase.wavelength_units", false]], "wavelengthbase (class in hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.WavelengthBase", false]], "wavelengtherror": [[23, "hklpy2.WavelengthError", false], [24, "hklpy2.misc.WavelengthError", false]], "wh() (hklpy2.diffract.diffractometerbase method)": [[22, "hklpy2.diffract.DiffractometerBase.wh", false]], "wh() (hklpy2.diffractometerbase method)": [[23, "hklpy2.DiffractometerBase.wh", false]], "wh() (in module hklpy2.user)": [[38, "hklpy2.user.wh", false]], "wrapper() (hklpy2.configurationrunwrapper method)": [[23, "hklpy2.ConfigurationRunWrapper.wrapper", false]], "wrapper() (hklpy2.misc.configurationrunwrapper method)": [[24, "hklpy2.misc.ConfigurationRunWrapper.wrapper", false]], "xray_energy_equivalent_ (in module hklpy2.wavelength_support)": [[39, "hklpy2.wavelength_support.XRAY_ENERGY_EQUIVALENT_", false]]}, "objects": {"": [[23, 0, 0, "-", "hklpy2"]], "hklpy2": [[23, 1, 1, "", "A_KEV"], [23, 2, 1, "", "Configuration"], [23, 2, 1, "", "ConfigurationRunWrapper"], [23, 2, 1, "", "ConstantMonochromaticWavelength"], [23, 2, 1, "", "DiffractometerBase"], [23, 2, 1, "", "MonochromaticXrayWavelength"], [23, 1, 1, "", "SI_LATTICE_PARAMETER"], [23, 1, 1, "", "SOLVER_ENTRYPOINT_GROUP"], [23, 2, 1, "", "SolverBase"], [23, 6, 1, "", "SolverError"], [23, 6, 1, "", "WavelengthError"], [23, 1, 1, "", "__package_name__"], [23, 1, 1, "", "__settings_orgName__"], [23, 1, 1, "", "__version__"], [2, 0, 0, "-", "backends"], [11, 0, 0, "-", "blocks"], [23, 7, 1, "", "check_value_in_list"], [23, 7, 1, "", "creator"], [22, 0, 0, "-", "diffract"], [23, 7, 1, "", "diffractometer_class_factory"], [23, 7, 1, "", "get_solver"], [24, 0, 0, "-", "misc"], [25, 0, 0, "-", "ops"], [23, 7, 1, "", "solver_factory"], [23, 7, 1, "", "solvers"], [27, 0, 0, "-", "tests"], [38, 0, 0, "-", "user"], [39, 0, 0, "-", "wavelength_support"]], "hklpy2.Configuration": [[23, 3, 1, "", "_asdict"], [23, 3, 1, "", "_fromdict"], [23, 3, 1, "", "_valid"], [23, 4, 1, "", "diffractometer"]], "hklpy2.ConfigurationRunWrapper": [[23, 5, 1, "", "device_names"], [23, 4, 1, "", "devices"], [23, 5, 1, "", "enable"], [23, 4, 1, "", "known_bases"], [23, 4, 1, "", "start_key"], [23, 3, 1, "", "validate"], [23, 3, 1, "", "wrapper"]], "hklpy2.ConstantMonochromaticWavelength": [[23, 3, 1, "", "_fromdict"], [23, 4, 1, "", "_wavelength"], [23, 4, 1, "", "source_type"], [23, 4, 1, "", "spectrum_type"], [23, 5, 1, "", "wavelength"]], "hklpy2.DiffractometerBase": [[23, 4, 1, "", "_backend"], [23, 4, 1, "", "_forward_solution"], [23, 4, 1, "", "_source"], [23, 3, 1, "", "add_reflection"], [23, 3, 1, "", "add_sample"], [23, 3, 1, "", "auto_assign_axes"], [23, 5, 1, "", "configuration"], [23, 4, 1, "", "core"], [23, 3, 1, "", "export"], [23, 3, 1, "", "forward"], [23, 3, 1, "", "full_position"], [23, 4, 1, "", "geometry"], [23, 3, 1, "", "inverse"], [23, 3, 1, "", "move_dict"], [23, 3, 1, "", "move_forward_with_extras"], [23, 3, 1, "", "move_reals"], [23, 5, 1, "", "pseudo_axis_names"], [23, 5, 1, "", "real_axis_names"], [23, 3, 1, "", "restore"], [23, 5, 1, "", "sample"], [23, 5, 1, "", "samples"], [23, 3, 1, "", "scan_extra"], [23, 4, 1, "", "solver"], [23, 5, 1, "", "solver_name"], [23, 4, 1, "", "wavelength"], [23, 3, 1, "", "wh"]], "hklpy2.MonochromaticXrayWavelength": [[23, 5, 1, "", "energy"], [23, 5, 1, "", "energy_units"], [23, 4, 1, "", "source_type"], [23, 4, 1, "", "spectrum_type"], [23, 5, 1, "", "wavelength"]], "hklpy2.SolverBase": [[23, 5, 1, "", "UB"], [23, 3, 1, "", "__repr__"], [23, 5, 1, "", "_metadata"], [23, 4, 1, "", "_sample"], [23, 5, 1, "", "_summary_dict"], [23, 3, 1, "", "addReflection"], [23, 3, 1, "", "calculate_UB"], [23, 5, 1, "", "extra_axis_names"], [23, 5, 1, "", "extras"], [23, 3, 1, "", "forward"], [23, 3, 1, "", "geometries"], [23, 5, 1, "", "geometry"], [23, 3, 1, "", "inverse"], [23, 5, 1, "", "lattice"], [23, 5, 1, "", "mode"], [23, 5, 1, "", "modes"], [23, 4, 1, "", "name"], [23, 5, 1, "", "pseudo_axis_names"], [23, 5, 1, "", "real_axis_names"], [23, 3, 1, "", "refineLattice"], [23, 3, 1, "", "removeAllReflections"], [23, 5, 1, "", "sample"], [23, 5, 1, "", "summary"], [23, 4, 1, "", "version"]], "hklpy2.backends": [[2, 2, 1, "", "SolverBase"], [0, 0, 0, "-", "base"], [1, 0, 0, "-", "hkl_soleil"], [3, 0, 0, "-", "no_op"], [4, 0, 0, "-", "tests"], [8, 0, 0, "-", "th_tth_q"]], "hklpy2.backends.SolverBase": [[2, 5, 1, "", "UB"], [2, 3, 1, "", "__repr__"], [2, 5, 1, "", "_metadata"], [2, 4, 1, "", "_sample"], [2, 5, 1, "", "_summary_dict"], [2, 3, 1, "", "addReflection"], [2, 3, 1, "", "calculate_UB"], [2, 5, 1, "", "extra_axis_names"], [2, 5, 1, "", "extras"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "geometries"], [2, 5, 1, "", "geometry"], [2, 3, 1, "", "inverse"], [2, 5, 1, "", "lattice"], [2, 5, 1, "", "mode"], [2, 5, 1, "", "modes"], [2, 4, 1, "", "name"], [2, 5, 1, "", "pseudo_axis_names"], [2, 5, 1, "", "real_axis_names"], [2, 3, 1, "", "refineLattice"], [2, 3, 1, "", "removeAllReflections"], [2, 5, 1, "", "sample"], [2, 5, 1, "", "summary"], [2, 4, 1, "", "version"]], "hklpy2.backends.base": [[0, 2, 1, "", "SolverBase"], [0, 1, 1, "", "logger"]], "hklpy2.backends.base.SolverBase": [[0, 5, 1, "", "UB"], [0, 3, 1, "", "__repr__"], [0, 5, 1, "", "_metadata"], [0, 4, 1, "", "_sample"], [0, 5, 1, "", "_summary_dict"], [0, 3, 1, "", "addReflection"], [0, 3, 1, "", "calculate_UB"], [0, 5, 1, "", "extra_axis_names"], [0, 5, 1, "", "extras"], [0, 3, 1, "", "forward"], [0, 3, 1, "", "geometries"], [0, 5, 1, "", "geometry"], [0, 3, 1, "", "inverse"], [0, 5, 1, "", "lattice"], [0, 5, 1, "", "mode"], [0, 5, 1, "", "modes"], [0, 4, 1, "", "name"], [0, 5, 1, "", "pseudo_axis_names"], [0, 5, 1, "", "real_axis_names"], [0, 3, 1, "", "refineLattice"], [0, 3, 1, "", "removeAllReflections"], [0, 5, 1, "", "sample"], [0, 5, 1, "", "summary"], [0, 4, 1, "", "version"]], "hklpy2.backends.hkl_soleil": [[1, 1, 1, "", "AXES_READ"], [1, 1, 1, "", "AXES_WRITTEN"], [1, 2, 1, "", "HklSolver"], [1, 1, 1, "", "LIBHKL_DETECTOR_TYPE"], [1, 1, 1, "", "LIBHKL_UNITS"], [1, 1, 1, "", "LIBHKL_USER_UNITS"], [1, 1, 1, "", "ROUNDOFF_DIGITS"], [1, 7, 1, "", "hkl_euler_matrix"], [1, 1, 1, "", "logger"], [1, 7, 1, "", "roundoff_list"], [1, 7, 1, "", "to_hkl"], [1, 7, 1, "", "to_numpy"]], "hklpy2.backends.hkl_soleil.HklSolver": [[1, 5, 1, "", "U"], [1, 5, 1, "", "UB"], [1, 3, 1, "", "__repr__"], [1, 4, 1, "", "_detector"], [1, 4, 1, "", "_engine"], [1, 4, 1, "", "_engine_list"], [1, 4, 1, "", "_factory"], [1, 4, 1, "", "_geometry"], [1, 4, 1, "", "_gname_locked"], [1, 4, 1, "", "_sample"], [1, 5, 1, "", "_summary_dict"], [1, 3, 1, "", "addReflection"], [1, 5, 1, "", "axes_c"], [1, 5, 1, "", "axes_r"], [1, 5, 1, "", "axes_w"], [1, 3, 1, "", "calculate_UB"], [1, 5, 1, "", "engine"], [1, 5, 1, "", "engine_name"], [1, 5, 1, "", "engines"], [1, 5, 1, "", "extra_axis_names"], [1, 5, 1, "", "extras"], [1, 3, 1, "", "forward"], [1, 3, 1, "", "geometries"], [1, 5, 1, "", "geometry"], [1, 3, 1, "", "inverse"], [1, 5, 1, "", "lattice"], [1, 5, 1, "", "mode"], [1, 5, 1, "", "modes"], [1, 4, 1, "", "name"], [1, 5, 1, "", "pseudo_axis_names"], [1, 5, 1, "", "real_axis_names"], [1, 3, 1, "", "refineLattice"], [1, 3, 1, "", "removeAllReflections"], [1, 5, 1, "", "sample"], [1, 5, 1, "", "summary"], [1, 4, 1, "", "version"], [1, 5, 1, "", "wavelength"]], "hklpy2.backends.no_op": [[3, 2, 1, "", "NoOpSolver"], [3, 1, 1, "", "logger"]], "hklpy2.backends.no_op.NoOpSolver": [[3, 3, 1, "", "addReflection"], [3, 3, 1, "", "calculate_UB"], [3, 5, 1, "", "extra_axis_names"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "geometries"], [3, 5, 1, "", "geometry"], [3, 3, 1, "", "inverse"], [3, 5, 1, "", "modes"], [3, 4, 1, "", "name"], [3, 5, 1, "", "pseudo_axis_names"], [3, 5, 1, "", "real_axis_names"], [3, 3, 1, "", "refineLattice"], [3, 3, 1, "", "removeAllReflections"], [3, 4, 1, "", "version"]], "hklpy2.backends.tests": [[5, 0, 0, "-", "test_base"], [6, 0, 0, "-", "test_hkl_soleil"], [7, 0, 0, "-", "test_th_tth_q"]], "hklpy2.backends.tests.test_base": [[5, 2, 1, "", "TrivialSolver"], [5, 7, 1, "", "test_SolverBase_extras"]], "hklpy2.backends.tests.test_base.TrivialSolver": [[5, 3, 1, "", "addReflection"], [5, 3, 1, "", "calculate_UB"], [5, 5, 1, "", "extra_axis_names"], [5, 3, 1, "", "forward"], [5, 3, 1, "", "geometries"], [5, 5, 1, "", "geometry"], [5, 3, 1, "", "inverse"], [5, 5, 1, "", "modes"], [5, 5, 1, "", "pseudo_axis_names"], [5, 5, 1, "", "real_axis_names"], [5, 3, 1, "", "refineLattice"], [5, 3, 1, "", "removeAllReflections"]], "hklpy2.backends.tests.test_hkl_soleil": [[6, 7, 1, "", "test_affine"], [6, 7, 1, "", "test_engine"], [6, 7, 1, "", "test_geometries"], [6, 7, 1, "", "test_summary"], [6, 7, 1, "", "test_summary_dict"], [6, 7, 1, "", "test_version"]], "hklpy2.backends.tests.test_th_tth_q": [[7, 7, 1, "", "test_solver"], [7, 7, 1, "", "test_transforms"]], "hklpy2.backends.th_tth_q": [[8, 1, 1, "", "TH_Q_GEOMETRY"], [8, 1, 1, "", "TH_TTH_Q_GEOMETRY"], [8, 2, 1, "", "ThTthSolver"], [8, 1, 1, "", "logger"]], "hklpy2.backends.th_tth_q.ThTthSolver": [[8, 4, 1, "", "_reflections"], [8, 4, 1, "", "_wavelength"], [8, 3, 1, "", "addReflection"], [8, 3, 1, "", "calculate_UB"], [8, 5, 1, "", "extra_axis_names"], [8, 3, 1, "", "forward"], [8, 3, 1, "", "geometries"], [8, 5, 1, "", "geometry"], [8, 3, 1, "", "inverse"], [8, 5, 1, "", "modes"], [8, 4, 1, "", "name"], [8, 5, 1, "", "pseudo_axis_names"], [8, 5, 1, "", "real_axis_names"], [8, 3, 1, "", "refineLattice"], [8, 3, 1, "", "removeAllReflections"], [8, 4, 1, "", "version"], [8, 5, 1, "", "wavelength"]], "hklpy2.blocks": [[9, 0, 0, "-", "configure"], [10, 0, 0, "-", "constraints"], [12, 0, 0, "-", "lattice"], [13, 0, 0, "-", "reflection"], [14, 0, 0, "-", "sample"], [15, 0, 0, "-", "tests"]], "hklpy2.blocks.configure": [[9, 2, 1, "", "Configuration"], [9, 1, 1, "", "logger"]], "hklpy2.blocks.configure.Configuration": [[9, 3, 1, "", "_asdict"], [9, 3, 1, "", "_fromdict"], [9, 3, 1, "", "_valid"], [9, 4, 1, "", "diffractometer"]], "hklpy2.blocks.constraints": [[10, 2, 1, "", "ConstraintBase"], [10, 2, 1, "", "LimitsConstraint"], [10, 1, 1, "", "NUMERIC"], [10, 2, 1, "", "RealAxisConstraints"], [10, 1, 1, "", "UNDEFINED_LABEL"]], "hklpy2.blocks.constraints.ConstraintBase": [[10, 3, 1, "", "__repr__"], [10, 3, 1, "", "_asdict"], [10, 4, 1, "", "_fields"], [10, 3, 1, "", "_fromdict"], [10, 4, 1, "", "label"], [10, 3, 1, "", "valid"]], "hklpy2.blocks.constraints.LimitsConstraint": [[10, 3, 1, "", "__repr__"], [10, 4, 1, "", "_fields"], [10, 4, 1, "", "label"], [10, 5, 1, "", "limits"], [10, 3, 1, "", "valid"]], "hklpy2.blocks.constraints.RealAxisConstraints": [[10, 3, 1, "", "__repr__"], [10, 3, 1, "", "_asdict"], [10, 3, 1, "", "_fromdict"], [10, 3, 1, "", "valid"]], "hklpy2.blocks.lattice": [[12, 1, 1, "", "CrystalSystem"], [12, 2, 1, "", "Lattice"], [12, 1, 1, "", "SI_LATTICE_PARAMETER"], [12, 1, 1, "", "SI_LATTICE_PARAMETER_UNCERTAINTY"], [12, 1, 1, "", "logger"]], "hklpy2.blocks.lattice.Lattice": [[12, 3, 1, "", "__eq__"], [12, 3, 1, "", "__repr__"], [12, 3, 1, "", "_asdict"], [12, 3, 1, "", "_fromdict"], [12, 4, 1, "", "a"], [12, 4, 1, "", "alpha"], [12, 4, 1, "", "b"], [12, 4, 1, "", "beta"], [12, 4, 1, "", "c"], [12, 5, 1, "", "crystal_system"], [12, 5, 1, "", "digits"], [12, 4, 1, "", "gamma"], [12, 3, 1, "", "system_parameter_names"]], "hklpy2.blocks.reflection": [[13, 2, 1, "", "Reflection"], [13, 2, 1, "", "ReflectionsDict"], [13, 1, 1, "", "UNUSED_REFLECTION"], [13, 1, 1, "", "logger"]], "hklpy2.blocks.reflection.Reflection": [[13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "_asdict"], [13, 3, 1, "", "_fromdict"], [13, 3, 1, "", "_validate_pseudos"], [13, 3, 1, "", "_validate_reals"], [13, 3, 1, "", "_validate_wavelength"], [13, 4, 1, "", "digits"], [13, 4, 1, "", "geometry"], [13, 5, 1, "", "name"], [13, 4, 1, "", "pseudo_axis_names"], [13, 5, 1, "", "pseudos"], [13, 4, 1, "", "real_axis_names"], [13, 5, 1, "", "reals"], [13, 5, 1, "", "wavelength"]], "hklpy2.blocks.reflection.ReflectionsDict": [[13, 3, 1, "", "_asdict"], [13, 3, 1, "", "_fromdict"], [13, 4, 1, "", "_order"], [13, 3, 1, "", "_validate_reflection"], [13, 3, 1, "", "add"], [13, 4, 1, "", "geometry"], [13, 5, 1, "", "order"], [13, 3, 1, "", "prune"], [13, 3, 1, "", "set_orientation_reflections"], [13, 4, 1, "", "setor"], [13, 3, 1, "", "swap"]], "hklpy2.blocks.sample": [[14, 2, 1, "", "Sample"], [14, 1, 1, "", "logger"]], "hklpy2.blocks.sample.Sample": [[14, 5, 1, "", "U"], [14, 5, 1, "", "UB"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "_asdict"], [14, 3, 1, "", "_fromdict"], [14, 4, 1, "", "core"], [14, 5, 1, "", "digits"], [14, 5, 1, "", "lattice"], [14, 5, 1, "", "name"], [14, 3, 1, "", "refine_lattice"], [14, 5, 1, "", "reflections"], [14, 3, 1, "", "remove_reflection"]], "hklpy2.blocks.tests": [[16, 0, 0, "-", "test_configure"], [17, 0, 0, "-", "test_constraints"], [18, 0, 0, "-", "test_lattice"], [19, 0, 0, "-", "test_reflection"], [20, 0, 0, "-", "test_sample"], [21, 0, 0, "-", "test_solver"]], "hklpy2.blocks.tests.test_configure": [[16, 1, 1, "", "e4cv"], [16, 1, 1, "", "sim2c"], [16, 7, 1, "", "test_Configuration"], [16, 7, 1, "", "test_Configuration_export"], [16, 7, 1, "", "test_asdict"], [16, 7, 1, "", "test_fromdict"], [16, 7, 1, "", "test_restore"]], "hklpy2.blocks.tests.test_constraints": [[17, 2, 1, "", "PlainConstraint"], [17, 7, 1, "", "test_ConstraintsBase"], [17, 7, 1, "", "test_LimitsConstraint"], [17, 7, 1, "", "test_RealAxisConstraints"], [17, 7, 1, "", "test_RealAxisConstraintsKeys"], [17, 7, 1, "", "test_fromdict"], [17, 7, 1, "", "test_fromdict_KeyError"], [17, 7, 1, "", "test_limits_property"], [17, 7, 1, "", "test_raises"], [17, 7, 1, "", "test_repr"]], "hklpy2.blocks.tests.test_constraints.PlainConstraint": [[17, 3, 1, "", "valid"]], "hklpy2.blocks.tests.test_lattice": [[18, 7, 1, "", "test_crystal_classes"], [18, 7, 1, "", "test_equal"], [18, 7, 1, "", "test_fromdict"], [18, 7, 1, "", "test_repr"]], "hklpy2.blocks.tests.test_reflection": [[19, 1, 1, "", "e4cv_r400_config_yaml"], [19, 1, 1, "", "r010_parms"], [19, 1, 1, "", "r100_parms"], [19, 1, 1, "", "r_1"], [19, 1, 1, "", "r_2"], [19, 1, 1, "", "r_3"], [19, 1, 1, "", "r_4"], [19, 1, 1, "", "r_5"], [19, 7, 1, "", "test_IncompatibleReflectionsDict"], [19, 7, 1, "", "test_Reflection"], [19, 7, 1, "", "test_ReflectionsDict"], [19, 7, 1, "", "test_duplicate_reflection"], [19, 7, 1, "", "test_fromdict"], [19, 7, 1, "", "test_swap"], [19, 7, 1, "", "test_wrong_real_names"]], "hklpy2.blocks.tests.test_sample": [[20, 7, 1, "", "test_fromdict"], [20, 7, 1, "", "test_refine"], [20, 7, 1, "", "test_reflections_fail"], [20, 7, 1, "", "test_repr"], [20, 7, 1, "", "test_sample_constructor"], [20, 7, 1, "", "test_sample_constructor_no_core"]], "hklpy2.blocks.tests.test_solver": [[21, 7, 1, "", "test_HklSolver"], [21, 7, 1, "", "test_solvers"]], "hklpy2.diffract": [[22, 1, 1, "", "DEFAULT_PHOTON_ENERGY_KEV"], [22, 2, 1, "", "DiffractometerBase"], [22, 1, 1, "", "H_OR_N"], [22, 1, 1, "", "__all__"], [22, 7, 1, "", "creator"], [22, 7, 1, "", "diffractometer_class_factory"], [22, 1, 1, "", "logger"], [22, 7, 1, "", "pick_first_item"]], "hklpy2.diffract.DiffractometerBase": [[22, 4, 1, "", "_backend"], [22, 4, 1, "", "_forward_solution"], [22, 4, 1, "", "_source"], [22, 3, 1, "", "add_reflection"], [22, 3, 1, "", "add_sample"], [22, 3, 1, "", "auto_assign_axes"], [22, 5, 1, "", "configuration"], [22, 4, 1, "", "core"], [22, 3, 1, "", "export"], [22, 3, 1, "", "forward"], [22, 3, 1, "", "full_position"], [22, 4, 1, "", "geometry"], [22, 3, 1, "", "inverse"], [22, 3, 1, "", "move_dict"], [22, 3, 1, "", "move_forward_with_extras"], [22, 3, 1, "", "move_reals"], [22, 5, 1, "", "pseudo_axis_names"], [22, 5, 1, "", "real_axis_names"], [22, 3, 1, "", "restore"], [22, 5, 1, "", "sample"], [22, 5, 1, "", "samples"], [22, 3, 1, "", "scan_extra"], [22, 4, 1, "", "solver"], [22, 5, 1, "", "solver_name"], [22, 4, 1, "", "wavelength"], [22, 3, 1, "", "wh"]], "hklpy2.misc": [[24, 1, 1, "", "AnyAxesType"], [24, 1, 1, "", "AxesArray"], [24, 1, 1, "", "AxesDict"], [24, 1, 1, "", "AxesList"], [24, 1, 1, "", "AxesTuple"], [24, 6, 1, "", "ConfigurationError"], [24, 2, 1, "", "ConfigurationRunWrapper"], [24, 6, 1, "", "ConstraintsError"], [24, 1, 1, "", "DEFAULT_START_KEY"], [24, 6, 1, "", "DiffractometerError"], [24, 6, 1, "", "Hklpy2Error"], [24, 1, 1, "", "IDENTITY_MATRIX_3X3"], [24, 6, 1, "", "LatticeError"], [24, 6, 1, "", "OperationsError"], [24, 6, 1, "", "ReflectionError"], [24, 1, 1, "", "SOLVER_ENTRYPOINT_GROUP"], [24, 6, 1, "", "SampleError"], [24, 6, 1, "", "SolverError"], [24, 6, 1, "", "SolverNoForwardSolutions"], [24, 6, 1, "", "WavelengthError"], [24, 7, 1, "", "axes_to_dict"], [24, 7, 1, "", "check_value_in_list"], [24, 7, 1, "", "compare_float_dicts"], [24, 7, 1, "", "dict_device_factory"], [24, 7, 1, "", "flatten_lists"], [24, 7, 1, "", "get_run_orientation"], [24, 7, 1, "", "get_solver"], [24, 7, 1, "", "istype"], [24, 7, 1, "", "list_orientation_runs"], [24, 7, 1, "", "load_yaml"], [24, 7, 1, "", "load_yaml_file"], [24, 1, 1, "", "logger"], [24, 7, 1, "", "roundoff"], [24, 7, 1, "", "solver_factory"], [24, 7, 1, "", "solvers"], [24, 7, 1, "", "unique_name"]], "hklpy2.misc.ConfigurationRunWrapper": [[24, 5, 1, "", "device_names"], [24, 4, 1, "", "devices"], [24, 5, 1, "", "enable"], [24, 4, 1, "", "known_bases"], [24, 4, 1, "", "start_key"], [24, 3, 1, "", "validate"], [24, 3, 1, "", "wrapper"]], "hklpy2.ops": [[25, 2, 1, "", "Operations"]], "hklpy2.ops.Operations": [[25, 3, 1, "", "_asdict"], [25, 3, 1, "", "_axes_names_d2s"], [25, 3, 1, "", "_axes_names_s2d"], [25, 3, 1, "", "_fromdict"], [25, 4, 1, "", "_sample_name"], [25, 4, 1, "", "_samples"], [25, 4, 1, "", "_solver"], [25, 3, 1, "", "_validate_pseudos"], [25, 3, 1, "", "add_reflection"], [25, 3, 1, "", "add_sample"], [25, 3, 1, "", "assign_axes"], [25, 3, 1, "", "auto_assign_axes"], [25, 4, 1, "", "axes_xref"], [25, 5, 1, "", "axes_xref_reversed"], [25, 3, 1, "", "calc_UB"], [25, 4, 1, "", "configuration"], [25, 4, 1, "", "constraints"], [25, 4, 1, "", "diffractometer"], [25, 3, 1, "", "forward"], [25, 3, 1, "", "forward_solutions_table"], [25, 5, 1, "", "geometry"], [25, 3, 1, "", "inverse"], [25, 5, 1, "", "local_pseudo_axes"], [25, 5, 1, "", "local_real_axes"], [25, 3, 1, "", "refine_lattice"], [25, 3, 1, "", "remove_sample"], [25, 3, 1, "", "reset_constraints"], [25, 3, 1, "", "reset_samples"], [25, 5, 1, "", "sample"], [25, 5, 1, "", "samples"], [25, 3, 1, "", "set_solver"], [25, 5, 1, "", "solver"], [25, 3, 1, "", "standardize_pseudos"], [25, 3, 1, "", "standardize_reals"]], "hklpy2.tests": [[27, 1, 1, "", "NO_OP_SOLVER_TYPE_STR"], [26, 0, 0, "-", "common"], [28, 0, 0, "-", "models"], [29, 0, 0, "-", "test_backends"], [30, 0, 0, "-", "test_demo_notebook"], [31, 0, 0, "-", "test_diffract"], [32, 0, 0, "-", "test_e4cv"], [33, 0, 0, "-", "test_misc"], [34, 0, 0, "-", "test_ops"], [35, 0, 0, "-", "test_tardis"], [36, 0, 0, "-", "test_user"], [37, 0, 0, "-", "test_wavelength_support"]], "hklpy2.tests.common": [[26, 1, 1, "", "HKLPY2_DIR"], [26, 1, 1, "", "TESTS_DIR"], [26, 7, 1, "", "assert_context_result"]], "hklpy2.tests.models": [[28, 2, 1, "", "AugmentedFourc"], [28, 1, 1, "", "E4CV_CONFIG_FILE"], [28, 1, 1, "", "Fourc"], [28, 1, 1, "", "HN"], [28, 2, 1, "", "MultiAxis99"], [28, 2, 1, "", "NoOpTh2Th"], [28, 2, 1, "", "TwoC"], [28, 7, 1, "", "add_oriented_vibranium_to_e4cv"], [28, 7, 1, "", "e4cv_config"]], "hklpy2.tests.models.AugmentedFourc": [[28, 4, 1, "", "h2"], [28, 4, 1, "", "k2"], [28, 4, 1, "", "l2"], [28, 4, 1, "", "mu"], [28, 4, 1, "", "nu"], [28, 4, 1, "", "omicron"], [28, 4, 1, "", "psi"], [28, 4, 1, "", "q"]], "hklpy2.tests.models.MultiAxis99": [[28, 4, 1, "", "p1"], [28, 4, 1, "", "p2"], [28, 4, 1, "", "p3"], [28, 4, 1, "", "p4"], [28, 4, 1, "", "p5"], [28, 4, 1, "", "p6"], [28, 4, 1, "", "p7"], [28, 4, 1, "", "p8"], [28, 4, 1, "", "p9"], [28, 4, 1, "", "r1"], [28, 4, 1, "", "r2"], [28, 4, 1, "", "r3"], [28, 4, 1, "", "r4"], [28, 4, 1, "", "r5"], [28, 4, 1, "", "r6"], [28, 4, 1, "", "r7"], [28, 4, 1, "", "r8"], [28, 4, 1, "", "r9"]], "hklpy2.tests.models.NoOpTh2Th": [[28, 4, 1, "", "q"], [28, 4, 1, "", "th"], [28, 4, 1, "", "tth"]], "hklpy2.tests.models.TwoC": [[28, 4, 1, "", "another"], [28, 4, 1, "", "horizontal"], [28, 4, 1, "", "q"], [28, 4, 1, "", "theta"], [28, 4, 1, "", "ttheta"], [28, 4, 1, "", "vertical"]], "hklpy2.tests.test_backends": [[29, 7, 1, "", "test_solvers"]], "hklpy2.tests.test_demo_notebook": [[30, 7, 1, "", "fourc"], [30, 7, 1, "", "test_add_reflections_simple"], [30, 7, 1, "", "test_as_in_demo_notebook"]], "hklpy2.tests.test_diffract": [[31, 7, 1, "", "test_DiffractometerBase"], [31, 7, 1, "", "test_choice_function"], [31, 7, 1, "", "test_creator_reals"], [31, 7, 1, "", "test_diffractometer_class"], [31, 7, 1, "", "test_diffractometer_wh"], [31, 7, 1, "", "test_e4cv_constant_phi"], [31, 7, 1, "", "test_full_position"], [31, 7, 1, "", "test_limits"], [31, 7, 1, "", "test_miller_args"], [31, 7, 1, "", "test_move_forward_with_extras"], [31, 7, 1, "", "test_move_reals"], [31, 7, 1, "", "test_null_core"], [31, 7, 1, "", "test_orientation"], [31, 7, 1, "", "test_remove_sample"], [31, 7, 1, "", "test_repeated_reflections"], [31, 7, 1, "", "test_scan_extra"], [31, 7, 1, "", "test_set_UB"]], "hklpy2.tests.test_e4cv": [[32, 1, 1, "", "sim4c"], [32, 7, 1, "", "test_inverse"], [32, 7, 1, "", "test_pseudos_move"], [32, 7, 1, "", "test_scan"]], "hklpy2.tests.test_misc": [[33, 7, 1, "", "RE"], [33, 7, 1, "", "cat"], [33, 1, 1, "", "signal"], [33, 1, 1, "", "sim4c"], [33, 1, 1, "", "sim6c"], [33, 7, 1, "", "test_ConfigurationRunWrapper"], [33, 7, 1, "", "test_axes_to_dict"], [33, 7, 1, "", "test_axes_type_annotations"], [33, 7, 1, "", "test_compare_float_dicts"], [33, 7, 1, "", "test_dict_device_factory"], [33, 7, 1, "", "test_flatten_lists"], [33, 7, 1, "", "test_get_solver"], [33, 7, 1, "", "test_list_orientation_runs"], [33, 7, 1, "", "test_load_yaml_file"], [33, 7, 1, "", "test_roundoff"]], "hklpy2.tests.test_ops": [[34, 1, 1, "", "SKIP_EXACT_VALUE_TEST"], [34, 1, 1, "", "fourc"], [34, 7, 1, "", "test_asdict"], [34, 7, 1, "", "test_assign_axes_error"], [34, 7, 1, "", "test_axes_xref_empty"], [34, 7, 1, "", "test_local_pseudo_axes"], [34, 7, 1, "", "test_repeat_sample"], [34, 7, 1, "", "test_standardize_pseudos"], [34, 7, 1, "", "test_standardize_reals"], [34, 7, 1, "", "test_unknown_reflection"]], "hklpy2.tests.test_tardis": [[35, 1, 1, "", "TARDIS_CONFIG_YAML"], [35, 1, 1, "", "TARDIS_SOLVER_MODE"], [35, 7, 1, "", "tardis"], [35, 7, 1, "", "test_axis_inversion"], [35, 7, 1, "", "test_basic"], [35, 7, 1, "", "test_restore_and_move"]], "hklpy2.tests.test_user": [[36, 7, 1, "", "fourc"], [36, 7, 1, "", "test_add_sample"], [36, 7, 1, "", "test_add_sample_exists"], [36, 7, 1, "", "test_cahkl"], [36, 7, 1, "", "test_cahkl_table"], [36, 7, 1, "", "test_calc_UB"], [36, 7, 1, "", "test_list_samples"], [36, 7, 1, "", "test_or_swap"], [36, 7, 1, "", "test_pa"], [36, 7, 1, "", "test_remove_reflection"], [36, 7, 1, "", "test_remove_sample"], [36, 7, 1, "", "test_set_diffractometer"], [36, 7, 1, "", "test_set_energy"], [36, 7, 1, "", "test_set_lattice"], [36, 7, 1, "", "test_setor"], [36, 7, 1, "", "test_wh"]], "hklpy2.tests.test_wavelength_support": [[37, 7, 1, "", "test_ConstantMonochromaticWavelength"], [37, 7, 1, "", "test_MonochromaticXrayWavelength_change_units"], [37, 7, 1, "", "test_MonochromaticXrayWavelength_set_w"]], "hklpy2.user": [[38, 2, 1, "", "_SelectedDiffractometer"], [38, 1, 1, "", "__all__"], [38, 1, 1, "", "_choice"], [38, 1, 1, "", "add_reflection"], [38, 7, 1, "", "add_sample"], [38, 7, 1, "", "cahkl"], [38, 7, 1, "", "cahkl_table"], [38, 7, 1, "", "calc_UB"], [38, 7, 1, "", "get_diffractometer"], [38, 7, 1, "", "list_samples"], [38, 1, 1, "", "logger"], [38, 7, 1, "", "or_swap"], [38, 7, 1, "", "pa"], [38, 7, 1, "", "remove_reflection"], [38, 7, 1, "", "remove_sample"], [38, 7, 1, "", "set_diffractometer"], [38, 7, 1, "", "set_energy"], [38, 7, 1, "", "set_lattice"], [38, 7, 1, "", "setor"], [38, 7, 1, "", "solver_summary"], [38, 7, 1, "", "wh"]], "hklpy2.user._SelectedDiffractometer": [[38, 4, 1, "", "_selection"], [38, 5, 1, "", "diffractometer"]], "hklpy2.wavelength_support": [[39, 1, 1, "", "A_KEV"], [39, 2, 1, "", "ConstantMonochromaticWavelength"], [39, 1, 1, "", "DEFAULT_ENERGY_UNITS"], [39, 1, 1, "", "DEFAULT_WAVELENGTH"], [39, 1, 1, "", "DEFAULT_WAVELENGTH_UNITS"], [39, 2, 1, "", "MonochromaticXrayWavelength"], [39, 2, 1, "", "WavelengthBase"], [39, 1, 1, "", "XRAY_ENERGY_EQUIVALENT_"], [39, 1, 1, "", "logger"]], "hklpy2.wavelength_support.ConstantMonochromaticWavelength": [[39, 3, 1, "", "_fromdict"], [39, 4, 1, "", "_wavelength"], [39, 4, 1, "", "source_type"], [39, 4, 1, "", "spectrum_type"], [39, 5, 1, "", "wavelength"]], "hklpy2.wavelength_support.MonochromaticXrayWavelength": [[39, 5, 1, "", "energy"], [39, 5, 1, "", "energy_units"], [39, 4, 1, "", "source_type"], [39, 4, 1, "", "spectrum_type"], [39, 5, 1, "", "wavelength"]], "hklpy2.wavelength_support.WavelengthBase": [[39, 3, 1, "", "_asdict"], [39, 3, 1, "", "_fromdict"], [39, 3, 1, "", "_fromdict_core"], [39, 4, 1, "", "_wavelength_units"], [39, 4, 1, "", "source_type"], [39, 4, 1, "", "spectrum_type"], [39, 5, 1, "", "wavelength"], [39, 5, 1, "", "wavelength_units"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:function"}, "terms": {"": [0, 1, 2, 9, 10, 13, 17, 22, 23, 24, 25, 38, 41, 43, 44, 47, 48, 49, 50, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 77, 79, 81], "0": [1, 8, 12, 19, 22, 23, 24, 25, 38, 39, 41, 45, 47, 48, 49, 51, 56, 57, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 76, 77, 80], "00": [66, 76], "000": [43, 57, 58, 59, 61, 65, 76], "00000": 66, "000000000228": 58, "000000002716": 64, "000000005433": 64, "000000005699": 56, "00000000667": 63, "00000000737": 59, "000000009255": 59, "000000016571": 56, "000000025846": 56, "000000066239": 80, "000000080666": 63, "000000087766": 38, "000000087947": 38, "000000132342": 38, "000000132477": 80, "000000171333": 38, "000019": 66, "0001": 24, "00015247829": 66, "000158283449": [66, 72], "000182596327": [66, 72], "0002629818914": 66, "000262981975": [66, 72], "000264659394": 61, "000278604397": 38, "000278604432": 38, "000279252646": 38, "000279252712": 38, "000279360313": 38, "000279400627": 38, "000280008582": 38, "000389705577": [66, 72], "000389705578": 66, "00043742467": 66, "000699999914": [57, 58], "0007": [57, 58], "000700406079": 57, "000999999996": 61, "001": [57, 58, 61, 62, 66], "001328179": 66, "00133": 66, "00155": 66, "001760659657": 65, "002": [58, 59, 66], "002428444854": [66, 72], "00242844486": 66, "00276": 66, "003": 66, "003252265133": 64, "003370326044433": 66, "004": [58, 66], "0040778768": 66, "0040780053": 66, "005": 66, "005922059067": [66, 72], "005922758763": [66, 72], "006": [59, 66], "007": 66, "00701": 66, "00734": 66, "008": 66, "009": 66, "009814839065": [66, 72], "009815746824": 66, "00m": [65, 66], "01": 66, "010": [62, 63], "010037733273": 65, "010441135564": 65, "011": 66, "011136539049": 65, "012": 66, "01221": 66, "012563695": 66, "013": 66, "0135": 66, "01350": 66, "014": 66, "01469": 66, "015": [59, 66], "01596": 38, "01598": 38, "015980687529": 38, "016": 66, "016598595077": 65, "017": [59, 66], "017709205452": 66, "01771": 66, "017988976072": 65, "018": 66, "01815424": 66, "0182": [66, 72], "018415602128": 65, "019": 66, "0191835e": 61, "0196": 62, "01mclass": 65, "01mfrom": 65, "01mwith": 65, "02": [24, 56, 59, 66], "021": 66, "021978": 66, "022": [61, 66], "022486227972": 65, "0227e": 56, "023": 66, "02325": 38, "024": 66, "025": 66, "026": 66, "026862": 66, "027": 66, "028": 66, "029": 66, "03": [56, 57, 58, 59, 61, 65, 66, 70, 77], "030010083": 66, "031": [59, 66], "031746": 66, "032": 66, "033": 66, "03334": 66, "034": 66, "034818105": 66, "034881973051": 59, "034882054037": 59, "034882108064": 59, "034882112737": 59, "03925": 38, "039253278732": 59, "039639297256": 61, "03m": [65, 66], "04": [66, 81], "0415": 66, "044": [57, 58], "0482e": 56, "05": [57, 58, 61, 66], "050": [57, 58, 59, 61], "0509": 59, "050921976530415": [57, 58], "0512821": 66, "052": 59, "0520833": 66, "053": 59, "053053": 56, "054": 61, "05658524928": 72, "057": [57, 58], "057509450598": [66, 72], "057509522654": [66, 72], "06": 66, "0610501": 66, "064": [57, 58], "066": [19, 38], "067": [57, 59, 61], "069": 65, "06ch11357": [77, 79], "07": [38, 59, 66], "072": 59, "0757021": 66, "076": 59, "078506557465": 59, "07851": 38, "078930242493": 64, "079275872384": 64, "08": [12, 38, 56, 57, 59, 66], "080": 51, "083": [57, 58, 61], "083660865505": 65, "0837": 65, "084054807727": 72, "084054819291": 72, "08406": 66, "086496568538": 64, "0868052b": 57, "086812079408": 64, "087": [57, 58, 61, 66], "087156096879": 64, "087348": 65, "088": 59, "09": [57, 58, 61, 66], "090": 65, "091": [59, 65], "09375": 66, "094063055512": 64, "095549901092": [66, 72], "09554990312": 66, "0966": [38, 47, 57, 58, 61, 62, 63], "097": 65, "097041918285": 65, "098": [57, 58, 61], "0982": [57, 61], "098200239641": [66, 72], "09820024135": 66, "09824": [57, 58, 61], "098241844523": [57, 58], "098241844591": 61, "098241848067": 61, "098241992175": 58, "098241998674": 57, "098242475099": 57, "0985": [57, 58], "09875": 66, "099": [57, 58, 59], "09a2fc86933c": 70, "0b17": [57, 58, 61], "0f": [59, 66], "0kl": 47, "0m": 70, "0m_header": 70, "0ma": 70, "0malpha": 70, "0mangstrom": 70, "0max": 70, "0maxes_xref": 70, "0mb": 70, "0mbeta": 70, "0mc": 70, "0mchi": 70, "0mcomment": 70, "0mconstraint": 70, "0md20250303": 70, "0mdatetim": 70, "0mdescript": 70, "0mdev4": 70, "0mdev_e4cv": 70, "0mdigit": 70, "0me4cv": 70, "0menergi": 70, "0menergy_unit": 70, "0mengin": 70, "0mengine_nam": 70, "0mexampl": 70, "0mextra_ax": 70, "0mfile": 70, "0mg43be4f0": 70, "0mgamma": 70, "0mgeometri": 70, "0mh": 70, "0mhigh_limit": 70, "0mhkl": 70, "0mhkl_soleil": 70, "0mhklpy2_vers": 70, "0mhklpy2diffractomet": 70, "0mhklsolver": 70, "0mid001": 70, "0mk": 70, "0mkev": 70, "0ml": 70, "0mlabel": 70, "0mlattic": 70, "0mlimitsconstraint": 70, "0mlow_limit": 70, "0mmode": 70, "0mname": 70, "0momega": 70, "0mphi": 70, "0mpseudo": 70, "0mpseudo_ax": 70, "0mpython_class": 70, "0mr1": 70, "0mr2": 70, "0mrai": 70, "0mreal": 70, "0mreal_ax": 70, "0mreflect": 70, "0mreflections_ord": 70, "0msampl": 70, "0msample_nam": 70, "0msim4c": 70, "0msolver": 70, "0msource_typ": 70, "0mtth": 70, "0mu": 70, "0mub": 70, "0mversion": 70, "0mvibranium": 70, "0mwavelength": 70, "0mwavelength_unit": 70, "0mx": 70, "0myml": 70, "1": [1, 8, 19, 22, 23, 24, 25, 38, 39, 40, 41, 43, 47, 49, 51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 76, 79, 80], "10": [24, 49, 51, 56, 57, 58, 59, 61, 65, 66, 70], "100": [51, 57, 58, 59, 61, 62, 63, 65, 66, 72], "10000": 73, "1000000": 66, "100000000": 66, "10024173": 66, "101": 59, "102": [57, 58, 66], "1035e": 59, "104": [57, 58], "105": 73, "106": [57, 58, 61, 65], "107": [57, 59], "10726912": 66, "108": [57, 58, 61], "109": [57, 58, 61], "10_000": 73, "11": [23, 24, 59, 65, 66], "110": [57, 58, 59, 61], "111": [57, 58, 61, 64], "112": [57, 58, 59], "113": 66, "115": [57, 58, 61, 66], "11575e": 59, "117": 59, "119": [63, 64], "119658": 66, "12": [1, 23, 24, 38, 39, 51, 56, 57, 58, 59, 61, 66, 70], "120": [12, 25, 38, 48, 59, 63, 64, 65], "121": 61, "122": 61, "123": [57, 58, 59, 61], "1230": 66, "124": [57, 58, 61], "12400": 38, "125": [57, 58], "125952615451": 72, "125991451778": 72, "126": [57, 58], "12616": 66, "127": [57, 58], "1276730676": 66, "128": [57, 58, 59], "128558416066": 76, "128558567096": 56, "1286": 76, "129426": 66, "13": [56, 59, 66], "1315": 66, "13150": 66, "133": [58, 59], "13305": 66, "1335": 66, "13350": 66, "134": [58, 61], "135": [57, 58], "13542": 66, "136": [57, 58], "137": [57, 58, 61], "1377": 51, "139": 59, "14": [38, 59, 65, 66, 71, 77], "141": 59, "144": [58, 59, 65], "145": [19, 38, 47, 57, 58, 62, 63], "146": 58, "149": 63, "149966": 66, "15": [24, 59, 66], "150": 59, "152": 61, "155": 59, "156": [61, 65], "156906934347": 61, "156906934523": 61, "156906937379": 61, "156906937382": [57, 58], "156906937469": [57, 58], "15857": 51, "159500990198": 64, "16": [51, 56, 59, 66], "161318197094": 65, "163": 61, "165": 59, "16960": 66, "17": [57, 66], "170": 56, "171": 59, "173": 61, "1741815899": 73, "175": 61, "1785": 66, "179": [57, 58], "18": [58, 66, 72], "180": [10, 24, 38, 45, 56, 57, 58, 59, 61, 65, 66, 70, 72, 73, 76, 80], "181": 65, "18212732091": 56, "183": [61, 65], "185": 66, "187": 61, "18921e": 66, "18b11f0": 24, "19": [38, 66, 72], "1967": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65], "197": 61, "198": 66, "1ea9": 61, "2": [8, 22, 23, 24, 38, 41, 43, 47, 48, 51, 56, 57, 58, 59, 60, 61, 64, 65, 66, 70, 71, 72, 76, 79, 80], "20": [49, 51, 56, 57, 58, 60, 70, 73], "200": [61, 66], "2010": 66, "2017": 77, "2018": [12, 23], "2022": 39, "2023": [77, 79], "202361982144": 64, "2025": [24, 56, 57, 58, 59, 61, 65, 70, 77, 79, 81], "20291": 66, "203185": 66, "207": 57, "2081861": 73, "2081976": 73, "20833": 66, "20845": 51, "2089827": 73, "2091966": 73, "2093": 66, "21": [47, 57, 59], "211225311916": 64, "213": 59, "2158395": 24, "216": 66, "219": [57, 58], "2199": 65, "219920037459": 65, "22": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65, 66], "220": [60, 65], "221": 59, "2217305e": [57, 58], "225": [57, 58], "23": 59, "232872": 73, "232875": 73, "232877": 73, "2328792": 73, "2328923": 73, "2328947": 73, "235461050162": 64, "235463558747": 64, "235464145574": 63, "235637359796": 63, "235639164201": 64, "235639727849": 64, "23625": 66, "2393184e": 61, "23942": 66, "239424258": [66, 72], "239786441844": 64, "239787515781": 63, "239788968842": 64, "23e": [58, 66], "24": [38, 59, 64, 66], "2488e": 59, "24th": 77, "25": [22, 23, 38, 65, 66, 73], "254588904154": 66, "25459": 66, "2546": [66, 72], "2546203": 66, "254918848391": 38, "25492": 38, "25493": 38, "254987": 66, "26": [24, 59, 65, 66], "26219": 66, "262190928219": 66, "263": 59, "263e": 61, "26438": 38, "264389682252": 64, "26440860898": 38, "26441": 38, "2656936d": 58, "27": [24, 66, 70], "273": 61, "277": [57, 58], "2777": 58, "28": [56, 57, 58, 59, 64, 65, 77], "28146688": 66, "283": [56, 70], "283185307179586": 70, "28318530718": [60, 64, 80], "28319": 59, "2832": 38, "284": 58, "285": 65, "29": [59, 66], "2923": 58, "293": 59, "294": [57, 58], "297": [57, 58], "2nd": 77, "2theta": [52, 66], "3": [14, 24, 25, 38, 41, 43, 47, 48, 56, 57, 58, 59, 61, 65, 66, 68, 70, 72, 75, 79], "30": [47, 57, 58, 60, 66], "31": [47, 66], "313": 66, "313235509421": 65, "3139": 51, "31594": 51, "3171e": 59, "31m": 70, "32": [59, 66], "321": 73, "32101": 51, "32458647": 66, "32m": 65, "32m0": [65, 66], "32m1": [65, 66], "32m10": [65, 66], "32m100": 66, "32m10052": 66, "32m10139": 66, "32m10143": 66, "32m10184": 66, "32m10189": 66, "32m10363": 66, "32m10365": 66, "32m10401": 66, "32m10405": 66, "32m10548": 66, "32m10567": 66, "32m10746": 66, "32m107629": 66, "32m10926": 66, "32m10986": 66, "32m11": 66, "32m11015": 66, "32m111131": 66, "32m11151": 66, "32m11159": 66, "32m11185": 66, "32m1125994": 66, "32m11289": 66, "32m11301": 66, "32m11342": 66, "32m11343": 66, "32m11441": 66, "32m11466": 66, "32m11558": 66, "32m11559": 66, "32m1156984": 66, "32m11579": 66, "32m11608": 66, "32m11616": 66, "32m11627": 66, "32m11650": 66, "32m117": 66, "32m11766": 66, "32m11801": 66, "32m11838": 66, "32m11855": 66, "32m119": 66, "32m11911": 66, "32m11913": 66, "32m11921": 66, "32m119940": 66, "32m12": 66, "32m120": 65, "32m12036": 66, "32m12063": 66, "32m12083": 66, "32m12101": 66, "32m12113": 66, "32m12210": 66, "32m12229": 66, "32m12315": 66, "32m12361": 66, "32m12390": 66, "32m12439": 66, "32m125": 66, "32m12596": 66, "32m12603": 66, "32m12632": 66, "32m127": 66, "32m12755": 66, "32m12848": 66, "32m12858": 66, "32m129": 66, "32m13": 66, "32m13003": 66, "32m13076": 66, "32m13078": 66, "32m131": 66, "32m131647": 66, "32m132": 66, "32m13287": 66, "32m133": 66, "32m13332": 66, "32m13372": 66, "32m135": 66, "32m13594": 66, "32m13596": 66, "32m136": 66, "32m13629": 66, "32m13687": 66, "32m13798": 66, "32m1387": 66, "32m139": 66, "32m1390": 66, "32m13903": 66, "32m1393": 66, "32m13943": 66, "32m13948": 66, "32m1396": 66, "32m1399": 66, "32m14": 66, "32m1402": 66, "32m1406": 66, "32m1409": 66, "32m14119": 66, "32m1412": 66, "32m1415": 66, "32m14153": 66, "32m1418": 66, "32m14197": 66, "32m1421": 66, "32m1425": 66, "32m1428": 66, "32m1431": 66, "32m14316": 66, "32m14332": 66, "32m1434": 66, "32m14360": 66, "32m1437": 66, "32m144": 66, "32m1441": 66, "32m1444": 66, "32m144505": 66, "32m1447": 66, "32m1450": 66, "32m1453": 66, "32m14536": 66, "32m1457": 66, "32m1460": 66, "32m1463": 66, "32m146384": 66, "32m146389": 66, "32m1466": 66, "32m14689": 66, "32m1469": 66, "32m146938": 66, "32m14700": 66, "32m1473": 66, "32m14738": 66, "32m147423": 66, "32m1476": 66, "32m1479": 66, "32m14798": 66, "32m1482": 66, "32m1486": 66, "32m148617": 66, "32m14863": 66, "32m148809": 66, "32m148857": 66, "32m1489": 66, "32m14891": 66, "32m149071": 66, "32m149130": 66, "32m1492": 66, "32m149256": 66, "32m149265": 66, "32m149270": 66, "32m149428": 66, "32m1495": 66, "32m14975": 66, "32m1498": 66, "32m149825": 66, "32m149865": 66, "32m149947": 66, "32m15": 66, "32m150": 66, "32m150084": 66, "32m150086": 66, "32m1501": 66, "32m150199": 66, "32m150228": 66, "32m150249": 66, "32m150302": 66, "32m150333": 66, "32m150365": 66, "32m150422": 66, "32m1505": 66, "32m150505": 66, "32m150590": 66, "32m150606": 66, "32m150698": 66, "32m15070": 66, "32m1508": 66, "32m15081": 66, "32m150830": 66, "32m150866": 66, "32m15094": 66, "32m150941": 66, "32m151040": 66, "32m1511": 66, "32m151208": 66, "32m151230": 66, "32m151245": 66, "32m151323": 66, "32m1514": 66, "32m151414": 66, "32m151453": 66, "32m151502": 66, "32m151527": 66, "32m151607": 66, "32m151622": 66, "32m151626": 66, "32m151642": 66, "32m151733": 66, "32m151760": 66, "32m1518": 66, "32m151825": 66, "32m151875": 66, "32m15188": 66, "32m151895": 66, "32m1521": 66, "32m152211": 66, "32m152217": 66, "32m152313": 66, "32m152339": 66, "32m152393": 66, "32m1524": 66, "32m152412": 66, "32m152547": 66, "32m152642": 66, "32m1527": 66, "32m152739": 66, "32m152799": 66, "32m152803": 66, "32m152879": 66, "32m152894": 66, "32m152900": 66, "32m152932": 66, "32m152934": 66, "32m152965": 66, "32m152995": 66, "32m1530": 66, "32m153023": 66, "32m153086": 66, "32m15311": 66, "32m153268": 66, "32m153364": 66, "32m1534": 66, "32m153447": 66, "32m153621": 66, "32m1537": 66, "32m153778": 66, "32m153781": 66, "32m153816": 66, "32m15389": 66, "32m153923": 66, "32m153925": 66, "32m153936": 66, "32m1540": 66, "32m15407": 66, "32m154074": 66, "32m15408": 66, "32m154123": 66, "32m154153": 66, "32m154230": 66, "32m154231": 66, "32m15425": 66, "32m1543": 66, "32m154307": 66, "32m154364": 66, "32m154421": 66, "32m154443": 66, "32m154483": 66, "32m154517": 66, "32m154578": 66, "32m154583": 66, "32m1546": 66, "32m15462": 66, "32m154675": 66, "32m154757": 66, "32m154863": 66, "32m1549": 66, "32m154939": 66, "32m154952": 66, "32m15501": 66, "32m155035": 66, "32m155037": 66, "32m155053": 66, "32m155069": 66, "32m155111": 66, "32m155177": 66, "32m155213": 66, "32m155238": 66, "32m155277": 66, "32m1553": 66, "32m155338": 66, "32m155383": 66, "32m155386": 66, "32m155455": 66, "32m155484": 66, "32m155487": 66, "32m155548": 66, "32m155579": 66, "32m1556": 66, "32m155634": 66, "32m155849": 66, "32m1559": 66, "32m155905": 66, "32m155935": 66, "32m156": 66, "32m156028": 66, "32m156111": 66, "32m156116": 66, "32m156193": 66, "32m1562": 66, "32m156283": 66, "32m156302": 66, "32m156314": 66, "32m15646": 66, "32m1565": 66, "32m156540": 66, "32m156620": 66, "32m156889": 66, "32m1569": 66, "32m157109": 66, "32m1572": 66, "32m157259": 66, "32m157268": 66, "32m15733": 66, "32m157376": 66, "32m157386": 66, "32m157400": 66, "32m157487": 66, "32m1575": 66, "32m15753": 66, "32m157602": 66, "32m157628": 66, "32m157633": 66, "32m157653": 66, "32m157681": 66, "32m157717": 66, "32m15774": 66, "32m1578": 66, "32m157812": 66, "32m157895": 66, "32m157917": 66, "32m158051": 66, "32m1581": 66, "32m158145": 66, "32m158162": 66, "32m158185": 66, "32m158275": 66, "32m158346": 66, "32m158440": 66, "32m1585": 66, "32m158603": 66, "32m158655": 66, "32m158676": 66, "32m15870": 66, "32m158718": 66, "32m158781": 66, "32m158784": 66, "32m1588": 66, "32m15902": 66, "32m159044": 66, "32m1591": 66, "32m159390": 66, "32m1594": 66, "32m159418": 66, "32m159551": 66, "32m1597": 66, "32m159735": 66, "32m15981": 66, "32m16": 66, "32m1601": 66, "32m160188": 66, "32m160299": 66, "32m16032": 66, "32m1604": 66, "32m160495": 66, "32m1607": 66, "32m16077": 66, "32m160806": 66, "32m160833": 66, "32m160905": 66, "32m1610": 66, "32m16101": 66, "32m161164": 66, "32m161200": 66, "32m161287": 66, "32m1613": 66, "32m16130": 66, "32m16131": 66, "32m16153": 66, "32m161554": 66, "32m161605": 66, "32m1617": 66, "32m161868": 66, "32m161879": 66, "32m161898": 66, "32m1620": 66, "32m162056": 66, "32m1623": 66, "32m162567": 66, "32m1626": 66, "32m162744": 66, "32m1629": 66, "32m163035": 66, "32m163124": 66, "32m1633": 66, "32m16343": 66, "32m163578": 66, "32m1636": 66, "32m1639": 66, "32m164": 66, "32m1642": 66, "32m1645": 66, "32m16461": 66, "32m1649": 66, "32m1652": 66, "32m1655": 66, "32m16558": 66, "32m1658": 66, "32m166118": 66, "32m1662": 66, "32m166324": 66, "32m1665": 66, "32m1668": 66, "32m1671": 66, "32m16733": 66, "32m1674": 66, "32m1678": 66, "32m16801": 66, "32m1681": 66, "32m1684": 66, "32m1687": 66, "32m1690": 66, "32m16901": 66, "32m1694": 66, "32m1697": 66, "32m17": 66, "32m170": 66, "32m1700": 66, "32m1703": 66, "32m1706": 66, "32m1710": 66, "32m1713": 66, "32m1716": 66, "32m1719": 66, "32m1722": 66, "32m1726": 66, "32m1729": 66, "32m1732": 66, "32m17327": 66, "32m1735": 66, "32m1738": 66, "32m1742": 66, "32m1745": 66, "32m1748": 66, "32m1751": 66, "32m1754": 66, "32m17572": 66, "32m1758": 66, "32m176": 66, "32m17607": 66, "32m1761": 66, "32m17622": 66, "32m1764": 66, "32m1767": 66, "32m1770": 66, "32m1774": 66, "32m1777": 66, "32m17785": 66, "32m1780": 66, "32m1783": 66, "32m1786": 66, "32m17873": 66, "32m1790": 66, "32m1793": 66, "32m1797": 66, "32m180": 65, "32m1800": 66, "32m18029": 66, "32m18032": 66, "32m1804": 66, "32m1807": 66, "32m18076": 66, "32m180900": 66, "32m181": 65, "32m1810": 66, "32m18129": 66, "32m1813": 66, "32m1817": 66, "32m18190": 66, "32m1820": 66, "32m1823": 66, "32m1826": 66, "32m18265": 66, "32m1829": 66, "32m18309": 66, "32m1834": 66, "32m18346": 66, "32m18349": 66, "32m1837": 66, "32m1840": 66, "32m1844": 66, "32m1848": 66, "32m18488": 66, "32m185": 66, "32m1851": 66, "32m18538": 66, "32m1856": 66, "32m1860": 66, "32m18614": 66, "32m18631": 66, "32m18635": 66, "32m1867": 66, "32m1870": 66, "32m1874": 66, "32m18749": 66, "32m1877": 66, "32m188": 66, "32m1881": 66, "32m18820": 66, "32m18857": 66, "32m1887": 66, "32m18871": 66, "32m18914": 66, "32m1892": 66, "32m1896": 66, "32m1899": 66, "32m19": 66, "32m1904": 66, "32m1907": 66, "32m1910": 66, "32m1913": 66, "32m19130": 66, "32m1916": 66, "32m19174": 66, "32m1921": 66, "32m1924": 66, "32m19246": 66, "32m1927": 66, "32m193": 66, "32m1930": 66, "32m19326": 66, "32m1933": 66, "32m19339": 66, "32m1937": 66, "32m1940": 66, "32m1944": 66, "32m1947": 66, "32m19499": 66, "32m1951": 66, "32m1954": 66, "32m1957": 66, "32m19599": 66, "32m1960": 66, "32m19602": 66, "32m1963": 66, "32m19645": 66, "32m1966": 66, "32m19673": 66, "32m197": 66, "32m1970": 66, "32m1973": 66, "32m19731": 66, "32m1976": 66, "32m19763": 66, "32m19770": 66, "32m1979": 66, "32m1982": 66, "32m1986": 66, "32m19861": 66, "32m1989": 66, "32m1992": 66, "32m1995": 66, "32m19957": 66, "32m19995": 66, "32m2": [65, 66], "32m20": 66, "32m200": 66, "32m20011": 66, "32m20057": 66, "32m202350": 66, "32m20271": 66, "32m20292": 66, "32m2030": 66, "32m20319": 66, "32m20485": 66, "32m20550": 66, "32m2055366": 66, "32m20611": 66, "32m206119": 66, "32m206220": 66, "32m20663": 66, "32m2070": 66, "32m207046": 66, "32m207183": 66, "32m20735": 66, "32m208": 66, "32m208124": 66, "32m208222": 66, "32m208376": 66, "32m208400": 66, "32m208587": 66, "32m208609": 66, "32m208649": 66, "32m208856": 66, "32m208867": 66, "32m208911": 66, "32m209064": 66, "32m20930": 66, "32m209527": 66, "32m209593": 66, "32m209611": 66, "32m21": 66, "32m210007": 66, "32m210209": 66, "32m210507": 66, "32m210612": 66, "32m210798": 66, "32m210836": 66, "32m210837": 66, "32m210970": 66, "32m210987": 66, "32m211016": 66, "32m211018": 66, "32m211047": 66, "32m211119": 66, "32m211170": 66, "32m2112": 66, "32m211300": 66, "32m211378": 66, "32m211499": 66, "32m211557": 66, "32m211560": 66, "32m211587": 66, "32m211765": 66, "32m211771": 66, "32m211884": 66, "32m212146": 66, "32m212158": 66, "32m212226": 66, "32m212296": 66, "32m212312": 66, "32m212388": 66, "32m212443": 66, "32m212445": 66, "32m212450": 66, "32m21251": 66, "32m212531": 66, "32m212673": 66, "32m212702": 66, "32m212709": 66, "32m212711": 66, "32m212760": 66, "32m212885": 66, "32m212916": 66, "32m212932": 66, "32m212983": 66, "32m212993": 66, "32m213053": 66, "32m213056": 66, "32m213132": 66, "32m213140": 66, "32m213157": 66, "32m213182": 66, "32m213216": 66, "32m213250": 66, "32m213365": 66, "32m213366": 66, "32m213390": 66, "32m213402": 66, "32m213598": 66, "32m213608": 66, "32m213613": 66, "32m213631": 66, "32m213650": 66, "32m213665": 66, "32m213724": 66, "32m213725": 66, "32m213750": 66, "32m213817": 66, "32m213819": 66, "32m213865": 66, "32m213902": 66, "32m214113": 66, "32m214318": 66, "32m214362": 66, "32m214735": 66, "32m214736": 66, "32m214769": 66, "32m214817": 66, "32m214837": 66, "32m2150": 66, "32m215009": 66, "32m215055": 66, "32m215071": 66, "32m215083": 66, "32m215089": 66, "32m21510": 66, "32m215152": 66, "32m215181": 66, "32m215193": 66, "32m215211": 66, "32m215287": 66, "32m215357": 66, "32m215394": 66, "32m21545": 66, "32m215481": 66, "32m215519": 66, "32m215559": 66, "32m215564": 66, "32m215570": 66, "32m21562": 66, "32m215655": 66, "32m215730": 66, "32m215747": 66, "32m215759": 66, "32m215771": 66, "32m215861": 66, "32m215906": 66, "32m215958": 66, "32m215963": 66, "32m216081": 66, "32m216110": 66, "32m216163": 66, "32m216278": 66, "32m2163": 66, "32m216307": 66, "32m216369": 66, "32m216466": 66, "32m216518": 66, "32m216519": 66, "32m216532": 66, "32m216578": 66, "32m216584": 66, "32m216589": 66, "32m216595": 66, "32m216764": 66, "32m216772": 66, "32m21706": 66, "32m217157": 66, "32m217312": 66, "32m217325": 66, "32m217329": 66, "32m217361": 66, "32m217383": 66, "32m217476": 66, "32m217483": 66, "32m217489": 66, "32m217550": 66, "32m2176": 66, "32m217604": 66, "32m217611": 66, "32m217624": 66, "32m217670": 66, "32m21805": 66, "32m218155": 66, "32m218245": 66, "32m21845": 66, "32m218463": 66, "32m2186": 66, "32m218829": 66, "32m218890": 66, "32m218921": 66, "32m219": 66, "32m219055": 66, "32m219115": 66, "32m219117": 66, "32m219405": 66, "32m219409": 66, "32m219481": 66, "32m219494": 66, "32m219515": 66, "32m219756": 66, "32m219835": 66, "32m219871": 66, "32m22": 66, "32m220084": 66, "32m220094": 66, "32m220096": 66, "32m220118": 66, "32m220156": 66, "32m220236": 66, "32m220269": 66, "32m220449": 66, "32m22067": 66, "32m220899": 66, "32m2210": 66, "32m221519": 66, "32m22154": 66, "32m221754": 66, "32m22183": 66, "32m221891": 66, "32m222183": 66, "32m2225": 66, "32m22310": 66, "32m223850": 66, "32m223853": 66, "32m223951": 66, "32m223974": 66, "32m22406": 66, "32m2245": 66, "32m22450": 66, "32m224576": 66, "32m22468": 66, "32m22585": 66, "32m2261": 66, "32m22666": 66, "32m22682": 66, "32m22698": 66, "32m22781": 66, "32m22841": 66, "32m2285": 66, "32m22976": 66, "32m23": 66, "32m23055": 66, "32m23090": 66, "32m231": 66, "32m2313": 66, "32m23163": 66, "32m2317": 66, "32m23273": 66, "32m2331": 66, "32m23373": 66, "32m23499": 66, "32m2353": 66, "32m23543": 66, "32m2370": 66, "32m23774": 66, "32m2389": 66, "32m24": 66, "32m24091": 66, "32m241": 66, "32m2413": 66, "32m24230": 66, "32m2440": 66, "32m24528": 66, "32m24529": 66, "32m24570": 66, "32m248": 66, "32m25": [65, 66], "32m25066": 66, "32m25232": 66, "32m25258": 66, "32m25361": 66, "32m25560": 66, "32m25577": 66, "32m2564": 66, "32m25765": 66, "32m25777": 66, "32m25823": 66, "32m25845": 66, "32m26050": 66, "32m26078": 66, "32m2621": 66, "32m26245": 66, "32m2625": 66, "32m2637": 66, "32m26383": 66, "32m26430": 66, "32m26502": 66, "32m26515": 66, "32m26551": 66, "32m26558": 66, "32m26630": 66, "32m2673": 66, "32m26788": 66, "32m2682": 66, "32m26841": 66, "32m26850": 66, "32m2689": 66, "32m27": 66, "32m270": 66, "32m27007": 66, "32m27314": 66, "32m2734": 66, "32m27341": 66, "32m27350": 66, "32m27510": 66, "32m27648": 66, "32m27679": 66, "32m277": 66, "32m27815": 66, "32m2782": 66, "32m28": 66, "32m280": 66, "32m28126": 66, "32m281367": 66, "32m28343": 66, "32m2836": 66, "32m28471": 66, "32m28490": 66, "32m2856788": 66, "32m28683": 66, "32m28706": 66, "32m2887": 66, "32m28944": 66, "32m29": 66, "32m29317": 66, "32m29608": 66, "32m2964": 66, "32m29665": 66, "32m29766": 66, "32m29772": 66, "32m299": 66, "32m3": [65, 66], "32m30": 66, "32m300": 66, "32m30182": 66, "32m3027": 66, "32m30529": 66, "32m3060": 66, "32m30615": 66, "32m30683": 66, "32m30690": 66, "32m30831": 66, "32m30878": 66, "32m30975": 66, "32m31": 66, "32m31030": 66, "32m31072": 66, "32m31100": 66, "32m31135": 66, "32m3122": 66, "32m313802": 66, "32m31390": 66, "32m31453": 66, "32m31496": 66, "32m31556": 66, "32m3166": 66, "32m31720": 66, "32m31794": 66, "32m31846": 66, "32m3192": 66, "32m31937": 66, "32m32": 66, "32m32026": 66, "32m32078": 66, "32m32129": 66, "32m32257": 66, "32m32365": 66, "32m32499": 66, "32m3262": 66, "32m32698": 66, "32m32814": 66, "32m32838": 66, "32m33": 66, "32m33083": 66, "32m33096": 66, "32m3328": 66, "32m333": 66, "32m33414": 66, "32m3356": 66, "32m33920": 66, "32m3411": 66, "32m34180": 66, "32m3423": 66, "32m34435": 66, "32m3490": 66, "32m34935": 66, "32m3497": 66, "32m3544": 66, "32m355": 66, "32m35575": 66, "32m3559": 66, "32m35596": 66, "32m35611": 66, "32m35964": 66, "32m3598": 66, "32m36013": 66, "32m3612": 66, "32m36395": 66, "32m3642": 66, "32m3675": 66, "32m36779": 66, "32m3681": 66, "32m36812": 66, "32m37085": 66, "32m3715": 66, "32m373182": 66, "32m3765": 66, "32m3786": 66, "32m379": 66, "32m37970": 66, "32m3798": 66, "32m38319": 66, "32m38650": 66, "32m3881": 66, "32m38931": 66, "32m390": 66, "32m39205": 66, "32m3941": 66, "32m39882": 66, "32m4": [65, 66], "32m400": 66, "32m400000": 66, "32m40031": 66, "32m40208": 66, "32m40216": 66, "32m40288": 66, "32m40527": 66, "32m40560": 66, "32m40942": 66, "32m41073": 66, "32m41364": 66, "32m41394": 66, "32m41629": 66, "32m41737": 66, "32m4187": 66, "32m41965": 66, "32m41977": 66, "32m42": 66, "32m4205": 66, "32m426": 66, "32m4271": 66, "32m42731": 66, "32m42759": 66, "32m4303": 66, "32m43124": 66, "32m43407": 66, "32m4346": 66, "32m4359": 66, "32m43691": 66, "32m4387": 66, "32m43885": 66, "32m44249": 66, "32m44390": 66, "32m44551": 66, "32m4467": 66, "32m45": 66, "32m4547": 66, "32m45489": 66, "32m45769": 66, "32m46": [65, 66], "32m46010": 66, "32m462": 66, "32m46319": 66, "32m46679": 66, "32m46688": 66, "32m47": 66, "32m4729": 66, "32m47466": 66, "32m48": 66, "32m4824": 66, "32m48374": 66, "32m4842": 66, "32m48478": 66, "32m48695": 66, "32m48758": 66, "32m4876": 66, "32m488": 66, "32m48838": 66, "32m4895": 66, "32m49": 66, "32m492": 66, "32m4924": 66, "32m4939": 66, "32m49805": 66, "32m4983": 66, "32m5": [65, 66], "32m50": 66, "32m500": 66, "32m5001": 66, "32m5002": 66, "32m5011": 66, "32m50517": 66, "32m5073": 66, "32m50751": 66, "32m5094": 66, "32m5097": 66, "32m51059": 66, "32m513344": 66, "32m51677": 66, "32m5177": 66, "32m5197": 66, "32m51974": 66, "32m52": 66, "32m52339": 66, "32m52461": 66, "32m52784": 66, "32m5299": 66, "32m53": 66, "32m533": 66, "32m5392": 66, "32m54": 66, "32m54487": 66, "32m54610": 66, "32m5464": 66, "32m5499": 66, "32m55": 66, "32m55066": 66, "32m55148": 66, "32m5518": 66, "32m5570": 66, "32m56": 66, "32m560024": 66, "32m56075941": 66, "32m5622": 66, "32m5629": 66, "32m566": 66, "32m5683": 66, "32m57": 66, "32m5732": 66, "32m57374": 66, "32m57399": 66, "32m5744": 66, "32m57598": 66, "32m5768": 66, "32m57698": 66, "32m58095": 66, "32m5832": 66, "32m58718": 66, "32m58885": 66, "32m59": 66, "32m5903": 66, "32m5910": 66, "32m59186": 66, "32m5961": 66, "32m6": 66, "32m6001": 66, "32m6019": 66, "32m6074": 66, "32m6077": 66, "32m6091": 66, "32m61113": 66, "32m61246": 66, "32m6132": 66, "32m61325": 66, "32m61425": 66, "32m61699": 66, "32m61746497": 66, "32m61812": 66, "32m6208": 66, "32m6219": 66, "32m6316": 66, "32m6321": 66, "32m6352": 66, "32m6357": 66, "32m64": 65, "32m6437": 66, "32m6484": 66, "32m6489": 66, "32m6569": 66, "32m6594": 66, "32m6600": 66, "32m6621": 66, "32m66376": 66, "32m67": 66, "32m6711": 66, "32m6754": 66, "32m6766": 66, "32m68": 66, "32m6814": 66, "32m6872": 66, "32m6924": 66, "32m6939": 66, "32m7": 66, "32m70": 66, "32m700": 66, "32m7046": 66, "32m7079": 66, "32m71361": 66, "32m71409": 66, "32m7262": 66, "32m7267": 66, "32m7314": 66, "32m7332": 66, "32m7403": 66, "32m7414": 66, "32m742286": 66, "32m7431": 66, "32m7434": 66, "32m7466": 66, "32m7523": 66, "32m7530": 66, "32m7537": 66, "32m7555": 66, "32m7581": 66, "32m7598": 66, "32m76": 66, "32m7615": 66, "32m7635100": 66, "32m7660": 66, "32m7664": 66, "32m7688": 66, "32m7691": 65, "32m7693": 66, "32m7697": 66, "32m77": 66, "32m77224": 66, "32m7753": 66, "32m78": 66, "32m7826": 66, "32m7836": 66, "32m7891": 66, "32m79": [65, 66], "32m7982": 66, "32m8": 66, "32m800": 66, "32m8044": 66, "32m8100": 66, "32m8109": 66, "32m82": 66, "32m8262": 66, "32m8267": 66, "32m8294": 66, "32m83": 66, "32m8300": 66, "32m8394": 66, "32m8423": 66, "32m8426": 66, "32m8451": 66, "32m84753": 66, "32m8492": 66, "32m8493": 66, "32m8572": 66, "32m8579": 66, "32m86": 66, "32m8603": 66, "32m8641": 66, "32m8667": 66, "32m8683": 66, "32m87": 66, "32m8773": 66, "32m8774": 66, "32m8790": 66, "32m87984": 66, "32m88": 66, "32m8841": 66, "32m8848": 66, "32m8902": 66, "32m8990": 66, "32m9": [65, 66], "32m90": [65, 66], "32m9014": 66, "32m9065": 66, "32m9084": 66, "32m91": 66, "32m9144": 66, "32m91722": 66, "32m9267": 66, "32m9282": 66, "32m93": 66, "32m9301": 66, "32m9415": 66, "32m9433": 66, "32m9438": 66, "32m9463": 66, "32m9477": 66, "32m9478": 66, "32m9616": 66, "32m9632": 66, "32m9641": 66, "32m9680": 66, "32m97219": 66, "32m9783": 66, "32m9798": 66, "32m9849": 66, "32m99": 66, "32m9901": 66, "32m9915": 66, "32m9953": 66, "32mclass": 70, "33": [24, 57, 58, 66, 70], "334": 59, "33m": 65, "34": [51, 56, 57, 58, 63, 70], "343": 59, "3434": [1, 49], "34m": 70, "35": [25, 38, 56, 57, 58, 64], "352": 57, "354": 59, "3554": 61, "35b0": 58, "36": 66, "364719": 24, "368": [57, 58], "36e38bc": 24, "36m": 70, "36m0": 70, "36m1": 70, "36m10": 70, "36m12": 70, "36m180": 70, "36m20": 70, "36m3": 70, "36m4": 70, "36m5": 70, "36m6": 70, "36m90": 70, "37": [59, 66], "371": 66, "373": 65, "374": 65, "375": 59, "3752177e": 61, "376221272748": 65, "38": [59, 65, 66, 72], "38310": 51, "384": 59, "385": 61, "389": 51, "39": [59, 65, 66], "390": 65, "391544524019": 65, "3916": 59, "391607045543": 59, "391838271968": 65, "393162": 66, "3937": 39, "39583": 66, "398419843856837": [23, 24, 39, 70], "39m": [65, 66], "3x3": [0, 1, 2, 23, 63, 64], "4": [8, 12, 13, 19, 22, 23, 24, 25, 38, 47, 48, 49, 51, 52, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 76, 79], "40": [57, 58, 64, 65, 77], "400000": 66, "403": 65, "4038": 66, "41": 65, "4104177": 66, "4134285e": [57, 58], "415": [65, 66], "4174": 58, "41d8": 58, "41f71e9": 24, "42": [24, 59, 65], "422873644113": 65, "42844486e": 66, "431": [57, 58, 61], "431020511": [12, 23, 57, 58], "432": [57, 58], "434": 59, "43d6": 61, "44": [38, 63, 64, 80], "44228": 66, "442e": 57, "443": [57, 58], "4480499": 66, "449": 65, "44ae": 57, "45": [25, 38, 51, 60, 64, 80], "450": [57, 58], "4500": [57, 58], "4507": 61, "450878762451": 57, "450879000663": 57, "450879003913": 58, "450879077705": 61, "450879077739": [57, 58], "45088": [57, 58, 61], "4509": 61, "451": [19, 38, 47, 57, 58, 61, 62, 63], "457": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65], "459": [58, 61, 66], "46": 65, "4609e": 59, "462e": 61, "463": 66, "464": [51, 57, 58, 59], "466": 66, "46a1": 70, "46af": 61, "47": 66, "48": [59, 66], "4806": 58, "480759304678": 65, "4871": 57, "48814": 66, "49": [59, 65], "492": 61, "493": 61, "495930309978": 64, "49593056545": 64, "495931249329": 63, "495c": 59, "498101063505": 64, "498103654451": 64, "498104382852": 63, "49883": 66, "498831314951": 66, "499": 61, "499275": 66, "49927508": 66, "49e": [57, 58], "4a52": 58, "4c23": 58, "4d07": 57, "4e1b": 57, "4ef6": 58, "5": [12, 23, 24, 25, 38, 48, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 72, 76, 80], "50": [57, 58, 60, 61, 66, 72], "50001": 66, "505": 59, "508019": 66, "509": 61, "5098": 59, "509837696782": 38, "50984": 38, "509844391025": 59, "50985": 38, "51": [61, 65, 66], "514": [59, 61], "515": 12, "52": 61, "52071": 66, "524": 61, "52438": 66, "524381856439": 66, "53": [24, 59, 65], "535": 65, "54": [19, 24, 38, 47, 57, 58, 59, 61, 66], "541": [57, 58], "542": 51, "543471605558": 63, "543471652084": 64, "543473530637": 64, "545455316412": 64, "545455367746": 63, "5454561359": 64, "547615630691": 64, "547615682228": 63, "547617660448": 64, "549": [57, 58], "5491": 57, "54bd": 58, "55": [24, 58, 61], "551": 66, "553": 66, "55499031e": 66, "555": 59, "556": [57, 58], "557": 61, "559": [57, 58, 61], "56": [61, 65], "5607": 76, "5632": 62, "564279283548": 56, "568": 58, "569": [57, 58], "57": [61, 66], "571": [57, 58], "57437": 66, "58": [59, 61], "5829a4a8b8cd": 61, "584878": 57, "585": [57, 58], "586": [59, 65], "587889416833": 61, "59": [61, 64], "591009918402": 64, "591011669061": 64, "591013127949": 63, "592": [57, 58], "5950": 61, "5b60234f7d1c": 57, "5f": 66, "6": [35, 38, 51, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 80], "60": [47, 57, 58, 60, 61, 63, 64], "604": 57, "604548030557": 65, "6085c6037b16": 61, "60911": 65, "60954": 65, "60cf02d22794": 59, "61": [61, 65], "61198": 65, "614": 61, "616a": 70, "62": 61, "627": 59, "62751693358": 51, "628": [57, 58, 65], "62981891e": 66, "62e425d": 24, "63": 61, "63030468362": 65, "6307e": 38, "6317e": 38, "63267": 66, "636": 59, "63699": 66, "637": 65, "639427042267": 65, "64": [1, 52, 59, 65], "641": 57, "64202": 51, "6428": 61, "644": 66, "64400": 66, "6465": 58, "647": [57, 58], "648": [57, 58], "649": 61, "65": 66, "653": [57, 58], "65396180769": [66, 72], "653961812": 66, "65396181e": 66, "65396364": 66, "654278629": 66, "654278634916": [66, 72], "65427863e": 66, "657": [57, 58], "657219786": 66, "658712442": 66, "658712442301": [66, 72], "65871244e": 66, "659": 58, "66": [59, 65, 66], "661462253": 66, "668": 61, "67": [57, 58, 61], "671": 58, "6767": 58, "677": [57, 58, 59], "68": [57, 58, 61, 66], "680369": 70, "69": [19, 38, 47, 57, 58, 59, 61, 62, 63], "695": [57, 58], "695912": 66, "698": 57, "6b8e": 61, "6e6d71f1": 58, "7": [18, 24, 38, 51, 56, 57, 58, 59, 61, 66, 67], "70": [57, 58, 60, 61], "7039e": 57, "704": [57, 58], "7043e": 59, "706": 61, "707": 57, "708": [57, 58], "70ff17063289": 58, "71": [51, 57, 58, 59, 61], "711": 66, "712": 65, "7125": 66, "71251": 66, "716": 58, "727": [57, 58], "73": 66, "732": 61, "735907238528": 65, "73e": [57, 58], "74": 12, "741661": 66, "741984": 66, "7421e": 56, "744": [57, 58], "744602": 66, "745229": 66, "7453292e": 61, "7453293e": 61, "74541108": 66, "745976299993": 61, "746763": 66, "746aac09": 59, "747176": 66, "74935": 66, "749425": 66, "749535": 66, "749576": 66, "75": [38, 48, 59, 65], "750146": 66, "750712": 66, "750745": 66, "750901": 66, "751224": 66, "751307": 66, "752252": 66, "754012": 66, "754732": 66, "755339": 66, "755646": 66, "755881": 66, "756436": 66, "7568": 61, "757": 59, "757636": 66, "758256": 66, "75835": 66, "758462": 66, "75856": 66, "7587": 66, "758782": 66, "758818": 66, "758871": 66, "75891": 66, "759": [57, 58], "759017": 66, "75907": 66, "759232": 66, "759248": 66, "759381": 66, "759828": 66, "759916": 66, "760047": 66, "760678": 66, "761351": 66, "761379": 66, "761721": 66, "762308": 66, "762322": 66, "762536": 66, "762595": 66, "76297": 66, "763": 61, "763323": 66, "763383": 66, "764017": 66, "764424": 66, "765014": 66, "765139": 66, "765256": 66, "7658": 61, "765802": 66, "765923": 66, "765927": 66, "766": 66, "7660": 61, "766295": 66, "766317": 66, "76633": 66, "766337": 66, "76676": 66, "76681": 66, "7669e": 59, "767029": 66, "767057": 66, "767067": 66, "767139": 66, "767174": 66, "76721": 66, "767254": 66, "76729": 66, "767351": 66, "767447": 66, "767756": 66, "767994": 66, "768148": 66, "768513": 66, "768586": 66, "76879": 66, "768794": 66, "769135": 66, "76928": 66, "769567": 66, "769825": 66, "770007": 66, "770149": 66, "770496": 66, "771171": 66, "771727": 66, "771787": 66, "772036": 66, "773619": 66, "773786": 66, "7738": 59, "773809": 66, "77381778179": 59, "774272": 66, "774448": 66, "77446": 66, "774464": 66, "774605": 66, "7747": 66, "774726": 66, "774783": 66, "775293": 66, "775556": 66, "775617": 66, "775751": 66, "77578": 66, "775882": 66, "775885": 66, "7758e": 56, "775939": 66, "776286": 66, "776396": 66, "776675": 66, "776829": 66, "776965": 66, "777123": 66, "777158": 66, "777313": 66, "777474": 66, "777549": 66, "777622": 66, "777877": 66, "777939": 66, "778338": 66, "778406": 66, "778673": 66, "77879": 66, "778812": 66, "778844": 66, "77903": 66, "77994": 66, "779956": 66, "78": 51, "780109": 66, "780219": 66, "780257": 66, "78064c89": 61, "780963": 66, "781131": 66, "78144": 66, "78144e": 66, "781495": 66, "7817": [66, 72], "781726143": 66, "782138": 66, "782269": 66, "782463": 66, "78266": 66, "78316": 66, "783304": 66, "783397": 66, "783547": 66, "783961": 66, "784": [57, 58], "78404": 66, "784347": 66, "784488": 66, "784698": 66, "785": 66, "78578": 66, "786028": 66, "786618": 66, "786813": 66, "787203": 66, "787591": 66, "787592": 66, "787632": 66, "788173": 66, "788317": 66, "788354": 66, "788551": 66, "788631": 66, "789307": 66, "789425": 66, "79": [62, 65], "79094": 66, "7914": [66, 72], "791444574": 66, "791666": 66, "792261": 66, "793091": 66, "793177": 66, "793627": 66, "793698e": 66, "793727": 66, "793738": 66, "793964": 66, "79397": 66, "793974665134": 66, "795457": 66, "795573": 66, "795713": 66, "796118": 66, "797351": 66, "798": 59, "798067": 66, "7989": [66, 72], "79890313": 66, "7ba10ad2": 58, "7d2accb730d3": 57, "7d8f7394902f": 58, "8": [12, 22, 51, 57, 58, 59, 61, 66], "80": [48, 57, 58, 59], "800": 61, "8007": 51, "801": 66, "804f": 58, "805589": 66, "806554": 39, "806878": 66, "807": 59, "807066": 66, "8071": 66, "807608": 66, "807836": 66, "812": 59, "81574682e": 66, "816": 65, "81849": 66, "819": 61, "82002413e": 66, "8202278e": 61, "82125": 66, "821953663396": 64, "822626886902": 63, "823801": 70, "824180": 70, "827": 70, "82915e": 38, "834": [57, 58], "838": 66, "839": 61, "842": 61, "84344949": 66, "844": 61, "845": 61, "848": 59, "85": [48, 59, 62, 63, 66], "851": 66, "852": [61, 66], "853": 66, "854": 66, "855": 66, "856": 66, "857": 66, "858": [66, 70], "859": 66, "85a13f61": 57, "86": [51, 66], "861": [61, 66], "86134": 66, "861341648471": 66, "862": [57, 58, 66], "863": [61, 66], "864": 66, "865": 66, "866": [61, 66], "867": 66, "868": 66, "869": 66, "87": 66, "871": [65, 66], "87102e": 38, "87131": 66, "872": 66, "873": 66, "873d753d": 57, "874": 66, "875": 66, "876": 66, "877": 66, "878": 66, "879": [59, 66], "88": 66, "881": 66, "8816019e": 66, "882": [57, 58, 66], "883": 66, "884": [57, 58, 66], "885": [62, 66], "88574e": 38, "886": 66, "887": 66, "888": 66, "889": [61, 66], "89": [51, 57, 58, 62, 66, 72, 80], "89058": 66, "891": 66, "892": [57, 58, 66], "893": 66, "894": 66, "895": 66, "8953": 62, "896": 66, "897": 66, "89705578e": 66, "898": 66, "8987": 62, "899": [57, 58, 66], "89967858": 66, "8997": [66, 72], "89d4": 58, "8c6f5b55": 57, "8cc5": 61, "9": [12, 28, 38, 44, 47, 56, 57, 58, 59, 61, 65, 66, 76], "90": [12, 22, 23, 24, 25, 38, 45, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 80], "900": [57, 58, 61, 65], "901": [57, 58, 66], "9011": 57, "9017": 66, "902": 66, "903": 66, "904": [59, 66], "904238120609": 72, "905": 66, "90549": 38, "906": 66, "907": 66, "908": 66, "9081e": 38, "9086e": 38, "909": 66, "90f5": 59, "91": [59, 66], "911": 66, "9112342e": 66, "912": [57, 58, 66], "913": 66, "914": 66, "914251": 58, "915": 66, "916": 66, "917": [57, 58, 66], "918": 66, "919": 66, "919884370594": 65, "919974864499": 65, "92": [59, 66], "920": 59, "921": 66, "922": 66, "923": 66, "924": 66, "925": 66, "926": 66, "927": 66, "928": 66, "929": [59, 66], "93": 66, "93067": 66, "930670824236": 66, "931": [59, 66], "931758281633": 63, "932": 66, "933": [61, 65, 66], "934": 66, "935": 66, "936": 66, "937": 66, "938": 66, "939": [57, 58, 66], "93b6": 57, "94": 66, "941": 66, "942": 66, "943": [58, 61, 66], "944": 66, "945": 66, "946": 66, "947": [61, 66], "948": 66, "948202": 70, "949": 66, "95": [48, 62, 66], "950": [57, 58, 61], "951": 66, "952": 66, "953": 66, "954": 66, "955": [51, 66], "9555": 61, "956": [58, 61, 66], "957": 66, "958": 66, "958929": 24, "959": [59, 66], "95d3": 57, "96": [59, 66], "96077": 38, "961": 66, "962": 66, "96232": 51, "963": [59, 66], "964": 66, "965": 66, "966": 66, "967": 66, "968": 66, "969": 66, "97": 66, "970": 59, "971": 66, "972": 66, "973": 66, "974": 66, "9748": 24, "9749": 24, "975": [61, 66], "9750": 24, "9751": 24, "9752": 24, "976": 66, "977": 66, "978": [61, 66], "978796646787": 57, "979": 66, "97e": [57, 58], "98": 66, "980126517252": 58, "98038": 38, "981": 66, "982": 66, "98229138": 66, "983": 66, "984": 66, "98402": 38, "98413": 66, "98413e": 66, "985": 66, "98529232261": 72, "9855155234": 72, "986": 66, "987": 66, "988": 66, "989": 66, "989926119534": 64, "99": [59, 66], "991": 66, "992": 66, "992404896021": 64, "992432445262": 64, "993": [57, 58, 66], "993092986426": 64, "993463529784": 64, "994": 66, "995": 66, "996": 66, "997": 66, "9973": 59, "997332854697": 59, "998": 66, "998327393204": [66, 72], "998344945272": [66, 72], "998995273774": 59, "999": [57, 58, 66], "9990436": 66, "99906": 66, "9990631": 66, "999297295242": 63, "999299941632": 58, "999299983357": 57, "9993": 58, "999391434092": 59, "999391435978": 59, "999391462637": 59, "999391567978": 59, "99945": 66, "999452893": 66, "999692628881": 65, "99973": 58, "999842751938": 64, "999854": 66, "9999": [62, 66], "99991675492": 61, "999916764257": [57, 58, 61], "999921375969": 64, "9999781": 66, "99998": 66, "999982447783": [66, 72], "999993753339": 59, "999999876575": 80, "999999913446": 38, "999999917768": 80, "999999952659": 38, "999999953592": 57, "999999954315": 59, "999999959667": 63, "99999996119": 38, "999999963097": 63, "999999980506": 57, "999999984039": 59, "999999994159": 59, "999999996665": 63, "999999997227": 61, "99999999738": 61, "999999999738": 64, "999999999848": 61, "999999999851": [57, 58], "999999999925": [57, 58], "999999999947": 58, "9b4e": 57, "9e": [12, 66], "9e7e": 57, "9f32": 58, "A": [0, 2, 14, 22, 23, 24, 38, 41, 49, 51, 52, 58, 59, 61, 64, 65, 68, 73], "AS": 79, "As": [0, 2, 23, 44, 59], "At": [52, 57, 58, 62], "Be": 59, "By": [12, 57, 58, 61, 76], "For": [38, 41, 44, 51, 58, 61, 64, 66, 68, 76, 80, 81], "If": [22, 23, 25, 57, 58], "In": [24, 47, 49, 52, 57, 58, 61, 64, 66, 68, 70, 71], "It": [13, 24, 42, 43, 44, 47, 52, 56, 64], "NOT": 38, "No": [3, 8, 25, 77, 79], "Not": [0, 1, 2, 23, 52], "OF": 79, "OR": 68, "One": [10, 45, 47, 49], "THE": 79, "The": [0, 1, 2, 3, 8, 12, 22, 23, 24, 25, 38, 41, 42, 44, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 79, 80], "Then": [51, 65, 70, 78], "There": [47, 64, 70, 73, 76, 78], "These": [47, 49, 51, 60, 64, 71], "To": [1, 52, 57, 58, 59, 61, 70], "Will": 38, "With": [59, 70, 73], "__all__": [22, 38], "__eq__": [12, 13], "__init__": [56, 71, 73], "__package_name__": 23, "__repr__": [0, 1, 2, 10, 12, 13, 14, 23], "__settings_orgname__": 23, "__version__": [23, 56], "_asdict": [9, 10, 12, 13, 14, 23, 25, 39], "_axes_names_d2": 25, "_axes_names_s2d": 25, "_backend": [22, 23], "_choic": 38, "_constraints_dict": 10, "_constraints_for_databrok": 10, "_d": 59, "_detector": 1, "_engin": 1, "_engine_list": 1, "_extra": 59, "_factori": 1, "_field": 10, "_forward_solut": [22, 23, 64], "_fromdict": [9, 10, 12, 13, 14, 23, 25, 39], "_fromdict_cor": 39, "_geometri": 1, "_gname_lock": 1, "_header": [24, 57, 58, 65, 70], "_limit": 73, "_metadata": [0, 2, 23], "_order": 13, "_push_current_constraint": 10, "_real": 73, "_reflect": 8, "_sampl": [0, 1, 2, 23, 25], "_sample_nam": 25, "_select": 38, "_selecteddiffractomet": 38, "_set_constraint": 10, "_solver": 25, "_sourc": [22, 23, 47, 65, 66], "_summary_dict": [0, 1, 2, 23], "_v2_checklist": 43, "_valid": [9, 23], "_validate_pseudo": [13, 25], "_validate_r": 13, "_validate_reflect": 13, "_validate_wavelength": 13, "_wavelength": [8, 23, 39], "_wavelength_unit": 39, "a1": [24, 33], "a2": [24, 33], "a25c": 58, "a2b5": 70, "a2db": 57, "a340": 58, "a3ff08971134": 58, "a40c": 58, "a75774691a0a": 58, "a7cc092a": 58, "a8a5": 58, "a_kev": [23, 39], "aa11945c": 70, "abc": [0, 2, 10, 23, 39], "abil": 56, "abort": 66, "about": [43, 44, 56, 57, 58, 59, 70, 81], "abov": [38, 44, 47, 59, 66, 70, 71, 79], "absolut": 47, "abstract": [0, 2, 8, 10, 23], "abstractmethod": [0, 2, 23, 39], "ac02": [77, 79], "accept": [10, 24, 25, 45, 51, 57, 58, 61, 68], "access": [51, 59, 64], "accuraci": 79, "acknowledg": [77, 79], "acquir": [22, 23], "acta": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65], "action": [72, 76], "activ": [52, 78], "actual": 62, "ad": [8, 22, 23, 24, 43, 44, 47, 59, 65, 70], "adapt": 68, "add": [0, 1, 2, 3, 8, 13, 22, 23, 24, 25, 38, 43, 44, 56, 59, 64, 66, 70, 75], "add_oriented_vibranium_to_e4cv": 28, "add_ref_to_t": 66, "add_reflect": [22, 23, 25, 38, 49, 51, 56, 59, 60, 62, 63, 70], "add_sampl": [22, 23, 25, 38, 51, 56, 57, 58, 59, 61, 65, 66, 70, 75], "addit": [22, 23, 25, 28, 43, 46, 47, 49, 51, 64, 67, 68, 70], "addreflect": [0, 1, 2, 3, 5, 8, 23, 43, 44], "addrow": 66, "adjust": 59, "advanc": 79, "after": [22, 23, 66], "again": [70, 76], "aid": 60, "alia": 13, "alias": 38, "align": [50, 66], "all": [0, 1, 2, 3, 5, 8, 10, 17, 22, 23, 24, 25, 38, 39, 42, 43, 44, 47, 49, 52, 56, 57, 58, 59, 60, 61, 66, 75, 76, 78, 79, 80], "allow": [47, 57, 58, 60, 61, 68, 71], "alon": 44, "alpha": [12, 22, 23, 24, 25, 38, 47, 48, 49, 52, 57, 58, 61, 62, 65, 66, 67, 68, 70, 72], "alphabet": 71, "alphai": 67, "alphax": 67, "alreadi": [13, 44], "also": [2, 38, 43, 44, 68, 70], "altern": [22, 56, 60, 64], "alwai": 74, "an": [0, 1, 2, 13, 22, 23, 24, 25, 35, 38, 41, 42, 44, 47, 50, 52, 57, 58, 59, 61, 65, 68, 70, 73, 75, 76, 77], "an2theta": 66, "anaconda": [1, 78], "analyz": [43, 44], "angl": [0, 1, 2, 3, 13, 22, 23, 25, 44, 47, 50, 51, 52, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 76, 80], "angstrom": [12, 23, 24, 25, 39, 47, 50, 51, 57, 58, 59, 60, 65, 66, 70, 76], "angular": 68, "ani": [0, 1, 2, 3, 8, 13, 22, 23, 24, 25, 38, 39, 42, 43, 44, 47, 52, 56, 61, 65, 67, 70, 71, 79], "annot": [24, 33], "anoth": [13, 23, 24, 28, 56, 71], "answer": 33, "antheta": 66, "anyaxestyp": [22, 23, 24, 25, 38], "anyth": 56, "api": [2, 43, 77], "apparatu": 79, "appear": [22, 23, 38, 56, 57, 58, 60, 61], "append": [22, 23, 24, 47, 57, 58, 59, 61, 66, 70], "appli": [43, 51, 57, 58, 61, 75], "applic": 68, "approxim": 60, "apstool": 59, "ar": [1, 10, 13, 22, 23, 24, 25, 42, 44, 45, 47, 50, 51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 73, 76, 78, 79], "arbitrari": [43, 44, 68, 70], "archiv": 78, "arg": [13, 18, 28, 56, 71, 73], "argonn": [77, 79], "argument": [22, 23, 25, 31, 44, 52, 57, 58, 61, 65, 73], "arm": 66, "around": [59, 68], "arr": 1, "arrai": [24, 43, 66], "arrang": [47, 66], "articl": 44, "asil": [12, 23], "assembl": 47, "assert_context_result": 26, "assign": [22, 23, 25, 38, 43, 46, 51, 73], "assign_ax": 25, "associ": [13, 51, 65, 68, 76], "assum": [62, 63, 64, 79], "atom": [47, 68], "atth": 73, "attr": 49, "attribut": [2, 25, 47], "attributesign": 49, "augmentedfourc": 28, "author": 79, "auto": [40, 46], "auto_assign": [22, 23], "auto_assign_ax": [22, 23, 25, 56, 71, 73], "autoapi": 40, "automat": [22, 23, 25, 43, 56, 59, 71, 72], "autosummari": 10, "avail": [0, 1, 2, 23, 24, 38, 43, 47, 52, 57, 58, 59, 61], "avoid": [38, 43, 44, 61], "ax": [0, 1, 2, 13, 22, 23, 24, 25, 28, 34, 35, 38, 42, 43, 44, 46, 47, 50, 52, 57, 58, 59, 61, 63, 64, 65, 66, 68, 70, 77, 80], "axes_c": 1, "axes_r": 1, "axes_read": 1, "axes_to_dict": 24, "axes_w": 1, "axes_written": 1, "axes_xref": [24, 25, 56, 57, 58, 65, 70, 71], "axes_xref_revers": 25, "axesarrai": 24, "axesdict": [22, 23, 24, 25, 38], "axeslist": 24, "axestupl": [24, 38], "axi": [0, 1, 2, 3, 5, 8, 10, 13, 17, 22, 23, 25, 31, 38, 47, 52, 56, 57, 58, 61, 65, 66, 68, 70, 73, 75], "axis_dict": 25, "azimuth": [1, 13, 38, 59, 67, 75, 76], "b": [12, 14, 22, 23, 24, 25, 38, 43, 44, 47, 48, 49, 51, 52, 57, 58, 62, 63, 64, 65, 66, 68, 70, 72], "b002": 57, "b16107db": 61, "back": [43, 44, 56, 76], "backend": [22, 23, 24, 25, 27, 38, 40, 42, 43, 44, 47, 49, 52, 56, 68, 74], "backend_solv": 47, "ball": 77, "bar": 80, "bar1": 63, "barometer_mbar": 66, "base": [1, 2, 3, 5, 8, 10, 13, 17, 22, 23, 24, 25, 28, 38, 39, 40, 44, 56, 59], "base_class": 29, "basepitch": 67, "bash": 78, "basi": 44, "basic": [52, 65], "bcda": 79, "beam": 59, "bec": [57, 58, 59, 61], "becaus": [47, 64, 71], "becom": [25, 44], "been": [71, 81], "bef1": 58, "befor": [1, 22, 23, 58, 59, 61, 66, 70], "behalf": 49, "behind": 47, "being": 56, "below": [26, 38, 59, 64, 65, 66, 70], "best": [0, 2, 23, 44, 62], "best_effort": [57, 58, 59, 61], "besteffortcallback": [57, 58, 59, 61], "beta": [12, 22, 23, 24, 25, 38, 47, 48, 49, 52, 57, 58, 62, 65, 66, 67, 68, 70, 72], "between": [1, 8, 10, 13, 25, 41, 43, 45, 47, 50, 52, 56, 57, 58, 61, 63, 64, 66, 67, 68, 71], "bf9912f": 24, "big": 61, "bin": [12, 23], "binari": 79, "bisector": 67, "bissect": 67, "bissector": [1, 24, 38, 49, 57, 58, 61, 64, 66, 67, 70, 72], "bissector_horizont": [59, 67], "bissector_vert": [59, 67, 80], "bit": [1, 52], "black": 59, "blank_ok": [23, 24], "block": [0, 1, 2, 3, 5, 8, 22, 23, 24, 25, 38, 40, 41, 44, 51, 52], "blue": 59, "blueski": [9, 23, 24, 42, 53, 59, 70, 75, 77, 81], "bluesky_2025_1": 59, "blueskyproject": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82], "blueskyrun": 70, "bool": [9, 10, 13, 22, 23, 24, 25, 38], "both": [24, 41, 47, 56, 57, 58, 59, 61], "bp": [22, 23, 24, 47, 57, 58, 61, 70, 75], "br": 75, "bragg": [43, 44], "brief": [13, 14, 38, 51, 73, 75, 80, 81], "bson": 78, "build": [22, 23, 73, 80], "built": [42, 43, 44, 47, 52, 71], "buse": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65], "c": [12, 22, 23, 24, 25, 38, 43, 44, 47, 48, 49, 51, 52, 57, 58, 62, 63, 64, 65, 66, 68, 70, 72, 78, 79], "c070e4e": 58, "c5d3": 59, "c6a26beb3dc0": 57, "ca": 75, "cahkl": [38, 43, 44, 57, 58, 61, 65, 75, 80], "cahkl_tabl": [38, 57, 58, 61], "calc": [44, 57, 58, 61, 66], "calc_ub": [25, 38, 47, 51, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 75], "calcul": [0, 1, 2, 3, 8, 23, 25, 38, 42, 43, 44, 47, 51, 52, 56, 58, 59, 61, 64, 66, 67, 75, 80], "calculate_ub": [0, 1, 2, 3, 5, 8, 23], "calculateorient": 47, "call": [13, 22, 23, 44, 47, 51, 52, 57, 58, 59, 61, 68, 72], "callback": [57, 58, 59, 61], "can": [1, 10, 22, 23, 24, 38, 39, 43, 44, 45, 47, 51, 52, 56, 59, 62, 64, 65, 66, 68, 70, 72], "cannot": [0, 1, 2, 23, 39, 47, 68, 76], "canon": [22, 23, 70], "capabl": [47, 49, 51, 52, 56, 73], "caplog": 36, "capsi": [31, 36], "cartesian": 59, "case": [17, 22, 23, 28, 31, 47, 56, 64, 66, 71, 76], "cat": [24, 33, 57, 58, 59, 61, 70], "catalog": [24, 70], "caus": 44, "ccdtot": 66, "cdot": 60, "cebb7ef8a071": 57, "cell": [47, 51, 68], "certain": 59, "certif": 66, "cgi": [12, 23], "chamber": 65, "chang": [0, 1, 2, 22, 23, 25, 38, 39, 43, 44, 57, 58, 59, 61, 76, 79], "charact": 24, "character": 68, "characterist": 68, "check": [24, 47, 60], "check_value_in_list": [23, 24], "checklist": 81, "chi": [1, 19, 22, 23, 24, 25, 38, 45, 47, 49, 51, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 76, 80], "choic": [10, 43, 44, 45, 47, 58, 61, 70, 76], "choos": [1, 22, 43, 44, 56, 59, 61, 65, 70, 71], "chosen": [41, 47, 59], "chu": 60, "circl": [22, 23, 35, 49, 51, 52, 57, 61, 62, 63, 64, 66, 67, 70, 71, 76, 80], "clarifi": 52, "class": [27, 29, 31, 41, 43, 44, 47, 49, 51, 52, 56, 57, 58, 70, 73, 74, 76], "class_bas": [22, 23], "class_nam": [22, 23], "classmethod": [0, 1, 2, 3, 5, 8, 23], "clear": [9, 16, 22, 23, 44, 70], "clone": 78, "close": [75, 77], "cmazzoli": 65, "coars": 59, "codata": [12, 23, 39], "code": [26, 44, 47, 49, 51, 52, 59, 68, 78, 79], "collect": 44, "color": 59, "column": [24, 57, 58, 61], "com": [24, 66, 78], "combin": [60, 64], "command": [48, 57, 58, 71, 81], "comment": [22, 23, 65, 70, 79], "common": [1, 13, 27, 40, 42, 47, 57, 58, 68, 76], "commonli": 47, "commun": [38, 43], "compar": [12, 13, 24, 59, 70, 73], "compare_float_dict": 24, "comparison": [10, 17, 66], "compat": 39, "compil": [44, 52], "complet": [47, 57, 58, 61, 68, 70, 79, 81], "compon": [22, 23, 25, 42, 43, 44, 47, 56, 71, 73], "compos": [59, 68], "comprehens": 51, "comput": [0, 1, 2, 3, 10, 22, 23, 25, 38, 41, 43, 44, 45, 47, 50, 64, 66, 67, 68, 72, 75, 76], "compute_ub": 72, "concept": [51, 81, 82], "concis": [22, 23], "concurr": [38, 59], "conda": [1, 59], "condit": [0, 1, 2, 3, 8, 23, 59, 79], "conduct": 49, "config": [9, 10, 12, 13, 14, 17, 18, 19, 22, 23, 25, 36, 39, 49], "config_fil": 31, "configur": [10, 11, 12, 13, 14, 22, 23, 24, 25, 32, 39, 40, 43, 44, 47, 61, 65, 68, 73], "configuration_attr": [38, 59], "configurationerror": 24, "configurationrunwrapp": [23, 24, 47, 57, 58, 59, 61, 70], "confirm": 70, "confus": [44, 61], "congress": 77, "connect": [0, 2, 23, 41, 47, 52, 68, 73], "consequ": 68, "consid": 71, "consider": 47, "consist": [47, 59, 68], "constant": [1, 10, 12, 39, 56, 59, 67, 75], "constant_chi": [1, 38, 67], "constant_chi_vert": [59, 60, 67], "constant_delta_coplanar": 67, "constant_eta_noncoplanar": 67, "constant_incid": 67, "constant_kphi_horizont": 67, "constant_mu_horizont": [59, 67], "constant_nu_coplanar": 67, "constant_omega": [1, 38, 67], "constant_omega_vert": [59, 67], "constant_phi": [1, 38, 58, 66, 67], "constant_phi_horizont": 67, "constant_phi_vert": [59, 67], "constantmonochromaticwavelength": [23, 39], "constraint": [9, 11, 17, 22, 23, 24, 25, 38, 40, 43, 44, 57, 58, 59, 61, 64, 65, 66, 68, 70, 72, 75, 76, 80], "constraintbas": [10, 17, 45], "constraintserror": 24, "construct": [22, 23, 56, 71], "consult": 59, "contain": 40, "content": 66, "context": [16, 17, 18, 19, 20, 31, 32, 33, 34, 35, 36, 37], "contk": 66, "contract": [77, 79], "contributor": 79, "control": [13, 22, 23, 38, 42, 43, 44, 47, 59, 68], "convei": 47, "conveni": 38, "convent": [47, 57, 58, 61], "convers": [3, 39, 44, 47], "convert": [1, 24, 25, 43, 47, 52, 64], "coordin": [0, 1, 2, 3, 8, 10, 13, 22, 23, 38, 41, 47, 49, 50, 51, 52, 59, 63, 64, 68], "copi": [44, 59, 72], "copyright": [77, 79], "core": [1, 10, 13, 14, 22, 23, 31, 41, 44, 45, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75], "corner": [62, 63, 64], "corrdet": 66, "correct": [18, 57, 58, 61, 71], "correspond": [1, 57, 58, 61, 63], "could": [24, 25, 43, 44, 56, 68, 70], "count": [47, 70], "coupl": [56, 64], "cpt": [49, 56], "creat": [0, 1, 2, 22, 23, 24, 25, 40, 47, 49, 52, 57, 58, 59, 61, 70, 71, 73, 78], "creator": [1, 22, 23, 38, 45, 47, 49, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 80], "cross": 71, "crw": [23, 24, 47, 57, 58, 59, 61, 70], "cryst": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65], "crystal": [0, 1, 2, 12, 14, 18, 23, 38, 44, 47, 51, 52, 63, 64, 66, 68, 75, 76, 77], "crystal_system": [12, 48, 66], "crystallin": [0, 1, 2, 13, 14, 23, 47, 48, 50, 59, 68], "crystallograph": [41, 43, 44, 47, 50, 52], "crystallographi": [43, 44], "crystalsystem": 12, "cuatro": [22, 23], "cubic": [25, 38, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 76, 80], "current": [0, 1, 2, 9, 10, 17, 22, 23, 25, 38, 43, 44, 56, 57, 58, 59, 61, 62, 63, 70, 75, 80], "custom": [0, 2, 17, 22, 23, 24, 28, 43, 44, 47, 59, 66], "cut": [10, 43, 75], "cuu": [12, 23, 39], "cz": [1, 75], "d": [24, 48, 66, 73], "d20250227": 24, "d20250303": 70, "d20250311": 65, "d20250312": [57, 58], "d413": 57, "dark1": 66, "dark10": 66, "dark11": 66, "dark12": 66, "dark13": 66, "dark14": 66, "dark15": 66, "dark16": 66, "dark2": 66, "dark3": 66, "dark4": 66, "dark5": 66, "dark6": 66, "dark7": 66, "dark8": 66, "dark9": 66, "darkcotim": 66, "darkr": 66, "darktotim": 66, "dat": 66, "data": [22, 23, 24, 33, 44, 59, 79], "dataarrai": 59, "databrok": [24, 57, 58, 59, 61, 70], "datafram": 24, "dataset": 59, "date": [24, 70], "datetim": [24, 56, 57, 58, 65, 70], "dclass": 31, "dcm": 66, "dcm_energi": 66, "dcm_lambda": 66, "dcm_mode": 66, "dcm_theta0": 66, "dcm_thetaenc": 66, "de": [77, 79], "debian": [1, 51, 77], "decid": [25, 47], "decim": 59, "declar": [10, 38], "decrib": [22, 23], "deduc": 66, "def": [56, 66, 71, 73], "default": [0, 1, 2, 22, 23, 24, 25, 38, 43, 44, 47, 51, 56, 57, 58, 59, 60, 61, 65, 70, 73, 75, 76, 80], "default_energy_unit": 39, "default_photon_energy_kev": 22, "default_sampl": 25, "default_start_kei": 24, "default_wavelength": 39, "default_wavelength_unit": 39, "defin": [0, 2, 13, 22, 23, 25, 38, 42, 43, 44, 50, 64, 66, 67, 68, 72, 73, 75, 76], "definit": [25, 52, 68], "degre": [47, 50, 51, 61, 62, 63, 64, 65, 68, 73, 76], "delta": [45, 59, 60, 65, 67, 80], "delta_fix": 67, "demo": 44, "demonstr": [52, 59, 70, 73, 76], "dep": 78, "depart": [77, 79], "depend": [1, 44], "deriv": [45, 79], "describ": [2, 13, 14, 24, 25, 43, 44, 47, 51, 57, 58, 59, 61, 65, 68, 70, 81], "descript": [23, 24, 39, 56, 57, 58, 59, 61, 65, 66, 68, 70, 75], "design": [13, 25, 71], "desir": [58, 59, 61, 66, 68, 73], "detail": [2, 41, 47, 49, 51, 59, 61, 65, 70, 81], "detector": [22, 23, 57, 58, 59, 61, 66, 67, 68, 70, 71, 73], "determin": 47, "dev22": 65, "dev38": 57, "dev4": 70, "dev41": 58, "dev45": 56, "dev54": 77, "dev72": 24, "dev_": 70, "dev_e4cv": 70, "dev_tardi": 65, "develop": [44, 52, 56, 81], "devic": [23, 24, 25, 33, 42], "device_nam": [23, 24], "df35b68ec680": 58, "dfrct": 47, "diagram": 44, "dict": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 17, 22, 23, 24, 25, 39, 43, 44, 51, 56, 59, 60, 65, 66, 71, 73, 76], "dict_device_factori": 24, "dictionari": [0, 1, 2, 10, 12, 13, 14, 17, 22, 23, 24, 25, 39, 47, 48, 52, 59, 68, 70, 72, 73], "dictionarydevic": 24, "did": [24, 66, 71, 80], "diffcalc": [43, 44], "diffcalc_dl": 43, "differ": [1, 17, 42, 43, 47, 51, 56, 57, 58, 59, 61, 66, 67, 68, 70, 76], "difficult": 44, "diffract": [0, 1, 2, 3, 8, 23, 28, 31, 38, 40, 43, 44, 50, 64, 68], "diffractomet": [0, 1, 2, 3, 8, 9, 10, 11, 13, 14, 16, 22, 23, 24, 25, 28, 31, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 59, 68, 75, 77, 80, 82], "diffractometer_class_factori": [22, 23, 73], "diffractometerbas": [22, 23, 24, 25, 28, 38, 41, 42, 49, 56, 68, 71, 73, 76], "diffractometerbasebas": 47, "diffractometererror": 24, "dig": 44, "digit": [1, 12, 13, 14, 19, 22, 23, 24, 25, 32, 33, 35, 38, 56, 57, 58, 59, 65, 70], "dim": 59, "dimens": [59, 68], "dimension": 68, "direct": [57, 58, 60, 61, 63, 64, 68, 71], "directli": [0, 2, 8, 13, 23, 43, 56, 57, 73, 78], "directori": [70, 78], "disabl": [23, 24], "disable_plot": [57, 58, 59, 61], "disclaim": 79, "disclos": 79, "discuss": 44, "displai": [12, 24, 43, 44, 77], "distinguish": [52, 67, 68], "distribut": 79, "do": [13, 22, 23, 25, 44, 51, 57, 58, 59, 62, 63, 65, 66, 72, 80], "doc": [44, 49], "document": [2, 23, 24, 40, 43, 47, 51, 52, 59, 60, 61, 69, 70, 73, 74, 79], "doe": [13, 38, 43, 58, 61, 62, 65], "don": [44, 47], "done": [65, 80], "dot": 24, "double_diffract": [1, 38, 67], "double_diffraction_horizont": [59, 67], "double_diffraction_vert": [59, 67], "dr": 60, "due": [50, 57, 58], "duplic": [43, 44, 51], "dure": [1, 43, 61, 75], "e": [23, 39, 65, 66, 78], "e1d2": 57, "e4ch": 58, "e4cv": [1, 16, 19, 22, 23, 24, 28, 32, 38, 44, 47, 49, 51, 56, 57, 62, 63, 64, 68, 70], "e4cv_config": 28, "e4cv_config_fil": 28, "e4cv_configur": 70, "e4cv_r400_config_yaml": 19, "e6c": [1, 35, 45, 51, 65, 80], "e6c_hkl": 59, "e6c_hkl_chi": 59, "e6c_hkl_delta": 59, "e6c_hkl_extras_psi": 59, "e6c_hkl_gamma": 59, "e6c_hkl_h": 59, "e6c_hkl_k": 59, "e6c_hkl_l": 59, "e6c_hkl_mu": 59, "e6c_hkl_omega": 59, "e6c_hkl_phi": 59, "e6c_psi": 59, "e741": 56, "e92219f4908a": 58, "e95261c0": 58, "each": [0, 1, 2, 18, 22, 23, 24, 25, 31, 38, 41, 42, 43, 44, 47, 50, 58, 59, 66, 67, 68, 70, 73, 81], "easi": [43, 44, 76], "easier": [53, 75], "ed0": 57, "edg": [17, 51], "edit": [22, 23, 78], "ef8cfbe": 57, "egu": [38, 59, 73], "either": [8, 47, 60, 68, 78], "elaps": [65, 80], "emerg": [1, 38, 44, 59, 67, 76], "emergence_fix": 67, "emmanuel": 1, "employe": 79, "empti": [22, 23, 43], "en": [41, 47, 48], "enabl": [23, 24, 33, 41, 49], "enam": 6, "end": [43, 44, 79], "endors": 79, "energi": [23, 24, 36, 37, 38, 39, 56, 57, 58, 65, 66, 70, 77, 79], "energy_unit": [23, 24, 39, 57, 58, 65, 70], "engin": [1, 22, 23, 24, 38, 39, 42, 43, 44, 46, 47, 49, 50, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 72], "engine_nam": [1, 24, 38, 57, 58, 61, 65, 70, 72, 76, 80], "ensur": 59, "entir": [24, 38], "entri": [23, 24, 44, 48, 52, 68], "env": 59, "environ": 78, "environment": 65, "epic": [22, 23, 42, 46, 47, 59, 65, 66, 73], "epicsmotor": [22, 23], "epix33bm": 66, "epoch": 66, "equal": [12, 13, 33, 59, 66], "equat": [8, 44], "equival": 39, "error": [25, 36, 38, 57, 58, 61], "especi": [53, 75], "esrf": 65, "eta": 67, "eta_a": 67, "etc": 44, "euler_i": 1, "euler_x": 1, "euler_z": 1, "eulerian": [22, 23, 52, 61, 67, 70, 76], "eunit": 37, "euptin4_eh1_v": 51, "ev": [38, 39, 65], "even": [56, 66], "eventu": 56, "everi": [10, 47, 57, 58, 59, 61], "everyth": 44, "exact": [62, 63], "exactli": [47, 56, 59], "examin": [68, 70], "exampl": [0, 1, 2, 3, 8, 12, 22, 23, 24, 38, 43, 44, 45, 47, 48, 49, 52, 57, 58, 59, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 76, 80, 82], "except": [13, 38, 47, 51], "exchang": 75, "exhaust": 60, "exist": [10, 22, 23, 25, 43, 44, 52, 65, 74], "exit": 59, "exit_statu": 70, "expect": [1, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 47, 56, 60, 62, 63, 64, 65, 68, 71, 73, 81], "expected_text": 33, "explor": 68, "export": [9, 22, 23, 43, 65, 78], "expos": 68, "express": [44, 47, 68, 79], "extra": [0, 1, 2, 3, 8, 22, 23, 31, 38, 43, 44, 46, 47, 57, 58, 59, 61, 67, 68, 70, 71, 75], "extra_ax": [24, 57, 58, 65, 70], "extra_axis_nam": [0, 1, 2, 3, 5, 8, 23, 25, 47, 56, 59, 71], "f": [56, 57, 58, 59, 60, 61, 66, 70, 72, 76], "f52b": 57, "f9708c810348": 57, "face": 68, "factor": 39, "factori": [22, 23, 70, 73], "fail_on_except": [22, 23], "fall": 10, "fals": [1, 13, 22, 23, 24, 25, 38, 47, 49, 59], "familiar": 81, "fcc": 77, "featur": [41, 44, 49, 59, 68, 81], "few": [51, 71], "fiction": 47, "fiduci": 68, "field": 10, "fig": 66, "figsiz": 66, "file": [16, 22, 23, 24, 36, 52, 75], "filter": 66, "final": [59, 73], "find": [24, 47], "finish": [22, 23, 59], "first": [13, 22, 23, 24, 38, 43, 47, 51, 52, 56, 62, 63, 64, 66, 67, 70, 71, 73, 78], "fit": [0, 2, 23, 71], "fix": [22, 23, 43, 57, 58, 65, 67], "flatten_list": 24, "float": [0, 1, 2, 3, 5, 8, 10, 12, 13, 14, 22, 23, 24, 25, 38, 39, 68], "fluor": 66, "follow": [66, 78, 79], "footnot": 41, "forc": 56, "fordevelop": 78, "forg": 1, "form": [1, 24, 25, 56, 79], "format": [10, 44, 66], "forward": [0, 1, 2, 3, 5, 8, 10, 17, 22, 23, 24, 25, 38, 41, 43, 45, 47, 49, 51, 52, 56, 59, 63, 64, 66, 68, 72, 75, 76], "forward_solutions_t": [25, 60], "found": [38, 51, 65], "four": [22, 23, 76], "fourc": [1, 22, 23, 28, 30, 34, 36, 47, 51, 57, 58], "fourc_chi": [57, 58], "fourc_h": [57, 58], "fourc_k": [57, 58], "fourc_l": [57, 58], "fourc_omega": [57, 58], "fourc_phi": [57, 58], "fourc_tth": [57, 58], "fourcq": 76, "frame": [44, 68], "framework": 77, "free": 71, "freez": [66, 75], "friendli": 43, "from": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 14, 17, 22, 23, 24, 25, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 59, 61, 64, 65, 68, 71, 73, 74, 75, 78, 79, 80], "fr\u00e9d\u00e9ric": 1, "full": [22, 23, 25, 38, 50, 56, 70, 72, 73, 75, 76, 77, 80], "full_posit": [22, 23, 59], "function": [41, 49, 57, 58, 59, 60, 61, 64, 66, 70, 73, 80], "fundament": [39, 64], "further": 47, "futur": [45, 59, 81], "futurewarn": 59, "g": 65, "g0": 66, "g1": 66, "g204bb2b": 56, "g3": 66, "g4": 66, "g43be4f0": 70, "g6c23727": 57, "gamma": [12, 22, 23, 24, 25, 38, 45, 47, 48, 49, 52, 57, 58, 59, 60, 62, 65, 66, 67, 68, 70, 72, 80], "gamma_fix": 67, "gather": 44, "gc08d5c1": 77, "gc0a6393": 58, "gcf9a65a": 24, "gdba3850": 65, "ge": 66, "ge0": 61, "gener": [40, 44, 57, 58, 59, 61, 68, 77], "geom": 71, "geometri": [0, 1, 2, 3, 5, 8, 13, 19, 21, 22, 23, 24, 25, 29, 32, 34, 38, 41, 42, 43, 44, 45, 46, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 76, 80], "geometry_nam": 66, "geometry_paramet": 66, "get": [22, 23, 43, 49, 56, 62, 63, 66, 70, 80], "get_diffractomet": 38, "get_run_orient": [24, 70], "get_solv": [0, 1, 2, 3, 8, 23, 24, 52], "getattr": 66, "getscan": 66, "gi": 1, "git": [1, 78], "github": [77, 78, 81], "give": [43, 44, 60], "given": [10, 38, 47, 57, 58, 59, 61, 75], "glossari": [41, 42, 82], "gname": [6, 31], "go": 56, "goe": 44, "gonio": 34, "goniomet": 68, "gov": [12, 23, 39], "govern": 79, "grai": 59, "green": 59, "group": [23, 24, 52], "guid": [47, 77], "h": [0, 1, 2, 3, 5, 8, 19, 22, 23, 24, 25, 31, 32, 38, 39, 41, 47, 49, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 72, 75, 76, 80], "h0": 66, "h00": 47, "h1": [13, 66], "h10": 66, "h11": 66, "h12": 66, "h13": 66, "h14": 66, "h15": 66, "h16": 66, "h17": 66, "h18": 66, "h19": 66, "h2": [1, 13, 22, 23, 28, 38, 56, 59, 66, 67, 68, 72], "h20": 66, "h21": 66, "h3": 66, "h4": 66, "h5": 66, "h6": 66, "h7": 66, "h8": 66, "h9": 66, "h_2": [56, 59, 68], "h_or_n": [22, 71], "ha": [3, 41, 47, 51, 59, 68, 71, 72, 73, 81], "half": 76, "handl": 26, "harmon": 66, "have": [1, 8, 10, 22, 23, 45, 47, 57, 58, 59, 61, 64, 70, 71, 72], "held": [1, 67], "help": 66, "here": [1, 44, 47, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 70], "hexagon": [12, 48, 65], "hi": 17, "high": [10, 48, 77], "high_limit": [10, 24, 57, 58, 65, 70], "highest": [10, 48], "hint": [56, 73], "hkl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82], "hkl2": [1, 59], "hkl_2": 72, "hkl_euler_matrix": 1, "hkl_soleil": [0, 2, 22, 23, 24, 38, 40, 43, 45, 49, 51, 56, 65, 70, 72, 76, 80], "hklposit": 38, "hklpy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82], "hklpy2": [40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82], "hklpy2_dir": 26, "hklpy2_env": 78, "hklpy2_vers": [24, 57, 58, 65, 70], "hklpy2diffractomet": [22, 23, 24, 38, 57, 58, 59, 65, 70], "hklpy2diffractometerpseudopo": [56, 57, 58, 59, 60, 61, 64, 66, 76], "hklpy2diffractometerrealpo": [38, 56, 57, 58, 59, 61, 63, 64, 65, 66, 72, 73, 76, 80], "hklpy2error": [23, 24], "hklscan": 66, "hklsolver": [1, 24, 38, 49, 52, 56, 57, 58, 61, 65, 70, 72, 74, 76, 80], "hn": 28, "hoc": [43, 44], "hold": [1, 43, 59, 61, 75], "holder": [64, 68], "home": [1, 59, 73, 77], "homogen": 68, "horizont": [28, 57, 67, 71], "how": [41, 43, 44, 47, 51, 59, 64, 69, 70, 72, 73, 81], "hsc1b": 66, "hsc1h": 66, "hsc1h0": 66, "hsc1l": 66, "hsc1r": 66, "hsc1t": 66, "hsc1v": 66, "hsc1v0": 66, "hsc2b": 66, "hsc2h": 66, "hsc2h0": 66, "hsc2l": 66, "hsc2r": 66, "hsc2t": 66, "hsc2v": 66, "hsc2v0": 66, "hsc3b": 66, "hsc3h": 66, "hsc3h0": 66, "hsc3l": 66, "hsc3r": 66, "hsc3t": 66, "hsc3v": 66, "hsc3v0": 66, "hsc_i0h": 66, "hsc_i0v": 66, "hspace": 66, "html": [1, 39, 41, 51, 66, 77], "http": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82], "hyderabad": 77, "i": [0, 1, 2, 8, 10, 13, 17, 22, 23, 24, 25, 26, 31, 35, 38, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 76, 78, 79], "i0": 66, "i00": 66, "i00_amp": 66, "i00_bia": 66, "i00_dark": 66, "i00_gain": 66, "i00_suppr": 66, "i00_tim": 66, "i00_vdc": 66, "i0_amp": 66, "i0_bia": 66, "i0_dark": 66, "i0_gain": 66, "i0_suppr": 66, "i0_tim": 66, "i0_vdc": 66, "icr": 66, "id": [57, 58, 59, 61], "id001": 65, "ident": [24, 45, 60, 64, 68], "identifi": [13, 38, 44, 47, 51, 57, 58, 59, 61, 68, 70], "identity_matrix_3x3": 24, "ignor": 73, "ii": 35, "implement": [0, 2, 5, 10, 23, 44, 45, 47, 68], "impli": 79, "import": [0, 1, 2, 3, 8, 12, 22, 23, 24, 29, 38, 45, 47, 48, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 76, 80], "incid": [1, 13, 22, 23, 25, 38, 39, 47, 50, 57, 58, 59, 61, 67, 68, 76], "includ": [22, 23, 43, 49, 52, 56, 65, 66, 68, 70, 77, 79], "inclus": 49, "incom": [9, 23, 50], "inconsist": 51, "index": [77, 78], "india": 77, "indic": [31, 57, 58, 61], "inform": [24, 47, 59, 66, 79], "infring": 79, "init_po": [56, 71, 73], "initi": [23, 75, 81], "inlin": 66, "input": [7, 24, 33, 73], "insert": [57, 58, 59, 61, 70], "inspect": 12, "instal": [44, 77, 82], "instanc": [22, 23, 24, 25, 47, 51, 52, 59, 70, 76], "instead": [0, 1, 2, 23, 71], "instrument": 57, "int": [12, 13, 22, 23, 24, 25, 38], "intake_xarray_cor": 59, "intens": [50, 68], "interest": [56, 68], "interfac": [38, 43, 47, 48, 68], "intermedi": [25, 68], "intern": [12, 13, 14, 70, 77], "interpret": 41, "introspect": 56, "invers": [0, 1, 2, 3, 5, 8, 22, 23, 25, 41, 43, 47, 49, 52, 56, 60, 64, 76], "involv": [49, 76], "io": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82], "ioc": [22, 23, 65], "ipython": [57, 58], "issu": 44, "istyp": 24, "ital": 68, "item": [9, 10, 13, 22, 39, 44, 66], "iter": [22, 23], "its": [22, 23, 24, 25, 38, 47, 49, 51, 52, 57, 58, 59, 61, 68, 70, 73, 75, 79, 80], "iucr": [12, 48, 57, 77], "jump": 61, "jun": 66, "just": [23, 39, 51, 62, 63, 66, 70, 71], "k": [0, 1, 2, 3, 5, 8, 10, 19, 22, 23, 24, 25, 31, 32, 38, 41, 45, 47, 49, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 72, 75, 76, 80], "k2": [1, 22, 23, 28, 38, 56, 59, 67, 68, 72], "k4cv_h": 61, "k4cv_k": 61, "k4cv_kappa": 61, "k4cv_komega": 61, "k4cv_kphi": 61, "k4cv_l": 61, "k4cv_tth": 61, "k6c": [22, 23], "k_2": [56, 59, 68], "kappa": [22, 23, 61], "keep": [47, 57, 58, 61, 70], "kei": [13, 22, 23, 24, 25, 31, 33, 47, 49, 52, 70], "kept": 10, "kev": [24, 39, 47, 57, 58, 59, 66, 70], "keyerror": [13, 38, 59], "keypath": [16, 34], "keyword": [22, 23, 24, 25, 47, 52, 57, 58, 61, 65, 73], "kind": [49, 56, 71, 73, 79], "know": [38, 64], "known": [23, 24, 25, 59, 70, 75], "known_bas": [23, 24], "komega": [61, 67], "kphi": [61, 67], "krickl": 77, "kwarg": [0, 1, 2, 3, 5, 8, 13, 17, 18, 22, 23, 24, 25, 28, 39, 56, 71, 72, 73], "kwreal": 38, "l": [0, 1, 2, 3, 5, 8, 19, 22, 23, 24, 25, 31, 32, 38, 41, 47, 49, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 72, 75, 76, 80], "l2": [1, 22, 23, 28, 38, 56, 59, 67, 68, 72], "l_2": [56, 59, 68], "lab": [44, 58], "label": [10, 22, 23, 24, 43, 44, 57, 58, 59, 65, 66, 70], "laboratori": [47, 57, 68, 77, 79], "lambda": [8, 23, 39, 47, 65, 76], "largest": 77, "last": [23, 24, 66], "later": [59, 70], "latt": 12, "lattic": [0, 1, 2, 5, 6, 8, 11, 14, 18, 20, 23, 24, 25, 38, 40, 41, 43, 44, 49, 52, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 70, 72, 75, 76, 80], "lattice1": 12, "lattice2": 12, "lattice_str": 36, "latticeerror": 24, "latticeparameters3d": 66, "layer": [25, 44, 64, 68], "learn": [53, 75], "least": [8, 22, 23, 62], "leav": 51, "left": 47, "legal": 79, "length": [24, 47, 59, 65, 68], "let": [25, 70, 71, 73], "level": [23, 24, 57, 58, 59, 61], "levi": [0, 1, 2, 3, 8, 23, 25, 51, 57, 58, 61, 64, 65], "liabil": 79, "lib": 59, "libhkl": [1, 43, 44, 66], "libhkl_detector_typ": 1, "libhkl_solv": [1, 23, 24], "libhkl_unit": 1, "libhkl_user_unit": 1, "librari": [0, 1, 2, 22, 23, 25, 43, 44, 52, 59, 60, 68, 71], "licens": 77, "lift": 67, "lifting_detector_komega": 67, "lifting_detector_kphi": 67, "lifting_detector_mu": [35, 59, 65, 67], "lifting_detector_omega": [59, 67], "lifting_detector_omega_t": 67, "lifting_detector_phi": [59, 67], "lifting_detector_thetah": 67, "like": [62, 64], "limit": [10, 24, 38, 45, 47, 51, 56, 59, 61, 64, 65, 66, 68, 73], "limitsconstraint": [10, 24, 57, 58, 65, 70], "line": [72, 75], "linux": [1, 44, 52], "list": [0, 1, 2, 3, 5, 8, 10, 12, 13, 14, 22, 23, 24, 25, 38, 43, 44, 47, 52, 56, 57, 58, 61, 64, 68, 70, 73, 75, 79], "list_orientation_run": 24, "list_sampl": 38, "livet": 66, "ll": [51, 57, 58, 59, 61, 66, 70, 71, 73, 76], "llc": [77, 79], "lno_lao": [66, 72], "lno_lao_s14": 66, "lo": 17, "load": [23, 24, 56], "load_yaml": 24, "load_yaml_fil": 24, "local": [17, 78], "local_pseudo_ax": 25, "local_real_ax": 25, "logger": [0, 1, 3, 8, 9, 12, 13, 14, 22, 24, 38, 39], "long": [24, 70], "look": [70, 71], "loos": 44, "low": [10, 59], "low_limit": [10, 24, 45, 57, 58, 59, 65, 70], "lower": [44, 59], "lowest": [10, 48, 62], "m": [39, 66], "m1": [22, 23, 24, 65], "m2": [22, 23], "m22": 66, "m3": [22, 23], "m4": [22, 23], "m_1_8": 66, "m_2_5": 66, "mac": [1, 52, 66], "magic": [57, 58], "mai": [22, 23, 42, 44, 47, 56, 57, 58, 61, 68, 79], "main": 78, "maintain": [38, 47, 58, 61], "make": [0, 1, 2, 23, 43, 44, 47, 53, 58, 59, 61, 75, 79, 80], "manag": [9, 23, 49], "mani": [1, 10, 44, 45, 47, 56, 62, 63, 64, 66, 76], "map": [10, 12, 22, 23, 24, 25, 43, 44, 59, 70, 71], "mat": 1, "match": [13, 24, 47, 66, 70, 71], "materi": 79, "math": [56, 59, 60, 70], "matix": 66, "matplotlib": 66, "matric": [43, 44, 59], "matrix": [0, 1, 2, 3, 8, 9, 14, 23, 24, 25, 38, 41, 43, 44, 47, 50, 52, 56, 59, 65, 68, 72, 75], "matrix150": 66, "md": [22, 23, 57, 58, 61], "mean": [22, 23, 47, 72, 73], "measur": [47, 49, 68], "mechan": 68, "meet": 62, "mental": 60, "met": 79, "metadata": [0, 2, 23, 24, 47, 70], "metal": 47, "method": [0, 1, 2, 3, 8, 13, 14, 22, 23, 24, 25, 41, 47, 51, 57, 58, 61, 62, 64, 65, 70, 71, 72], "migrat": 43, "mileston": 81, "miller": [31, 57, 58, 61], "mind": 47, "minim": 52, "minimum": 43, "mir1_alpha": 66, "mir1_bend": 66, "mir1_i": 66, "mir1_y1": 66, "mir1_y2": 66, "mir2_alpha": 66, "mir2_bend": 66, "mir2_i": 66, "mir2_y1": 66, "mir2_y2": 66, "mir_alpha": 66, "mir_us": 66, "misc": [22, 23, 25, 38, 40, 47, 70, 73], "miscellan": 24, "mismatch": 47, "miss": 44, "mix": 47, "mnemon": 66, "mode": [0, 1, 2, 3, 5, 8, 10, 23, 24, 25, 31, 38, 42, 43, 44, 45, 49, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 72, 75, 76, 80], "model": [27, 40, 77], "modif": 79, "modifi": [0, 2, 23, 43, 44, 68], "modul": [57, 58, 61, 77], "monochromat": [1, 23, 39, 41, 68], "monochromaticxraywavelength": [23, 39, 47], "monoclin": 48, "more": [1, 10, 14, 22, 23, 25, 41, 45, 47, 50, 51, 57, 58, 59, 61, 62, 64, 65, 68, 70, 73, 75, 81], "most": [24, 39, 41, 47, 49, 75, 76], "motion": 47, "motor": [22, 23, 38, 41, 42, 43, 44, 52, 59, 66, 72, 75, 76, 80], "motor_label": [22, 23], "mount": [14, 47, 59, 64, 68], "mov": [57, 58], "move": [22, 23, 38, 43, 44, 57, 58, 61, 66, 75, 76, 80], "move_dict": [22, 23], "move_forward_with_extra": [22, 23], "move_r": [22, 23, 59], "movement": 41, "movestatu": [65, 80], "msg": 70, "mu": [28, 45, 59, 60, 65, 67, 80], "mu_fix": 67, "mue540_i0": 66, "mue540_i1": 66, "mue540_i10": 66, "mue540_i11": 66, "mue540_i12": 66, "mue540_i13": 66, "mue540_i14": 66, "mue540_i15": 66, "mue540_i2": 66, "mue540_i3": 66, "mue540_i4": 66, "mue540_i5": 66, "mue540_i6": 66, "mue540_i7": 66, "mue540_i8": 66, "mue540_i9": 66, "mue540_o0": 66, "mue540_o1": 66, "mue540_o2": 66, "mue540_o3": 66, "mue_sclr_auto": 66, "mue_sclr_freq": 66, "multiaxis99": 28, "multilin": 19, "multipl": [44, 52], "must": [8, 10, 22, 23, 38, 68, 70, 79], "mv": [57, 58, 75], "mysolv": [0, 2, 23, 74], "mytwoc": 71, "mytwocircl": 73, "mz": 75, "n": [66, 78], "name": [0, 1, 2, 3, 5, 8, 10, 12, 13, 14, 19, 22, 23, 24, 25, 28, 31, 33, 34, 36, 38, 42, 43, 44, 45, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 79, 80], "namedtupl": [24, 25, 38, 57, 58, 61], "narrow": 68, "nation": [77, 79], "natur": [23, 39], "ndarrai": 1, "necessari": [44, 57, 58, 59, 61, 70, 75, 76], "necessarili": 59, "need": [22, 23, 25, 44, 47, 51, 57, 58, 59, 60, 61, 62, 63, 66, 70, 71], "neg": [57, 58, 61], "neglig": 41, "neither": 79, "nest": 24, "neutron": [47, 68], "new": [0, 1, 2, 10, 12, 13, 22, 23, 25, 38, 43, 44, 52, 56, 57, 58, 59, 61, 71, 73, 75, 78, 81], "next": [52, 56, 64, 65], "next_sampl": 36, "nice": [10, 43, 44], "nist": [12, 23, 39], "nm": 66, "no_op": [0, 2, 8, 23, 27, 40, 43, 56], "no_op_solver_type_str": 27, "noisi": [23, 24], "noisy_det": [59, 70], "non": [47, 60, 62, 63, 64, 68], "none": [0, 1, 2, 3, 5, 8, 10, 12, 13, 14, 22, 23, 24, 25, 31, 38, 39, 59, 65, 66, 71, 73], "noop_solv": 3, "noopsolv": [3, 27, 56, 74], "noopth2th": 28, "noqa": 56, "nor": 79, "normal": [56, 73], "normal_hint": 56, "note": [22, 23, 50, 56, 57, 58, 59, 60, 61, 65, 66, 70, 76, 77, 79, 80, 81], "notebook": [56, 59, 69], "notic": [62, 76, 79], "now": [22, 47, 51, 56, 64, 65, 80], "np": 31, "nr": 31, "nref": 36, "nsl": 35, "nu": [23, 28, 39, 67], "num": [22, 23, 31, 57, 58, 59, 61], "number": [1, 12, 13, 22, 23, 24, 25, 38, 66, 68], "numer": [10, 64, 68], "numpi": [1, 24, 43, 66], "o": [1, 3, 8, 52, 59], "o0": 66, "o1": 66, "o2": 66, "object": [0, 1, 2, 13, 22, 23, 24, 25, 44, 49, 51, 56, 57, 58, 59, 61, 68, 70, 71, 72, 73, 80], "observ": [43, 44, 47, 50, 62, 65], "occur": 50, "ocr": 66, "off": 66, "offset": [36, 38], "often": 44, "old": 44, "omega": [1, 19, 22, 23, 24, 25, 38, 45, 47, 49, 51, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 72, 76, 80], "omega_t": 67, "omicron": 28, "omit": 38, "onc": [0, 1, 2, 23, 72, 76], "one": [1, 8, 22, 23, 38, 41, 47, 57, 58, 59, 64, 66, 68, 70, 71, 73, 76], "ones": [22, 23], "onli": [1, 12, 13, 14, 25, 38, 43, 44, 45, 47, 51, 52, 59, 60, 65, 66, 70, 71, 76, 80], "onto": 44, "op": [22, 23, 34, 40], "open": 79, "oper": [0, 1, 2, 3, 8, 10, 11, 13, 22, 23, 24, 25, 41, 42, 43, 44, 45, 47, 52, 58, 59, 61, 64, 65, 66, 67, 68], "operationserror": [24, 38], "ophyd": [22, 23, 25, 41, 42, 44, 47, 49, 56, 57, 58, 59, 61, 65, 70, 71, 73], "optim": [43, 44], "option": [13, 24, 38, 47], "or0": 75, "or1": 75, "or_ref": 36, "or_swap": [38, 75], "order": [0, 1, 2, 3, 5, 8, 13, 14, 19, 22, 23, 24, 25, 38, 42, 46, 49, 56, 59, 61, 62, 63, 65, 68, 70, 73], "ordereddict": [66, 73], "org": [1, 9, 12, 41, 47, 48, 51, 77, 78], "organ": [43, 79, 81], "orient": [0, 1, 2, 3, 8, 13, 14, 22, 23, 24, 25, 38, 41, 43, 44, 52, 60, 63, 64, 68, 70, 72, 75, 76, 80], "origin": 62, "orthonorm": [44, 68], "orthorhomb": [38, 48], "oru": 59, "other": [9, 18, 41, 42, 43, 45, 47, 51, 52, 59, 66, 68, 70, 79], "our": [44, 51, 56, 59, 71], "out": [24, 46], "outcom": 47, "output": [7, 66], "over": [44, 59], "overrid": 71, "own": [47, 79], "p": 51, "p0": 66, "p1": [28, 66], "p2": [28, 66], "p3": 28, "p4": 28, "p5": 28, "p6": 28, "p7": 28, "p8": 28, "p9": 28, "p_111": 59, "pa": [38, 43, 44, 57, 58, 61, 65, 75, 80], "packag": [24, 43, 44, 53, 59, 66, 75, 77, 78], "page": 40, "pair": [10, 17], "panda": 24, "pandoc": 78, "parallel": [47, 62, 63, 64], "parallelepip": 68, "paramet": [0, 1, 2, 5, 6, 10, 12, 13, 14, 17, 22, 23, 24, 25, 38, 39, 43, 44, 47, 48, 51, 52, 56, 59, 62, 64, 65, 67, 68, 75], "parent": [0, 2, 23, 25], "parm": [19, 32, 36], "pars": 66, "part": [13, 51, 58, 61, 70, 71], "particular": 71, "path": [22, 23, 24, 33], "pathlib": [22, 23], "pattern": 68, "peak": [43, 44, 50], "peopl": [1, 44, 51, 77], "per": [23, 39], "perform": [43, 57, 58, 61], "perhap": 44, "permiss": 79, "permit": [23, 24, 79], "perpendicular": 59, "persist": [57, 58, 59, 61], "pf4_bladea1": 66, "pf4_bladea2": 66, "pf4_bladea3": 66, "pf4_bladea4": 66, "pf4_bladeb1": 66, "pf4_bladeb2": 66, "pf4_bladeb3": 66, "pf4_bladeb4": 66, "pf4_thickal": 66, "pf4_thickti": 66, "pf4_tran": 66, "phi": [1, 19, 22, 23, 24, 25, 38, 45, 47, 49, 51, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 76, 80], "photon": [23, 39, 47, 79], "physic": [12, 23, 39, 41, 47, 50, 52], "pi": [8, 47, 56, 59, 60, 64, 70, 76], "picca": [1, 51, 77], "pick": [22, 52, 64, 66, 75], "pick_first_item": [22, 64], "piltot": 66, "pitch": 67, "pitch_fix": 67, "pl": 75, "place": [44, 59], "plainconstraint": 17, "plan": [22, 23, 24, 42, 43, 44, 47, 57, 58, 59, 61, 70, 75, 81], "plan_stub": [57, 58], "plane": [47, 50, 63, 64, 68, 75], "pleas": 59, "plotxi": 59, "plt": 66, "pluggabl": 44, "plugin": [44, 52], "pm90": 45, "po": [31, 57, 59, 60, 65, 80], "point": [10, 23, 24, 44, 45, 52, 66, 68, 75], "polar": [43, 44, 57, 58], "pop": [23, 24, 38], "pop_sampl": 36, "posit": [10, 22, 23, 24, 25, 38, 43, 44, 47, 57, 58, 59, 61, 66, 68, 73, 75, 76], "position": [1, 10, 22, 23, 41, 42, 45, 47, 59, 76], "positioner_class": 31, "positionerbas": 1, "possibl": [22, 45, 47, 64, 70, 78], "powder": 56, "powdermod": 66, "powdermotor": 66, "powdervelo": 66, "powderwidth": 66, "ppo": [32, 35], "practic": 77, "pre": [47, 78], "precis": [13, 24, 43, 44, 47, 50, 64, 68], "prefix": [22, 23, 24, 38, 59, 70], "preprocessor": [23, 24, 47, 57, 58, 59, 61, 70], "prevent": 1, "previou": [22, 23], "previous": 64, "primari": [57, 58, 59, 61, 70, 75], "primarili": 67, "principl": 59, "print": [1, 23, 24, 38, 56, 57, 58, 59, 60, 61, 66, 70, 71, 72, 75, 76, 80], "prior": 79, "privat": 79, "prjemian": [23, 59, 73, 77, 78], "problem": 44, "process": 79, "produc": [77, 79], "product": [23, 39, 77, 79], "program": 66, "progress": [74, 81], "project": [43, 52, 73, 78, 81], "promot": 79, "prop": 34, "properti": [0, 1, 2, 3, 5, 8, 10, 12, 13, 14, 22, 23, 24, 25, 38, 39, 47, 49, 64], "prove": 70, "provid": [1, 2, 22, 23, 24, 25, 38, 41, 42, 43, 44, 47, 49, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 73, 76, 79], "provis": 42, "prune": 13, "pseudo": [0, 1, 2, 3, 5, 8, 13, 19, 22, 23, 24, 25, 28, 31, 34, 38, 41, 43, 47, 49, 50, 52, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 76], "pseudo_ax": [24, 57, 58, 65, 70], "pseudo_axis_nam": [0, 1, 2, 3, 5, 8, 13, 19, 22, 23, 25, 47, 56, 59, 71], "pseudo_nam": 13, "pseudoposit": 43, "pseudoposition": [1, 22, 23, 25, 41, 42, 49], "pseudosingl": [22, 23, 56, 71, 73], "pseudotupl": [57, 58, 61], "psi": [1, 22, 23, 28, 38, 56, 67, 68, 76], "psi_const": [1, 38, 67, 75], "psi_constant_horizont": [59, 67], "psi_constant_vert": [59, 67], "psi_vert": [59, 67], "psi_vertical_soleil_sirius_kappa": 67, "public": 39, "publish": 77, "pure": 59, "purpos": [47, 49], "put": [51, 57, 58, 59, 60, 61, 65, 66], "pv": [22, 23, 46, 47, 65, 73], "py": [59, 73], "pybind": 44, "pycat": [65, 66, 70], "pyepic": 78, "pyplot": 66, "pyproject": 52, "pyrestt": [0, 1, 2, 23, 66], "python": [0, 1, 2, 3, 8, 14, 22, 23, 24, 25, 43, 47, 49, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 66, 71, 72, 73, 77, 78], "python3": 59, "python_class": [24, 57, 58, 65, 70], "pyyaml": 9, "pyyamldocument": 9, "q": [0, 1, 2, 3, 8, 22, 23, 28, 38, 47, 52, 56, 65, 66, 71, 73], "q2": [59, 67], "qpar": 67, "qper": 67, "qper_qpar": [44, 59, 67], "question": 24, "quick": 75, "quickstart": [38, 45, 53], "r": [56, 59, 66, 67, 70, 72, 77], "r001": 62, "r004": 38, "r010": [62, 63], "r010_parm": 19, "r040": [38, 59], "r080": 51, "r1": [0, 1, 2, 3, 5, 8, 23, 25, 28, 38, 49, 51, 56, 57, 58, 60, 61, 65, 66, 70], "r100": [38, 62, 63], "r100_parm": 19, "r1p": 60, "r2": [0, 1, 2, 3, 5, 8, 13, 23, 25, 28, 38, 49, 51, 56, 57, 58, 60, 61, 65, 66, 70], "r2p": 60, "r3": 28, "r4": 28, "r400": [19, 38, 59], "r5": 28, "r6": 28, "r7": 28, "r8": 28, "r9": 28, "r_04c5": 61, "r_0_12_1": 51, "r_1": 19, "r_2": 19, "r_3": 19, "r_4": 19, "r_4aaa": 58, "r_4ad1": 38, "r_5": 19, "r_50d3": 58, "r_6a5e": 57, "r_749c": 61, "r_85d9": 72, "r_acf2": 57, "r_bca7": 72, "radiat": [13, 22, 23, 25, 39, 41, 47, 50, 68], "rai": [23, 24, 39, 47, 57, 58, 59, 61, 65, 68, 70], "rais": [13, 23, 24, 38, 47, 51, 59], "random": [22, 23, 24, 25], "rang": [10, 41, 45, 51, 59, 61, 68], "rare": 68, "re": [22, 23, 24, 25, 33, 38, 43, 47, 57, 58, 59, 61, 64, 66, 70], "reach": [43, 44, 57, 58, 61], "read": [1, 22, 23, 70, 72, 73], "read_attr": [38, 59], "read_configur": [23, 24], "readback": [38, 59], "readi": 81, "real": [0, 1, 2, 3, 5, 6, 8, 10, 13, 17, 19, 22, 23, 24, 25, 28, 31, 34, 35, 38, 41, 42, 43, 44, 46, 47, 49, 50, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 70, 71, 73, 76], "real_ax": [24, 57, 58, 65, 70], "real_axis_nam": [0, 1, 2, 3, 5, 8, 13, 19, 22, 23, 25, 47, 56, 61, 66, 71], "real_posit": [22, 23, 59], "realaxisconstraint": 10, "realposit": 43, "realt": 66, "reason": 26, "recalcul": 38, "receiv": 73, "recent": 75, "reciproc": [3, 10, 13, 38, 43, 44, 50, 51, 52, 56, 59, 63, 64, 68, 70], "recogn": [23, 24, 59], "recommend": [12, 23], "record": [22, 23, 47, 48], "recov": 70, "recreat": 70, "red": 59, "redefin": [10, 12, 13, 14, 25, 38], "redesign": 44, "redistribut": 79, "ref": 66, "refactor": 44, "refer": [13, 22, 23, 25, 38, 43, 44, 47, 52, 59, 68, 70, 71, 72, 75, 77], "refin": [0, 1, 2, 3, 5, 6, 8, 14, 23, 43, 47, 52, 75], "refine_lattic": [14, 25, 62, 75], "refinelattic": [0, 1, 2, 3, 5, 8, 23], "reflect": [0, 1, 2, 3, 5, 8, 11, 14, 19, 22, 23, 24, 25, 38, 40, 41, 43, 49, 52, 59, 64, 65, 66, 67, 68, 70, 72, 75, 76, 80], "reflectionerror": 24, "reflections3d": 66, "reflections_ord": [24, 57, 58, 65, 70], "reflectionsdict": 13, "reflectometri": 68, "reflex": 75, "reflex_beg": 75, "reflex_end": 75, "regard": 44, "reject": 68, "rel": [1, 14, 47, 57, 58], "rel_scan": [23, 24, 47, 57, 58, 61], "relat": [47, 68], "relationship": [47, 64, 67], "releas": [43, 77], "reli": [41, 59, 73], "reloc": 81, "remain": [22, 23], "rememb": [53, 75], "remov": [0, 1, 2, 3, 5, 8, 13, 14, 20, 22, 23, 24, 25, 38, 43], "remove_reflect": [14, 38], "remove_sampl": [25, 38], "removeallreflect": [0, 1, 2, 3, 5, 8, 23], "renam": [35, 46, 65], "repeat": [57, 58, 61, 68], "replac": [13, 22, 23, 25, 31, 38, 43, 44, 56, 61, 65], "repo": 1, "report": [12, 22, 23, 24, 38, 43, 44, 49, 50, 59, 66, 70, 73, 75, 80], "repositori": [1, 52, 78], "repres": [64, 68, 79], "represent": [12, 13, 14, 19], "reproduc": 79, "request": [43, 44], "requir": [42, 43, 44, 47, 67, 71, 72, 73], "reserv": [22, 23, 47, 79], "reset": [22, 23, 66], "reset_constraint": 25, "reset_sampl": 25, "resolv": 47, "respect": [50, 64], "respons": 79, "restor": [9, 16, 17, 22, 23, 25, 39, 43, 44, 47, 72], "restore_constraint": [9, 22, 23], "restore_wavelength": [22, 23], "result": [17, 25, 43, 66, 73], "retain": 79, "return": [0, 1, 2, 9, 10, 12, 14, 22, 23, 24, 25, 38, 39, 43, 57, 58, 59, 61, 62, 64, 68], "review": [47, 59, 74], "revis": 39, "rhombohedr": 48, "right": 79, "ring": 61, "rname": 13, "rockcent": 66, "rockon": 66, "rockwidth": 66, "role": 44, "rotat": [1, 14, 22, 23, 41, 43, 44, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 73], "round": [13, 24], "roundoff": [24, 25, 38, 57, 58, 61], "roundoff_digit": 1, "roundoff_list": 1, "routin": 13, "row": [24, 66], "rpo": [32, 35], "run": [9, 23, 24, 43, 44, 47, 52, 57, 58, 59, 61], "runengin": [57, 58, 59, 61, 70], "rx": 67, "rz": 67, "s1d1": 71, "s3d1": 68, "same": [8, 47, 51, 57, 58, 59, 60, 61, 64, 66, 68, 70, 76], "sampk": 66, "sampl": [0, 1, 2, 9, 11, 13, 22, 23, 24, 25, 35, 36, 38, 40, 41, 43, 44, 48, 49, 50, 52, 60, 63, 64, 66, 68, 70, 71, 72, 73, 75, 76, 80], "sample_nam": [24, 57, 58, 65, 70], "sampleerror": 24, "samx": 66, "samz": 66, "satisfi": 10, "satisif": [10, 17], "save": [43, 44, 47, 57, 58, 59, 61], "sca1": 66, "scalar": 43, "scaler": 47, "scan": [1, 22, 23, 43, 44, 47], "scan_bar": 66, "scan_extra": [22, 23, 59], "scan_id": [24, 70], "scan_kwarg": 31, "scancmd": 66, "scannum": 66, "scatter": [51, 59, 68, 75, 76], "scene": 47, "schemat": [57, 65], "scientif": [41, 47, 49], "sd": [57, 58, 61], "search": 24, "second": [43, 44, 59, 66], "secondari": 75, "section": [44, 66], "sector": 75, "see": [1, 2, 8, 12, 23, 38, 39, 41, 44, 48, 51, 57, 58, 61, 65, 71, 73, 81], "select": [0, 1, 2, 10, 17, 22, 23, 38, 44, 47, 56, 57, 58, 59, 61, 75], "self": [25, 56, 59, 71, 73], "separ": [44, 68, 72], "seq_num": [57, 58, 59, 61], "sequenc": 70, "serv": 68, "server": [43, 44], "set": [1, 9, 10, 22, 23, 25, 38, 41, 43, 47, 49, 50, 56, 57, 58, 60, 61, 62, 63, 68, 71, 72, 73, 75, 76, 80], "set_diffractomet": [38, 57, 58, 61, 65, 66, 75, 80], "set_energi": 38, "set_lattic": 38, "set_orientation_reflect": 13, "set_solv": 25, "set_titl": 66, "setaz": 75, "setlat": 75, "setmod": 75, "setor": [13, 38, 57, 58, 61, 65, 66, 75], "setpoint": [38, 59], "setsector": 75, "settle_tim": [38, 59, 65, 80], "setup": [44, 65, 70, 72, 73, 78], "setuptool": 44, "seven": 48, "sever": [24, 25, 26, 42, 47, 76, 77, 78], "shell": 78, "short": 24, "shortcut": [57, 58, 61], "shorthand": 68, "should": [0, 2, 10, 23, 43, 44, 47, 64, 70, 79], "shouldn": 44, "show": [19, 25, 51, 52, 56, 59, 61, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 80], "shown": [45, 47, 64, 70], "si_lattice_paramet": [12, 23, 57, 58, 61], "si_lattice_parameter_uncertainti": 12, "side": [47, 68], "signal": [33, 57, 58, 61, 65, 66], "signalro": 73, "silicon": [12, 23, 57, 58, 61], "sim": [59, 70], "sim2c": 16, "sim4c": [22, 23, 32, 33, 56, 70], "sim4c2": [23, 24], "sim6c": 33, "similar": [45, 47, 51, 70], "simk6c": [22, 23], "simpl": 46, "simpler": [44, 56], "simplest": [22, 23], "simplex": [1, 62], "simplifi": [38, 48], "simul": [22, 23, 42, 43, 44, 49, 51, 57, 58, 61, 62, 63, 64, 66, 70, 72, 73, 80], "sin": [8, 76], "sinc": [56, 57, 58, 59, 61, 62, 63, 73, 76], "singl": [12, 13, 24, 47, 68], "site": 59, "six": [22, 23], "sixc": [45, 80], "size": 59, "skip": [38, 73], "skip_exact_value_test": 34, "slice": 66, "slight": [57, 58, 61], "slits_wb": 66, "slits_wl": 66, "slits_wr": 66, "slits_wt": 66, "sm": 66, "smallest": [13, 68], "sname": 20, "so": [43, 44, 47, 57, 58, 59, 61, 64, 65, 66, 71, 76], "softposition": [22, 23, 56, 71, 73], "softwar": [44, 45, 64, 66, 68, 77, 79], "sol": 66, "soleil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82], "solenoid_lock": 73, "solut": [0, 1, 2, 3, 10, 17, 22, 23, 24, 25, 38, 41, 43, 45, 47, 51, 57, 58, 59, 60, 61, 64, 67, 68], "solv": 44, "solver": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82], "solver_class": 29, "solver_entrypoint_group": [23, 24], "solver_factori": [23, 24, 47, 52], "solver_kwarg": [22, 23, 31, 46, 56, 59, 76], "solver_nam": [21, 22, 23, 24, 33, 56], "solver_summari": [0, 2, 23, 38, 67], "solverbas": [0, 1, 2, 3, 5, 8, 23, 25, 38, 47, 49, 68, 74], "solverclass": [1, 3, 8, 23, 24], "solvererror": [23, 24], "solvernoforwardsolut": 24, "some": [42, 44, 56, 59, 65, 68, 72], "sometim": 73, "sort": [67, 71], "sourc": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 47, 52, 59, 68, 70, 77, 79], "source_typ": [23, 24, 39, 57, 58, 65, 70], "space": [3, 10, 13, 22, 23, 25, 38, 41, 43, 44, 50, 51, 52, 56, 59, 63, 64, 68, 70, 73], "spec": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 68, 69, 71, 74, 77, 78, 79, 80, 81, 82], "spec2nexu": 66, "spec_d": 66, "spec_help": 66, "specdatafil": 66, "specfil": 66, "special": 31, "specif": [0, 2, 22, 23, 41, 44, 47, 50, 52, 68, 79], "specifi": [1, 8, 22, 23, 24, 38, 44, 47, 56, 59, 62, 63, 65, 76], "specscan": 66, "spectrum": [23, 39], "spectrum_typ": [23, 39], "sphinx": 40, "spinner": 73, "split": 66, "sr_bm_hang": 66, "sr_bm_hpo": 66, "sr_bm_vpo": 66, "sr_current": 66, "sr_fb": 66, "sr_fbh": 66, "sr_fbv": 66, "sr_fill": 66, "sr_mode": 66, "sr_statu": 66, "sr_topup": 66, "stack": [9, 68], "stackoverflow": 24, "stage": [61, 68], "stand": 44, "standard": [12, 13, 23, 24, 39, 70, 72], "standardize_pseudo": 25, "standardize_r": 25, "start": [22, 23, 24, 32, 44, 45, 57, 58, 59, 62, 63, 64, 70, 73, 80], "start_kei": [23, 24], "stat": 59, "state": [44, 79], "step": [56, 65, 70, 78], "stick": 77, "still": [57, 58, 61, 64], "storag": 70, "store": [24, 44], "str": [0, 1, 2, 3, 5, 8, 10, 12, 13, 14, 22, 23, 24, 25, 38, 39], "stream": [57, 58, 59, 61, 70], "string": [10, 19, 22, 23], "struct": [43, 44], "structur": [43, 44, 59, 62, 63, 64, 66, 68, 73, 77], "stub": [22, 23], "stuck": 44, "stuctur": 68, "studi": 68, "subclass": [0, 2, 22, 23, 47, 74], "subplot": 66, "subplots_adjust": 66, "subscrib": [57, 58, 59, 61, 70], "substanc": 68, "success": [65, 70, 80], "successfulli": 47, "suffici": 68, "suggest": 44, "sum": 60, "summar": [38, 59], "summari": [0, 1, 2, 23, 38, 56, 73], "super": [56, 71, 73], "supplementaldata": [57, 58, 61], "suppli": [17, 24, 25, 52, 71, 79], "support": [0, 1, 2, 9, 11, 22, 23, 24, 39, 41, 42, 43, 47, 52, 56, 57, 58, 61, 62, 63, 64, 76], "suptitl": 66, "sure": [44, 58, 59, 61], "surfac": 68, "swap": [13, 38, 56], "switch": [43, 44, 56], "symmetri": [48, 62, 77], "synchrotron": [1, 52, 57, 58], "synonym": 68, "syntax": [57, 58, 61], "system": [12, 18, 38, 42, 47, 48, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 72, 76, 80], "system_parameter_nam": 12, "sz": 75, "t": [22, 23, 43, 44, 47, 66], "tabl": [0, 1, 2, 23, 24, 25, 38, 47, 57, 58, 59, 61, 65, 66, 75], "take": [24, 44, 51], "tardi": 35, "tardis_config_yaml": 35, "tardis_solver_mod": 35, "target": 43, "tau": 67, "tbl": 66, "temp": [57, 58, 59, 61, 70], "tempc": 66, "temperatur": 73, "tempt": 44, "term": [41, 47, 52, 66, 68, 72], "test": [2, 3, 11, 23, 40, 43, 51, 52, 56, 76, 78], "test_add_reflections_simpl": 30, "test_add_sampl": 36, "test_add_sample_exist": 36, "test_affin": 6, "test_as_in_demo_notebook": 30, "test_asdict": [16, 34], "test_assign_axes_error": 34, "test_axes_to_dict": 33, "test_axes_type_annot": 33, "test_axes_xref_empti": 34, "test_axis_invers": 35, "test_backend": [27, 40], "test_bas": [4, 35, 40], "test_cahkl": 36, "test_cahkl_t": 36, "test_calc_ub": 36, "test_choice_funct": 31, "test_compare_float_dict": 33, "test_configur": [15, 40], "test_configuration_export": 16, "test_configurationrunwrapp": 33, "test_constantmonochromaticwavelength": 37, "test_constraint": [15, 40], "test_constraintsbas": 17, "test_creator_r": 31, "test_crystal_class": 18, "test_demo_notebook": [27, 40], "test_dict_device_factori": 33, "test_diffract": [27, 40], "test_diffractometer_class": 31, "test_diffractometer_wh": 31, "test_diffractometerbas": 31, "test_duplicate_reflect": 19, "test_e4cv": [27, 40], "test_e4cv_constant_phi": 31, "test_engin": 6, "test_equ": 18, "test_flatten_list": 33, "test_fromdict": [16, 17, 18, 19, 20], "test_fromdict_keyerror": 17, "test_full_posit": 31, "test_geometri": 6, "test_get_solv": 33, "test_hkl_soleil": [4, 40], "test_hklsolv": 21, "test_incompatiblereflectionsdict": 19, "test_invers": 32, "test_lattic": [15, 40], "test_limit": 31, "test_limits_properti": 17, "test_limitsconstraint": 17, "test_list_orientation_run": 33, "test_list_sampl": 36, "test_load_yaml_fil": 33, "test_local_pseudo_ax": 34, "test_miller_arg": 31, "test_misc": [27, 40], "test_monochromaticxraywavelength_change_unit": 37, "test_monochromaticxraywavelength_set_w": 37, "test_move_forward_with_extra": 31, "test_move_r": 31, "test_null_cor": 31, "test_op": [27, 40], "test_or_swap": 36, "test_orient": 31, "test_pa": 36, "test_pseudos_mov": 32, "test_rais": 17, "test_realaxisconstraint": 17, "test_realaxisconstraintskei": 17, "test_refin": 20, "test_reflect": [15, 40], "test_reflections_fail": 20, "test_reflectionsdict": 19, "test_remove_reflect": 36, "test_remove_sampl": [31, 36], "test_repeat_sampl": 34, "test_repeated_reflect": 31, "test_repr": [17, 18, 20], "test_restor": 16, "test_restore_and_mov": 35, "test_roundoff": 33, "test_sampl": [15, 40], "test_sample_constructor": 20, "test_sample_constructor_no_cor": 20, "test_scan": 32, "test_scan_extra": 31, "test_set_diffractomet": 36, "test_set_energi": 36, "test_set_lattic": 36, "test_set_ub": 31, "test_setor": 36, "test_solv": [7, 15, 29, 40], "test_solverbase_extra": 5, "test_standardize_pseudo": 34, "test_standardize_r": 34, "test_summari": 6, "test_summary_dict": 6, "test_swap": 19, "test_tardi": [27, 40], "test_th_tth_q": [4, 40], "test_transform": 7, "test_unknown_reflect": 34, "test_us": [27, 40], "test_vers": 6, "test_wavelength_support": [27, 40], "test_wh": 36, "test_wrong_real_nam": 19, "tester": 29, "tests_dir": 26, "tetragon": 48, "text": [14, 24, 38], "th": [0, 1, 2, 3, 5, 8, 23, 28, 56, 66, 71, 73], "th2th": 73, "th2tth": 73, "th2tth_atth": 73, "th2tth_q": 73, "th2tth_q_setpoint": 73, "th2tth_spinner": 73, "th2tth_temperatur": 73, "th2tth_th": 73, "th2tth_tth": 73, "th2tth_xy_i": 73, "th2tth_xy_solenoid_lock": 73, "th2tth_xy_x": 73, "th_q_geometri": 8, "th_tth": [8, 43, 56, 71, 73], "th_tth_q": [2, 40, 52, 56], "th_tth_q_geometri": 8, "than": [42, 43, 44, 47, 57, 58, 59, 61, 64], "thei": [44, 59, 64, 65], "them": [0, 2, 23, 65], "theoret": 47, "theta": [8, 28, 52, 56, 57, 58, 61, 65, 66, 71, 73, 76], "thetah": 67, "thi": [0, 1, 2, 3, 8, 10, 12, 13, 17, 22, 23, 24, 25, 38, 40, 41, 43, 44, 45, 47, 49, 51, 52, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81], "thin": 47, "thing": [43, 44], "those": [47, 65, 66, 68, 81], "thought": 44, "three": [44, 47, 62, 68], "through": [47, 57, 58, 61, 64], "thtthsolver": [8, 52, 56, 71, 74], "thu": 38, "tie": 44, "tile": [57, 58, 61, 78], "tilt": [61, 66], "time": [1, 24, 43, 44, 47, 52, 57, 58, 59, 61, 70], "timeout": [38, 59], "timestamp": 73, "tip": 38, "titl": [23, 24, 59], "tl": 60, "tmp_path": 16, "to_hkl": 1, "to_numpi": 1, "todo": [9, 10, 22, 23, 51, 74, 75], "togeth": [10, 44, 45], "tol": [7, 24, 33, 37], "toml": 52, "tool": [43, 44, 53, 59, 75], "top": [23, 24], "track": 70, "tran": 66, "transact": [43, 44, 49], "transform": [1, 3, 7, 8, 22, 23, 41, 43, 44, 47, 49, 50, 60, 63, 64, 68], "transient": [57, 58, 59, 61], "transit": 68, "tre": [22, 23], "triclin": [48, 62, 66, 72], "trigger": [22, 23, 47], "trivial": 5, "trivialsolv": 5, "true": [9, 10, 22, 23, 24, 25, 38, 47, 56, 58, 59, 65, 70, 72, 73, 76, 80], "truncat": 64, "tth": [0, 1, 2, 3, 5, 8, 19, 22, 23, 24, 25, 28, 38, 47, 49, 51, 56, 57, 58, 61, 63, 64, 66, 68, 70, 71, 72, 73, 76], "tth2": [59, 67], "tth_tth": 73, "ttheta": [28, 56, 71], "tupl": [1, 22, 23, 24, 25, 38, 43, 62, 63, 64], "tutori": 69, "two": [0, 1, 2, 3, 8, 12, 13, 23, 24, 25, 38, 41, 47, 50, 51, 52, 56, 57, 58, 59, 61, 63, 64, 65, 68, 71, 75], "twoc": [28, 43, 44, 71], "type": [1, 18, 23, 24, 39, 47, 59, 68, 70], "typic": [50, 57, 61, 68], "u": [1, 14, 24, 38, 43, 44, 56, 57, 58, 59, 61, 64, 65, 66, 68, 70, 72, 76, 80], "ub": [0, 1, 2, 3, 8, 9, 14, 23, 24, 25, 38, 41, 43, 44, 47, 50, 51, 52, 56, 59, 65, 68, 70, 72, 75, 76, 80], "ub_matrix": 66, "uchicago": [77, 79], "uid": [24, 59, 70], "uncertainti": 12, "unconfigur": 70, "undefin": [10, 13], "undefined_label": 10, "under": [70, 77, 79], "underflow": 1, "underli": [0, 1, 2, 23, 47], "underneath": 44, "undesir": 68, "undo": 75, "unfreez": 75, "uniqu": [24, 38, 57, 58, 59, 61], "unique_nam": 24, "unit": [23, 29, 36, 38, 39, 47, 50, 51, 65, 68, 79], "unknown": [43, 44], "uno": [22, 23], "unord": 13, "unspecifi": [22, 23], "until": 74, "unus": 13, "unused_reflect": 13, "up": [47, 71, 77], "updat": [1, 41, 75], "us": [0, 1, 2, 8, 10, 12, 13, 14, 22, 23, 24, 25, 38, 39, 42, 43, 44, 49, 50, 51, 52, 56, 59, 60, 62, 63, 64, 65, 68, 70, 71, 72, 73, 77, 79, 80], "usabl": 1, "user": [0, 2, 13, 22, 23, 24, 25, 29, 40, 41, 43, 44, 47, 52, 56, 57, 58, 61, 65, 66, 67, 68, 75, 77, 79, 80], "userwarn": 73, "usual": 68, "util": 59, "uuid": 24, "v": [39, 47, 59, 66], "v0": 66, "v1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82], "v10": 66, "v11": 66, "v12": 66, "v13": 66, "v14": 66, "v15": 66, "v16": 66, "v17": 66, "v18": 66, "v19": 66, "v2": [57, 58, 59, 61, 66, 70], "v20": 66, "v21": 66, "v3": 66, "v4": 66, "v5": [1, 49, 66], "v6": 66, "v7": 66, "v8": 66, "v9": 66, "v_hklpy": 66, "v_spec": 66, "valid": [9, 10, 13, 17, 23, 24, 25, 38, 43, 44], "valu": [1, 8, 10, 12, 13, 16, 17, 19, 22, 23, 24, 25, 31, 33, 34, 38, 47, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 72, 73, 76], "valueerror": [23, 24, 47], "varieti": [47, 73], "variou": [22, 23, 25, 32, 56], "varphi": 61, "vec": [57, 58, 61], "vector": [43, 44, 57, 58, 59, 61, 68, 72, 75], "verifi": [23, 24, 57, 58, 61], "versa": 44, "version": [0, 1, 2, 3, 8, 23, 24, 38, 49, 56, 57, 58, 61, 65, 70, 71, 72, 76, 77, 80], "vertic": [22, 23, 28, 51, 57, 58, 67, 71, 76], "via": [46, 66], "vibranium": [38, 47, 56, 59, 70, 75], "vice": 44, "view": [70, 77], "virtual": [41, 59, 73], "voltag": [23, 39], "vortot": 66, "w": 66, "wa": [52, 56, 57, 58, 59, 80], "wai": [44, 78], "wait": [58, 76], "warn": 73, "warranti": 79, "wavelength": [1, 7, 8, 13, 19, 22, 23, 24, 25, 31, 35, 37, 38, 39, 41, 43, 49, 50, 51, 56, 57, 59, 60, 62, 63, 66, 68, 70, 71, 72, 73, 76, 80], "wavelength_support": [23, 24, 40, 54], "wavelength_unit": [24, 39, 57, 58, 65, 70], "wavelengthbas": [23, 39, 47], "wavelengtherror": [23, 24], "we": [44, 47, 49, 51, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 76], "wed": 66, "were": [51, 57, 58, 61], "wh": [22, 23, 38, 43, 44, 56, 57, 58, 59, 60, 61, 65, 71, 72, 73, 75, 76, 80], "what": [44, 60, 71, 81], "when": [10, 22, 23, 25, 31, 38, 43, 44, 47, 59, 68, 70, 76], "where": [24, 38, 44, 45, 50, 52, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 76, 80], "whether": 73, "which": [0, 2, 10, 12, 17, 22, 23, 24, 41, 42, 47, 51, 56, 57, 58, 59, 60, 61, 64, 67, 68, 72], "while": [59, 68, 76], "wide": 59, "wiki": [9, 41, 47, 48], "wikipedia": [41, 47, 48], "window": [1, 52], "wish": 43, "within": 68, "without": [1, 52, 64, 79], "word": [22, 23], "work": [56, 59, 68, 70, 74, 79, 81], "world": 77, "would": [47, 71, 79], "wrap": [1, 43, 44], "wrapper": [23, 24, 47, 57, 58, 59, 61, 70], "writabl": [1, 38, 67], "write": [23, 24, 38, 43, 44, 56, 72], "write_access": 49, "written": [0, 1, 2, 23, 47, 52, 56, 74, 79], "wsb": 66, "wsl": 66, "wspace": 66, "wsr": 66, "wst": 66, "wunit": 37, "x": [0, 1, 2, 3, 8, 23, 24, 38, 39, 43, 47, 57, 58, 59, 61, 65, 67, 68, 70, 73], "x86_64": [1, 44], "xrai": [57, 58, 61], "xray_energy_equivalent_": 39, "xrayutil": [43, 44], "xt1": 66, "xy": 73, "xystag": 73, "y": [0, 1, 2, 3, 8, 23, 38, 58, 61, 67, 73, 78], "yaml": [22, 23, 24, 70], "ye": 73, "year": 44, "yellow": 59, "yet": [10, 45, 56], "yield": 75, "yml": [22, 23, 65, 70, 72], "yong": 60, "you": [43, 44, 47, 59, 70, 76], "your": 47, "yt1": 66, "yt2": 66, "yt3": 66, "z": [0, 1, 2, 3, 8, 23, 38, 57, 66, 67], "zero": [45, 57, 58, 65, 66], "zip": 78, "zone": [13, 43, 44, 47, 75], "zorinvm": 73, "zt1": 66}, "titles": ["hklpy2.backends.base", "hklpy2.backends.hkl_soleil", "hklpy2.backends", "hklpy2.backends.no_op", "hklpy2.backends.tests", "hklpy2.backends.tests.test_base", "hklpy2.backends.tests.test_hkl_soleil", "hklpy2.backends.tests.test_th_tth_q", "hklpy2.backends.th_tth_q", "hklpy2.blocks.configure", "hklpy2.blocks.constraints", "hklpy2.blocks", "hklpy2.blocks.lattice", "hklpy2.blocks.reflection", "hklpy2.blocks.sample", "hklpy2.blocks.tests", "hklpy2.blocks.tests.test_configure", "hklpy2.blocks.tests.test_constraints", "hklpy2.blocks.tests.test_lattice", "hklpy2.blocks.tests.test_reflection", "hklpy2.blocks.tests.test_sample", "hklpy2.blocks.tests.test_solver", "hklpy2.diffract", "hklpy2", "hklpy2.misc", "hklpy2.ops", "hklpy2.tests.common", "hklpy2.tests", "hklpy2.tests.models", "hklpy2.tests.test_backends", "hklpy2.tests.test_demo_notebook", "hklpy2.tests.test_diffract", "hklpy2.tests.test_e4cv", "hklpy2.tests.test_misc", "hklpy2.tests.test_ops", "hklpy2.tests.test_tardis", "hklpy2.tests.test_user", "hklpy2.tests.test_wavelength_support", "hklpy2.user", "hklpy2.wavelength_support", "API Reference", "Concepts", "Overview", "Feature Checklist for v2", "Design for hklpy2", "Constraints", "Diffractometer creator", "Diffractometer", "Crystal Lattice", "Core Operations", "Orientation Reflection", "Sample", "Solvers", "User Friendliness", "Wavelength", "Examples", "Demonstrate <strong>hklpy2</strong>\u2019s API", "<strong>hkl_soleil</strong> E4CH", "<strong>hkl_soleil</strong> E4CV", "<strong>hkl_soleil</strong> E6C psi axis", "<strong>hkl_soleil</strong> E6C test of calculations", "<strong>hkl_soleil</strong> K4CV", "<strong>hkl_soleil</strong> Refine lattice from 3 reflections", "<strong>hkl_soleil</strong> UB matrix : calculate from 2 reflections.", "<strong>hkl_soleil</strong> UB matrix : Set directly", "NSLS-II tardis diffractometer", "Compare <strong>hkl_soleil</strong> <strong>E4CV</strong> with <strong>SPEC</strong> <strong>fourc</strong>", "Diffractometers", "Glossary", "Guides", "Diffractometer Configuration \u2013 Save and Restore", "Diffractometer Axis Names", "Diffractometer Extra Solver Parameters", "Diffractometer Extra Motors", "How to write a new Solver", "SPEC commands in hklpy2", "Use <code class=\"docutils literal notranslate\"><span class=\"pre\">E4CV</span></code>\u2019s $Q$ calculation engine", "hklpy2", "Installation", "License", "Quickstart", "Releases", "User Guide"], "titleterms": {"": [56, 76], "0": [44, 58, 60, 81], "002": 72, "010": 60, "011": 60, "040": [57, 58, 61], "0k0": [57, 58], "1": [60, 81], "100": 60, "111": 59, "120": 60, "2": [63, 67, 73], "2020": 44, "220": 72, "222": 72, "3": [62, 67], "4": 56, "400": [57, 58, 61], "440": [57, 58, 61], "4c": 67, "6c": 67, "A": 47, "_2": 59, "about": 77, "add": [57, 58, 61, 62, 63, 65, 73], "addit": [44, 56, 71, 73], "an": [45, 51], "ani": 59, "ap": 67, "api": [40, 44, 56], "appli": 45, "assign": 71, "attribut": [0, 1, 3, 8, 9, 10, 12, 13, 14, 16, 19, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 39], "auto": 71, "avail": 67, "ax": [56, 67, 71, 73], "axi": [45, 59, 71], "backend": [0, 1, 2, 3, 4, 5, 6, 7, 8], "base": 0, "basic": 56, "between": 44, "block": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "blueski": [47, 57, 58, 61], "calcul": [57, 60, 63, 65, 72, 76], "can": 73, "chang": [45, 56, 62], "check": [57, 58, 61], "checklist": 43, "chi": [57, 58], "circl": [56, 73], "class": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 14, 17, 22, 23, 24, 25, 28, 38, 39, 71], "command": 75, "common": 26, "compar": 66, "comparison": 65, "comput": [51, 57, 58, 59, 60, 61, 62, 63], "concept": 41, "concis": 59, "conda": 78, "configur": [9, 57, 58, 70], "constrain": [57, 58, 61], "constraint": [10, 45], "content": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "coordin": 44, "core": [47, 49], "creat": [56, 60, 62, 63, 64, 65, 76], "creator": [46, 71], "crystal": [48, 57, 58, 60, 61], "current": 45, "custom": 71, "cut": 45, "data": [65, 66], "default": [62, 63, 64], "defin": [47, 51, 57, 58, 59, 61, 71], "demonstr": 56, "design": [44, 56], "desir": 44, "develop": 78, "devic": 73, "differ": 44, "diffract": [22, 60, 72], "diffractomet": [46, 47, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76], "diffractometerbas": 47, "directli": 64, "double_diffract": 72, "down": 60, "e4ch": [57, 67], "e4cv": [58, 66, 67, 72, 76], "e6c": [59, 60, 67], "easi": 56, "eh2": 67, "energi": 47, "engin": 76, "entrypoint": 44, "esrf": 67, "everi": 70, "exampl": [51, 55, 64], "except": [23, 24], "experiment": 65, "export": 70, "extra": [56, 72, 73], "featur": 43, "file": [65, 66, 70], "first": [57, 58, 61], "fix": 59, "forg": 78, "forward": [57, 58, 61], "fourc": [56, 66], "freez": 45, "friendli": 53, "from": [44, 57, 58, 60, 62, 63, 66, 70], "function": [1, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "geometri": [47, 67], "given": 60, "glossari": 68, "goal": 56, "guid": [69, 82], "h00": [57, 58, 61], "h40": 58, "hk0": [57, 58, 61], "hkl": [59, 60, 65, 66, 72], "hkl_2": 59, "hkl_soleil": [1, 52, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67], "hklpy": [44, 57, 58, 61, 66], "hklpy2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 44, 56, 57, 58, 75, 77], "how": [52, 74], "i": 60, "id01": 67, "idea": 44, "ii": 65, "inform": 56, "instal": 78, "invers": [57, 58, 61], "k4cv": [61, 67], "k6c": 67, "kappa": 67, "kept": 60, "lattic": [12, 47, 48, 51, 60, 62], "licens": 79, "limit": [57, 58], "load": 70, "mar": 67, "matrix": [51, 57, 58, 60, 61, 63, 64, 66], "med1": 67, "med2": 67, "misc": 24, "mode": 47, "model": 28, "modul": [0, 1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "motion": 59, "motor": [51, 57, 58, 60, 61, 65, 73], "move": [59, 65], "name": [47, 71], "nanoscopium": 67, "new": [64, 74], "no_op": [3, 52], "notic": 81, "now": 60, "nsl": 65, "number": 67, "object": [47, 62, 63, 64, 65, 76], "omega": 60, "one": 61, "op": 25, "oper": 49, "orient": [47, 50, 51, 56, 57, 58, 59, 61, 65, 66], "other": [44, 73], "our": [57, 58, 61], "out": [63, 64], "overview": [41, 42, 59], "p09": 67, "p23": 67, "packag": [2, 23, 27, 56], "paramet": 72, "part": 47, "petra3": 67, "pip": 78, "plane": 72, "plot": [59, 66], "pm": 60, "polar": 67, "posit": [51, 60, 65], "position": 73, "previou": 70, "project": 44, "pseudo": 73, "psi": 59, "psic": 67, "pypi": 78, "python": 44, "q": [59, 67, 76], "quick": 64, "quickstart": 80, "rang": [57, 58], "read": 66, "real": 67, "reciproc": [57, 58, 61], "refer": 40, "refin": 62, "reflect": [13, 44, 47, 50, 51, 56, 57, 58, 60, 61, 62, 63], "releas": [44, 81], "report": [57, 58, 61], "restor": 70, "review": 44, "rfp": 44, "robot": 67, "run": 70, "runengin": 47, "sampl": [14, 47, 51, 56, 57, 58, 59, 61, 62, 65], "save": [65, 70], "scan": [57, 58, 59, 61, 66], "second": [57, 58, 61, 72], "select": 52, "set": [59, 64, 65], "setup": [57, 58, 59, 60, 61, 66], "show": [45, 57, 58, 60], "signal": 73, "simul": [56, 59, 60], "siriu": 67, "six": 67, "soleil": 67, "solver": [44, 52, 67, 72, 74], "sourc": [44, 65, 78], "space": [57, 58, 61], "spec": [66, 75], "specifi": [57, 58, 61], "standard": 73, "step": [47, 59], "structur": [57, 58, 61], "submodul": [2, 4, 11, 15, 23, 27], "summari": 59, "support": 44, "system": 44, "tabl": 67, "tardi": 65, "terminologi": 44, "test": [4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 57, 58, 60, 61, 66], "test_backend": 29, "test_bas": 5, "test_configur": 16, "test_constraint": 17, "test_demo_notebook": 30, "test_diffract": 31, "test_e4cv": 32, "test_hkl_soleil": 6, "test_lattic": 18, "test_misc": 33, "test_op": 34, "test_reflect": 19, "test_sampl": 20, "test_solv": 21, "test_tardi": 35, "test_th_tth_q": 7, "test_us": 36, "test_wavelength_support": 37, "th": 67, "th_tth": [52, 67], "th_tth_q": 8, "thi": [57, 58, 61], "trajectori": 66, "try": [63, 64], "tth": 67, "turret": 67, "two": 60, "u": 60, "ub": [57, 58, 60, 61, 63, 64, 66], "upsid": 60, "us": [47, 57, 58, 61, 66, 76], "user": [38, 53, 71, 82], "v1": 44, "v2": [43, 44, 67], "variou": 60, "varphi": [58, 60], "verifi": 60, "wavelength": [47, 54, 58, 61, 65], "wavelength_support": 39, "we": 73, "write": [52, 74], "zaxi": 67}})